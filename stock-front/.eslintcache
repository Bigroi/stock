[{"D:\\git\\stock\\stock-front\\src\\index.js":"1","D:\\git\\stock\\stock-front\\src\\App.js":"2","D:\\git\\stock\\stock-front\\src\\reportWebVitals.js":"3","D:\\git\\stock\\stock-front\\src\\pages\\Main.js":"4","D:\\git\\stock\\stock-front\\src\\pages\\public\\Landing.js":"5","D:\\git\\stock\\stock-front\\src\\util\\i18n.js":"6","D:\\git\\stock\\stock-front\\src\\util\\Config.js":"7","D:\\git\\stock\\stock-front\\src\\util\\ApiUrls.js":"8","D:\\git\\stock\\stock-front\\src\\components\\language-switcher\\LanguageSwitcher.js":"9","D:\\git\\stock\\stock-front\\src\\components\\form\\Form.js":"10","D:\\git\\stock\\stock-front\\src\\components\\input\\Button.js":"11","D:\\git\\stock\\stock-front\\src\\components\\input\\Input.js":"12","D:\\git\\stock\\stock-front\\src\\components\\message\\Message.js":"13","D:\\git\\stock\\stock-front\\src\\util\\Request.js":"14","D:\\git\\stock\\stock-front\\src\\util\\LocalStrorageParams.js":"15","D:\\git\\stock\\stock-front\\src\\components\\checkbox\\CheckBox.js":"16","D:\\git\\stock\\stock-front\\src\\components\\map\\Map.js":"17","D:\\git\\stock\\stock-front\\src\\forms\\login\\LoginForm.js":"18","D:\\git\\stock\\stock-front\\src\\forms\\registration\\RegistrationForm.js":"19","D:\\git\\stock\\stock-front\\src\\pages\\user\\UserMain.js":"20","D:\\git\\stock\\stock-front\\src\\util\\LocalStorage.js":"21","D:\\git\\stock\\stock-front\\src\\forms\\feed-back\\FeedBackForm.js":"22","D:\\git\\stock\\stock-front\\src\\util\\VerificationUtils.js":"23","D:\\git\\stock\\stock-front\\src\\components\\input\\TextArea.js":"24","D:\\git\\stock\\stock-front\\src\\forms\\account\\AccountForm.js":"25","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Lots.js":"26","D:\\git\\stock\\stock-front\\src\\components\\table\\Table.js":"27","D:\\git\\stock\\stock-front\\src\\forms\\lot\\LotForm.js":"28","D:\\git\\stock\\stock-front\\src\\components\\input\\Calendar.js":"29","D:\\git\\stock\\stock-front\\src\\components\\input\\File.js":"30","D:\\git\\stock\\stock-front\\src\\components\\input\\Dropdown.js":"31","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Tenders.js":"32","D:\\git\\stock\\stock-front\\src\\forms\\tender\\TenderForm.js":"33","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Products.js":"34","D:\\git\\stock\\stock-front\\src\\forms\\product\\ProductForm.js":"35","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Categories.js":"36","D:\\git\\stock\\stock-front\\src\\forms\\category\\CategoryForm.js":"37","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Companies.js":"38"},{"size":597,"mtime":1607784809520,"results":"39","hashOfConfig":"40"},{"size":138,"mtime":1607551779928,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"40"},{"size":1127,"mtime":1608673669173,"results":"43","hashOfConfig":"40"},{"size":14890,"mtime":1608229109370,"results":"44","hashOfConfig":"40"},{"size":812,"mtime":1608164508880,"results":"45","hashOfConfig":"40"},{"size":653,"mtime":1607548861867,"results":"46","hashOfConfig":"40"},{"size":1476,"mtime":1608811417226,"results":"47","hashOfConfig":"40"},{"size":2400,"mtime":1608229109386,"results":"48","hashOfConfig":"40"},{"size":2174,"mtime":1608231643672,"results":"49","hashOfConfig":"40"},{"size":373,"mtime":1608072852394,"results":"50","hashOfConfig":"40"},{"size":1211,"mtime":1608222193604,"results":"51","hashOfConfig":"40"},{"size":520,"mtime":1608686517851,"results":"52","hashOfConfig":"40"},{"size":4384,"mtime":1608230709661,"results":"53","hashOfConfig":"40"},{"size":233,"mtime":1608208502396,"results":"54","hashOfConfig":"40"},{"size":634,"mtime":1608168347370,"results":"55","hashOfConfig":"40"},{"size":1371,"mtime":1608165423650,"results":"56","hashOfConfig":"40"},{"size":2998,"mtime":1608210012384,"results":"57","hashOfConfig":"40"},{"size":12558,"mtime":1608168347388,"results":"58","hashOfConfig":"40"},{"size":12046,"mtime":1608811417158,"results":"59","hashOfConfig":"40"},{"size":578,"mtime":1608688027828,"results":"60","hashOfConfig":"40"},{"size":3030,"mtime":1608215806928,"results":"61","hashOfConfig":"40"},{"size":962,"mtime":1607549256410,"results":"62","hashOfConfig":"40"},{"size":796,"mtime":1608420640695,"results":"63","hashOfConfig":"40"},{"size":7381,"mtime":1608231643658,"results":"64","hashOfConfig":"40"},{"size":7035,"mtime":1608761585673,"results":"65","hashOfConfig":"40"},{"size":5054,"mtime":1608759871054,"results":"66","hashOfConfig":"40"},{"size":12809,"mtime":1608763374210,"results":"67","hashOfConfig":"40"},{"size":1079,"mtime":1608684906138,"results":"68","hashOfConfig":"40"},{"size":670,"mtime":1608675473542,"results":"69","hashOfConfig":"40"},{"size":1190,"mtime":1608762657300,"results":"70","hashOfConfig":"40"},{"size":7201,"mtime":1608762657284,"results":"71","hashOfConfig":"40"},{"size":13201,"mtime":1608763374193,"results":"72","hashOfConfig":"40"},{"size":3795,"mtime":1608776257579,"results":"73","hashOfConfig":"40"},{"size":2411,"mtime":1608776257619,"results":"74","hashOfConfig":"40"},{"size":3135,"mtime":1608777470376,"results":"75","hashOfConfig":"40"},{"size":1913,"mtime":1608776257441,"results":"76","hashOfConfig":"40"},{"size":2194,"mtime":1608811417275,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"13r9h7f",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"80"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"80"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"80"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"80"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\git\\stock\\stock-front\\src\\index.js",[],["164","165"],"D:\\git\\stock\\stock-front\\src\\App.js",[],"D:\\git\\stock\\stock-front\\src\\reportWebVitals.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\Main.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\Landing.js",["166","167"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport LanguageSwitcher from '../../components/language-switcher/LanguageSwitcher';\r\nimport i18n from 'i18next';\r\nimport Button from '../../components/input/Button';\r\nimport Form from '../../components/form/Form';\r\nimport LoginForm from '../../forms/login/LoginForm';\r\nimport RegistrationForm from \"../../forms/registration/RegistrationForm\";\r\n\r\n/**\r\n * onLoginSuccess: function\r\n */\r\nclass Landing extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            form: null\r\n        }\r\n    }\r\n\r\n    getForm = () => {\r\n        if (this.state.form === 'login') {\r\n            return <Form\r\n                className='login-dialogbox'\r\n                onClose={() => this.setState({form: null})}\r\n            >\r\n                <LoginForm\r\n                    toRegistration={() => this.setState({form: 'registration'})}\r\n                    onLoginSuccess={this.props.onLoginSuccess}\r\n                />\r\n            </Form>\r\n        } else if (this.state.form === 'registration') {\r\n            return <Form\r\n                className='registration-dialogbox'\r\n                map={true}\r\n                onClose={() => this.setState({form: null})}\r\n            >\r\n                <RegistrationForm\r\n                    toLogin={() => this.setState({form: 'login'})}\r\n                    onRegistrationSuccess={this.props.onLoginSuccess}\r\n                />\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <div className='wrapper'>\r\n            {this.getForm()}\r\n            <div className='content'>\r\n                <header>\r\n                    <div className='container'>\r\n                        <img className='logo' src='/img/logo.png' alt='YourTrader' title='YourTrader'/>\r\n                        <nav className='main-page-nav'>\r\n                            <a href='#ex2'>{t('label.index.benefits')}</a>\r\n                            <a href='#ex3'>{t('label.index.products')}</a>\r\n                            <a href='#ex4'>{t('label.index.for_whom')}</a>\r\n                            <a href='#ex5'>{t('label.index.try_it_now')}</a>\r\n                        </nav>\r\n                        <div className='buttons-login'>\r\n                            <Button className='registration background-blue registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}>\r\n                                {t('label.navigation.regestration')}\r\n                            </Button>\r\n                            <Button className='sign-in login-button' onClick={() => this.setState({form: 'login'})}>\r\n                                {t('label.navigation.login')}\r\n                            </Button>\r\n                        </div>\r\n                        <LanguageSwitcher\r\n                            menuClass='selectmenu-menu-landing'\r\n                            onChange={lang => i18n.changeLanguage(lang)}\r\n                            current={i18n.language}\r\n                        />\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <div className='front' id='ex1'>\r\n                        <div className='container'>\r\n                            <span className='span_h1'>{t('label.index.description_title')}</span>\r\n                            <h1 className='front-desc'>{t('label.index.description')}</h1>\r\n                            <div className='front-desc-but'>\r\n                                <div className='reg-as'>{t('label.index.regestrate_as_farmer')} </div>\r\n                                <div className='reg-but'>\r\n                                    <Button\r\n                                        className='req-far background-green registration-button'\r\n                                        onClick={() => this.setState({form: 'registration'})}\r\n                                    >\r\n                                        {t('label.index.farmer')}\r\n                                    </Button>\r\n                                    <div>{t('label.index.regestrate_as_buyer')}</div>\r\n                                    <Button\r\n                                        className='req-buy background-blue registration-button'\r\n                                        onClick={() => this.setState({form: 'registration'})}\r\n                                    >\r\n                                        {t('label.index.buyer')}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='advantages' id='ex2'>\r\n                        <div className='container'>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/organic.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.speed_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.speed_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/trusted.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.trust_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.trust_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/deal.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.deal_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.deal_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/platform.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.convenient_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.convenient_description')}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='products' id='ex3'>\r\n                        <div className='container'>\r\n                            <span className='span_h3'>{t('label.index.products')}</span>\r\n                            <div className='product-cont unauthorised slider'/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='for-whom' id='ex4'>\r\n                        <div className='for-farmers'>\r\n                            <div className='for-farm-cont'>\r\n                                <span className='span_h3'>{t('label.index.for_farmers')}</span>\r\n                                <ul>\r\n                                    <li>{t('label.index.for_farmers_li1')}</li>\r\n                                    <li>{t('label.index.for_farmers_li2')}</li>\r\n                                    <li>{t('label.index.for_farmers_li3')}</li>\r\n                                </ul>\r\n                                <Button\r\n                                    className='start-trade background-green registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.start_trade_now')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='for-buyers'>\r\n                            <div className='for-buyers-cont'>\r\n                                <span className='span_h3'>{t('label.index.for_buyers')}</span>\r\n                                <ul>\r\n                                    <li>{t('label.index.for_buyers_li1')}</li>\r\n                                    <li>{t('label.index.for_buyers_li2')}</li>\r\n                                    <li>{t('label.index.for_buyers_li3')}</li>\r\n                                </ul>\r\n                                <Button\r\n                                    className='start-buy background-blue registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.start_buy_now')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='about-us' id='about-us'>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.about_us_title')}</span>\r\n                                <p>{t('label.index.about_us_text_one')}</p>\r\n                                <p>{t('label.index.about_us_text_two')}</p>\r\n                            </div>\r\n                            <div>\r\n                                <video width='640' height='480' controls>\r\n                                    <source src='/video/demo.mp4' type='video/mp4'/>\r\n                                </video>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='question' id=''>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.frequently_asked_question')}</span>\r\n                                <p className='answer'>{t('label.index.not_found_answer')}</p>\r\n                                <p className='mail'><a href=''>info@yourtrader.eu</a></p>\r\n                            </div>\r\n                            <div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_one')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_one')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_two')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_two')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_three')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_three')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_four')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_four')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='preview-platform'>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.responsive_title')}</span>\r\n                                <p>{t('label.index.responsive_description')}</p>\r\n                                <Button\r\n                                    className='register background-green registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.registrate')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n            <footer>\r\n                <div className='container'>\r\n                    <div className='contacts'>\r\n                        <p className='phone'>\r\n                            {t('label.index.phone_prefix')}<span>{t('label.index.phone')}</span>\r\n                        </p>\r\n                        <p className='mail'><a href=''>{t('label.index.email')}</a></p>\r\n                    </div>\r\n                    <div className='copyright'>\r\n                        {t('label.index.copyright')}\r\n                    </div>\r\n                </div>\r\n                <div className='button_up'/>\r\n            </footer>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Landing);","D:\\git\\stock\\stock-front\\src\\util\\i18n.js",[],"D:\\git\\stock\\stock-front\\src\\util\\Config.js",["168"],"import ProdConfig from '../config-prod.json';\r\nimport TestConfig from '../config-test.json';\r\nimport DevConfig from '../local-config.json';\r\n\r\nexport default {\r\n    getConfig: () => {\r\n        if (process.env.NODE_ENV === 'production') {\r\n            if (window && window.location && window.location.href\r\n                && !window.location.href.startsWith('http://test.yourtrader.eu')\r\n                && !window.location.href.startsWith('https://test.yourtrader.eu')) {\r\n\r\n                return ProdConfig;\r\n            } else {\r\n                return TestConfig;\r\n            }\r\n        } else {\r\n            return DevConfig;\r\n        }\r\n    }\r\n}","D:\\git\\stock\\stock-front\\src\\util\\ApiUrls.js",[],"D:\\git\\stock\\stock-front\\src\\components\\language-switcher\\LanguageSwitcher.js",[],"D:\\git\\stock\\stock-front\\src\\components\\form\\Form.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Button.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Input.js",[],"D:\\git\\stock\\stock-front\\src\\components\\message\\Message.js",[],"D:\\git\\stock\\stock-front\\src\\util\\Request.js",[],"D:\\git\\stock\\stock-front\\src\\util\\LocalStrorageParams.js",[],"D:\\git\\stock\\stock-front\\src\\components\\checkbox\\CheckBox.js",[],"D:\\git\\stock\\stock-front\\src\\components\\map\\Map.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\login\\LoginForm.js",["169"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Input from '../../components/input/Input';\r\nimport Button from '../../components/input/Button';\r\nimport Request from \"../../util/Request\";\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Message, {TYPES} from \"../../components/message/Message\";\r\n\r\n/**\r\n * toRegistration: function\r\n * onLoginSuccess: function\r\n */\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    loginRequest = () => {\r\n        const {t} = this.props;\r\n        Request.doPost(ApiUrls.AUTHENTICATE, null, this.state)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    const authParams = await response.text();\r\n                    this.props.onLoginSuccess(JSON.parse(authParams));\r\n                } else {\r\n                    this.setState({\r\n                        errorMessage: {\r\n                            type: TYPES.ERROR,\r\n                            value: t('label.index.login_error')\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form' id='login-form'>\r\n            <h3>{t('label.login.loginForm')}</h3>\r\n            <p>{t('label.login.dontHaveAcc')}\r\n                <span className='go_to_registration' onClick={this.props.toRegistration}>\r\n                    <span>{t('label.login.registerHere')}</span>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <Message message={this.state.errorMessage}/>\r\n            </div>\r\n            <Input\r\n                id='Login'\r\n                label={t('label.login.login')}\r\n                type='email'\r\n                name='username'\r\n                placeholder='johndoe@mail.xx'\r\n                value={this.state.username}\r\n                onChange={(newValue) => this.setState({username: newValue})}\r\n            />\r\n\r\n            <Input\r\n                id='Password'\r\n                label={t('label.login.password')}\r\n                type='password'\r\n                name='password'\r\n                placeholder='***********'\r\n                maxLength={50}\r\n                value={this.state.password}\r\n                onChange={(newValue) => this.setState({password: newValue})}\r\n                underline={<a id='reset'><span>{t('label.login.forgot')}</span></a>}\r\n            />\r\n            <div>\r\n                <div id='form-list'>\r\n                    <Button id='login' className='submit button' onClick={this.loginRequest}>\r\n                        {t('label.button.login')}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LoginForm);","D:\\git\\stock\\stock-front\\src\\forms\\registration\\RegistrationForm.js",["170"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Input from '../../components/input/Input';\r\nimport Button from '../../components/input/Button';\r\nimport Request from '../../util/Request';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Message, {TYPES} from '../../components/message/Message';\r\nimport i18next from 'i18next';\r\nimport CheckBox from '../../components/checkbox/CheckBox';\r\n\r\n/**\r\n * toLogin: function\r\n * onRegistrationSuccess: function\r\n * onAddressChanged: function\r\n */\r\nclass RegistrationForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userData: {\r\n                username: '',\r\n                password: '',\r\n                passwordRepeat: '',\r\n                companyName: '',\r\n                phone: '',\r\n                regNumber: '',\r\n                city: '',\r\n                country: '',\r\n                address: '',\r\n                latitude: 0,\r\n                longitude: 0\r\n            },\r\n            errorFields: {\r\n                username: false,\r\n                password: false,\r\n                passwordRepeat: false,\r\n                companyName: false,\r\n                phone: false,\r\n                regNumber: false,\r\n                city: false,\r\n                country: false,\r\n                address: false\r\n            },\r\n            agree: false,\r\n            agreeError: false,\r\n            step: 1,\r\n            message: null\r\n        }\r\n    }\r\n\r\n    register = () => {\r\n        const {t} = this.props;\r\n        if (this.validateEmptyFields() & this.validateAgree()) {\r\n            const data = {...this.state.userData, language: i18next.language};\r\n            Request.doPost(ApiUrls.REGISTRATION, null, data)\r\n                .then(async response => {\r\n                    const text = await response.text();\r\n                    if (response.ok) {\r\n                        const json = JSON.parse(text);\r\n                        this.props.onRegistrationSuccess(json);\r\n                    } else {\r\n                        this.setState({\r\n                            message: {\r\n                                type: TYPES.ERROR,\r\n                                value: t(text)\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    validateAgree = () => {\r\n        this.setState({agreeError: !this.state.agree});\r\n        return this.state.agree;\r\n    };\r\n\r\n    validateEmptyFields = () => {\r\n        const errorFieldNames = [];\r\n        if (this.state.step === 1) {\r\n            if (this.state.userData.username === '') {\r\n                errorFieldNames.push('username');\r\n            }\r\n            if (this.state.userData.password === '') {\r\n                errorFieldNames.push('password');\r\n            }\r\n            if (this.state.userData.passwordRepeat === '') {\r\n                errorFieldNames.push('passwordRepeat');\r\n            }\r\n            if (this.state.userData.companyName === '') {\r\n                errorFieldNames.push('companyName');\r\n            }\r\n            if (this.state.userData.phone === '') {\r\n                errorFieldNames.push('phone');\r\n            }\r\n            if (this.state.userData.regNumber === '') {\r\n                errorFieldNames.push('regNumber');\r\n            }\r\n        } else {\r\n            if (this.state.userData.city === '') {\r\n                errorFieldNames.push('city');\r\n            }\r\n            if (this.state.userData.country === '') {\r\n                errorFieldNames.push('country');\r\n            }\r\n            if (this.state.userData.address === '') {\r\n                errorFieldNames.push('address');\r\n            }\r\n        }\r\n        if (errorFieldNames.length === 0) {\r\n            return true;\r\n        } else {\r\n            const errorFields = {};\r\n            errorFieldNames.forEach(name => errorFields[name] = true);\r\n            this.setState({errorFields: errorFields});\r\n            return false;\r\n        }\r\n    };\r\n\r\n    toStep2 = () => {\r\n        const {t} = this.props;\r\n        const noEmptyFields = this.validateEmptyFields();\r\n        if (this.state.userData.password !== this.state.userData.passwordRepeat) {\r\n            this.setState({\r\n                message: {\r\n                    type: TYPES.ERROR,\r\n                    value: t('label.account.error_password')\r\n                }\r\n            });\r\n        } else if (noEmptyFields) {\r\n            this.setState({step: 2, message: null});\r\n        }\r\n    };\r\n\r\n    setFieldValue = (fieldName, value) => {\r\n        this.setState({\r\n            userData: {\r\n                ...this.state.userData,\r\n                [fieldName]: value\r\n            },\r\n            errorFields: {\r\n                ...this.state.errorFields,\r\n                [fieldName]: value.length === 0\r\n            }\r\n        });\r\n\r\n        if (fieldName === 'city' || fieldName === 'country' || fieldName === 'address') {\r\n            this.changeAddress(fieldName, value);\r\n        }\r\n    };\r\n\r\n    changeAddress = (fieldName, value) => {\r\n        const address = {\r\n            city: this.state.userData.city,\r\n            country: this.state.userData.country,\r\n            address: this.state.userData.address,\r\n            [fieldName]: value\r\n        };\r\n\r\n        if (this.state.timer) {\r\n            clearTimeout(this.state.timer);\r\n        }\r\n        const timer = setTimeout(() =>\r\n            this.props.onAddressChanged(address).then(coords =>\r\n                this.setState({\r\n                    userData: {\r\n                        ...this.state.userData,\r\n                        language: coords.language,\r\n                        longitude: coords.longitude\r\n                    }\r\n                })\r\n            ), 1000);\r\n\r\n        this.setState({timer : timer})\r\n    };\r\n\r\n    getFirstPart = () => {\r\n        const {t} = this.props;\r\n        return <div className='registration-first-part'>\r\n            <div className='flex-input'>\r\n                <Input\r\n                    id='Login'\r\n                    label={t('label.account.login')}\r\n                    type='email'\r\n                    name='username'\r\n                    placeholder='johndoe@mail.xx'\r\n                    value={this.state.userData.username}\r\n                    error={this.state.errorFields.username}\r\n                    onChange={(newValue) => this.setFieldValue('username', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='Phone'\r\n                    label={t('label.account.phone')}\r\n                    type='text'\r\n                    name='phone'\r\n                    placeholder={t('label.account.phone_placeholder')}\r\n                    value={this.state.userData.phone}\r\n                    error={this.state.errorFields.phone}\r\n                    onChange={(newValue) => this.setFieldValue('phone', newValue)}\r\n                    pattern={t('label.account.phone_pattern')}\r\n                />\r\n\r\n                <Input\r\n                    id='CompanyName'\r\n                    label={t('label.account.company_name')}\r\n                    type='text'\r\n                    name='companyName'\r\n                    placeholder='Stock ltd'\r\n                    maxLength={100}\r\n                    value={this.state.userData.companyName}\r\n                    error={this.state.errorFields.companyName}\r\n                    onChange={(newValue) => this.setFieldValue('companyName', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='RegNumber'\r\n                    label={t('label.account.reg_number')}\r\n                    type='text'\r\n                    name='RegNumber'\r\n                    placeholder={t('label.account.reg_number_placeholder')}\r\n                    pattern={t('label.account.reg_number_pattern')}\r\n                    value={this.state.userData.regNumber}\r\n                    error={this.state.errorFields.regNumber}\r\n                    onChange={(newValue) => this.setFieldValue('regNumber', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='Password'\r\n                    label={t('label.account.password')}\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder='***********'\r\n                    maxLength={50}\r\n                    value={this.state.userData.password}\r\n                    error={this.state.errorFields.password}\r\n                    onChange={(newValue) => this.setFieldValue('password', newValue)}\r\n                />\r\n                <Input\r\n                    id='PasswordAgain'\r\n                    label={t('label.account.repeat_password')}\r\n                    type='password'\r\n                    name='passwordRepeat'\r\n                    placeholder='***********'\r\n                    maxLength={50}\r\n                    value={this.state.userData.passwordRepeat}\r\n                    error={this.state.errorFields.passwordRepeat}\r\n                    onChange={(newValue) => this.setFieldValue('passwordRepeat', newValue)}\r\n                />\r\n            </div>\r\n            <Button id='to-second-step' onClick={this.toStep2}>\r\n                {t('label.button.continueButton')}\r\n            </Button>\r\n            <p className='second-step'>{t('label.account.secondStepReg')}</p>\r\n        </div>\r\n    };\r\n\r\n    getSecondPart = () => {\r\n        const {t} = this.props;\r\n        return <div className='registration-second-part'>\r\n            <div className='flex-input'>\r\n                <Input\r\n                    id='City'\r\n                    className='city'\r\n                    label={t('label.account.city')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='Minsk'\r\n                    maxLength={100}\r\n                    value={this.state.userData.city}\r\n                    error={this.state.errorFields.city}\r\n                    onChange={(newValue) => this.setFieldValue('city', newValue)}\r\n                />\r\n                <Input\r\n                    id='Country'\r\n                    className='country'\r\n                    label={t('label.account.country')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='Belarus'\r\n                    maxLength={50}\r\n                    value={this.state.userData.country}\r\n                    error={this.state.errorFields.country}\r\n                    onChange={(newValue) => this.setFieldValue('country', newValue)}\r\n                />\r\n                <Input\r\n                    id='Address'\r\n                    label={t('label.account.address')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='str. Nezalejnasti'\r\n                    maxLength={200}\r\n                    value={this.state.userData.address}\r\n                    error={this.state.errorFields.address}\r\n                    onChange={(newValue) => this.setFieldValue('address', newValue)}\r\n                />\r\n\r\n                <CheckBox\r\n                    value={this.state.agree}\r\n                    error={this.state.agreeError}\r\n                    onChange={(value) => this.setState({agree: value, agreeError: !value})}\r\n                >\r\n                    <span>{t('label.account.accept')}<a>\r\n                        <span>{t('label.account.termsOfUse')}</span>\r\n                    </a></span>\r\n                </CheckBox>\r\n\r\n            </div>\r\n            <Button id='go-back' onClick={() => this.setState({step: 1})}>\r\n                {t('label.button.back')}\r\n            </Button>\r\n            <div id='form-list'>\r\n                <Button id='finish-registration' onClick={this.register}>{t('label.button.finishRegistration')}</Button>\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form' id='registration-form'>\r\n            <h3>{t('label.account.registration')}</h3>\r\n            <p>{t('label.account.haveAcc')}\r\n                <span className='go_to_login' onClick={this.props.toLogin}>\r\n                    <span>{t('label.account.logHere')}</span>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            {this.state.step === 1\r\n                ? this.getFirstPart()\r\n                : this.getSecondPart()}\r\n        </form>\r\n    }\r\n\r\n}\r\n\r\nexport default withTranslation()(RegistrationForm);","D:\\git\\stock\\stock-front\\src\\pages\\user\\UserMain.js",["171","172","173","174","175","176","177","178","179","180","181","182","183","184","185"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Button from '../../components/input/Button';\r\nimport Form from '../../components/form/Form';\r\nimport LocalStorage from \"../../util/LocalStorage\";\r\nimport FeedBackForm from \"../../forms/feed-back/FeedBackForm\";\r\nimport AccountForm from \"../../forms/account/AccountForm\";\r\nimport Lots from \"./tab/Lots\";\r\nimport Tenders from \"./tab/Tenders\";\r\nimport Products from \"./tab/Products\";\r\nimport Companies from \"./tab/Companies\";\r\n\r\nclass UserMain extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeTab: this.TAB.PRODUCTS,\r\n            feedBackFormActive: false,\r\n            accountPopupActive: false,\r\n            accountFormActive: false,\r\n            showEmptyForm: false,\r\n            mobileMenuActivated: false\r\n        }\r\n    }\r\n\r\n    TAB = {\r\n        PRODUCTS: 'products',\r\n        LOTS: 'lots',\r\n        TENDERS: 'tenders',\r\n        DEALS: 'deals',\r\n        PRODUCTS_ADMIN: 'productsAdmin',\r\n        COMPANY: 'company',\r\n        TESTS: 'tests',\r\n        LABELS: 'labels'\r\n    };\r\n\r\n    setActiveTab = (e, tab) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            activeTab: tab,\r\n            mobileMenuActivated: false\r\n        });\r\n    };\r\n\r\n    getMenu = () => {\r\n        return <nav className='main-menu'>\r\n            <ul>\r\n                {this.getUserTabs()}\r\n                {this.getAdminTabs()}\r\n            </ul>\r\n        </nav>\r\n    };\r\n\r\n    getUserTabs = () => {\r\n        const {t} = this.props;\r\n        return <React.Fragment>\r\n            <li className={this.state.activeTab === this.TAB.PRODUCTS ? 'active' : ''}>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.PRODUCTS)}>\r\n                    {t('label.navigation.products')}\r\n                </a>\r\n            </li>\r\n            <li className={this.state.activeTab === this.TAB.LOTS ? 'active' : ''}>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.LOTS)}>\r\n                    {t('label.navigation.lots')}\r\n                    <span id='lot-alerts' style={{display: 'none'}} className='bid-alert'/>\r\n                </a>\r\n            </li>\r\n            <li className={this.state.activeTab === this.TAB.TENDERS ? 'active' : ''}>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.TENDERS)}>\r\n                    {t('label.navigation.tenders')}\r\n                    <span id='tender-alerts' style={{display: 'none'}} className='bid-alert'/>\r\n                </a>\r\n            </li>\r\n            <li className={this.state.activeTab === this.TAB.DEALS ? 'active' : ''}>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.DEALS)}>\r\n                    {t('label.navigation.deals')}\r\n                    <span id='deal-alerts' style={{display: 'none'}} className='deal-alert'/>\r\n                    <span id='deal-on-approve' style={{display: 'none'}} className='deal-on-approve'/>\r\n                </a>\r\n            </li>\r\n        </React.Fragment>\r\n    };\r\n\r\n    getAdminTabs = () => {\r\n        if (LocalStorage.hasRole(\"ADMIN\")) {\r\n            const {t} = this.props;\r\n            return <React.Fragment>\r\n                <li className={this.state.activeTab === this.TAB.PRODUCTS_ADMIN ? 'active' : ''}>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.PRODUCTS_ADMIN)}>\r\n                        {t('label.navigation.productsExt')}\r\n                    </a>\r\n                </li>\r\n                <li className={this.state.activeTab === this.TAB.COMPANY ? 'active' : ''}>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.COMPANY)}>\r\n                        {t('label.navigation.company')}\r\n                    </a>\r\n                </li>\r\n                <li className={this.state.activeTab === this.TAB.TESTS ? 'active' : ''}>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.TESTS)}>\r\n                        {t('label.navigation.testBG')}\r\n                    </a>\r\n                </li>\r\n                <li className={this.state.activeTab === this.TAB.LABELS ? 'active' : ''}>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.LABELS)}>\r\n                        {t('label.navigation.labels')}\r\n                    </a>\r\n                </li>\r\n            </React.Fragment>\r\n        } else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    getFeedBackForm = () => {\r\n        if (this.state.feedBackFormActive) {\r\n            return <Form\r\n                className='contact-us-dialogbox'\r\n                onClose={() => this.setState({feedBackFormActive: false})}\r\n            >\r\n                <FeedBackForm/>\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    getAccountForm = () => {\r\n        if (this.state.accountFormActive) {\r\n            return <Form\r\n                map={true}\r\n                className='account-dialogbox'\r\n                onClose={() => this.setState({accountFormActive: false})}\r\n            >\r\n                <AccountForm/>\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    getLogo = () => {\r\n        return <div className='logo-pages'>\r\n            <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.PRODUCTS)}>\r\n                <img className='big-logo' src='/img/logo-pages.png' alt='YourTrader' title='YourTrader'/>\r\n            </a>\r\n            <div className=' small-logo'>\r\n                <div className='burger-close' onClick={() => this.setState({mobileMenuActivated: false})}/>\r\n                <div className='logo-mobile'>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.PRODUCTS)}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    getMobileLogo = () => {\r\n        return <div className='burger-logo'>\r\n            <div className='burger' onClick={() => this.setState({mobileMenuActivated: true})}/>\r\n            <div className='logo-mobile'>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.TAB.PRODUCTS)}/>\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    getTabTitle = () => {\r\n        const {t} = this.props;\r\n        switch (this.state.activeTab) {\r\n            case this.TAB.PRODUCTS:\r\n                return t('label.pageNames.products');\r\n            case this.TAB.LOTS:\r\n                return t('label.pageNames.myLots');\r\n            case this.TAB.TENDERS:\r\n                return t('label.pageNames.myTenders');\r\n            case this.TAB.DEALS:\r\n                return t('label.pageNames.myDeals');\r\n            case this.TAB.PRODUCTS_ADMIN:\r\n                return t('label.pageNames.productsForAdmin');\r\n            case this.TAB.COMPANY:\r\n                return t('label.pageNames.companies');\r\n            case this.TAB.TESTS:\r\n                return t('label.pageNames.testBG');\r\n            case this.TAB.LABELS:\r\n                return t('label.pageNames.lables');\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    getAccountButton = () => {\r\n        return <div className={`login-box ${this.state.accountPopupActive ? '' : 'login-box-shadow'}`}>\r\n            <div\r\n                className='login-button-page'\r\n                onClick={() => this.setState({accountPopupActive: !this.state.accountPopupActive})}\r\n            >\r\n                <div>\r\n                    <div>{LocalStorage.getCompanyName()}</div>\r\n                    <div className='hor_bg'/>\r\n                </div>\r\n            </div>\r\n            {this.getAccountPopup()}\r\n        </div>\r\n    };\r\n\r\n    getAccountPopup = () => {\r\n        const {t} = this.props;\r\n        if (this.state.accountPopupActive) {\r\n            return <div className='login-list'>\r\n                <div>\r\n                    <a href='#'\r\n                       className='edit-account'\r\n                       onClick={(e) => {\r\n                           e.preventDefault();\r\n                           this.setState({accountFormActive: true});\r\n                       }}\r\n                    >\r\n                        {t('label.navigation.account')}\r\n                    </a>\r\n                    <a href='#'\r\n                       onClick={(e) => {\r\n                           e.preventDefault();\r\n                           window.logout();\r\n                       }}\r\n                       id='session-start'>\r\n                        {t('label.navigation.logout')}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        }\r\n    };\r\n\r\n    getTabContent = () => {\r\n        switch (this.state.activeTab) {\r\n            case this.TAB.LOTS:\r\n                return <Lots\r\n                    showEmptyForm={this.state.showEmptyForm}\r\n                    onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                />;\r\n            case this.TAB.TENDERS:\r\n                return <Tenders\r\n                    showEmptyForm={this.state.showEmptyForm}\r\n                    onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                />;\r\n            case this.TAB.PRODUCTS_ADMIN:\r\n                return <Products\r\n                    showEmptyForm={this.state.showEmptyForm}\r\n                    onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                />;\r\n            case this.TAB.COMPANY:\r\n                return <Companies/>;\r\n            default:\r\n                return 'test';\r\n        }\r\n    };\r\n\r\n    getAddButton = () => {\r\n        const {t} = this.props;\r\n        switch (this.state.activeTab) {\r\n            case this.TAB.LABELS:\r\n            case this.TAB.PRODUCTS_ADMIN:\r\n            case this.TAB.TENDERS:\r\n            case this.TAB.LOTS:\r\n                return <div className=\"add-button\" onClick={() => this.setState({showEmptyForm: true})}>\r\n                    <div className=\"plus\"/>\r\n                    <p>{t('label.button.create')}</p>\r\n                </div>;\r\n            default:\r\n                return '';\r\n        }\r\n    };\r\n\r\n    getAsideFooter = () => {\r\n        const {t} = this.props;\r\n        return <div className='aside-footer'>\r\n            <p className='footer-phone'>\r\n                <a href={`tel:${t('label.index.phone_prefix')}${t('label.index.phone')}`}>\r\n                    {t('label.index.phone_prefix')}<span>{t('label.index.phone')}</span>\r\n                </a>\r\n            </p>\r\n            <p className='footer-email'>\r\n                <a href={`mailto:${t('label.index.email')}`}>{t('label.index.email')}</a>\r\n            </p>\r\n            <Button\r\n                className='gray-button send-message'\r\n                onClick={() => this.setState({feedBackFormActive: true})}\r\n            >\r\n                {t('label.account.contact_us')}\r\n            </Button>\r\n            <br/><br/>\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        const addButton = this.getAddButton();\r\n        return <React.Fragment>\r\n            {this.getFeedBackForm()}\r\n            {this.getAccountForm()}\r\n            <div className={`aside ${this.state.mobileMenuActivated ? 'aside-adaptive' : ''}`}>\r\n                {this.getLogo()}\r\n                {this.getMenu()}\r\n                {this.getAsideFooter()}\r\n            </div>\r\n            <div className='aside-modile'>\r\n                {this.getMobileLogo()}\r\n                {this.getAccountButton()}\r\n            </div>\r\n            {this.state.mobileMenuActivated ? <div className='bgdark'/> : ''}\r\n            <div className='section'>\r\n                <div className='table-header'>\r\n                    <h1>{this.getTabTitle()}</h1>\r\n                    <div className={`table-header-button ${addButton === '' ? 'thb' : ''}`}>\r\n                        {addButton}\r\n                        {this.getAccountButton()}\r\n                    </div>\r\n                </div>\r\n                <div className='content'>\r\n                    {this.getTabContent()}\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    }\r\n\r\n}\r\n\r\nexport default withTranslation()(UserMain);","D:\\git\\stock\\stock-front\\src\\util\\LocalStorage.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\feed-back\\FeedBackForm.js",[],"D:\\git\\stock\\stock-front\\src\\util\\VerificationUtils.js",["186","187","188","189","190","191","192","193","194"],"const verificationUtils = {\r\n    checkEmail: (email, t) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email && !re.test(email.toLowerCase())) {\r\n            return t('enter_valid_email');\r\n        } else {\r\n            const domainPart = email.substr(email.indexOf(\"@\") + 1);\r\n            const localPart = email.substr(0, email.indexOf(\"@\"));\r\n            if (domainPart.length > 255 || localPart.length > 64) {\r\n                return t('enter_valid_email');\r\n            }\r\n        }\r\n    },\r\n    checkUrl: (value, t) => {\r\n        const re = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\r\n        if (value !== '' && (!re.test(value.toLowerCase()) || value.length > 2048)) {\r\n            return t('enter_valid_url');\r\n        }\r\n    }\r\n};\r\n\r\nexport default verificationUtils;","D:\\git\\stock\\stock-front\\src\\components\\input\\TextArea.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\account\\AccountForm.js",["195","196","197"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Button from '../../components/input/Button';\r\nimport LocalStorage from '../../util/LocalStorage';\r\nimport Input from '../../components/input/Input';\r\nimport TextArea from '../../components/input/TextArea';\r\nimport VerificationUtils from '../../util/VerificationUtils';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Request from '../../util/Request';\r\nimport Message, {TYPES} from '../../components/message/Message';\r\nimport LanguageSwitcher from \"../../components/language-switcher/LanguageSwitcher\";\r\nimport i18next from \"i18next\";\r\n\r\nclass AccountForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            account: {},\r\n            error: {},\r\n            message: null\r\n        }\r\n    }\r\n\r\n    validateAccount = () => {\r\n        const {t} = this.props;\r\n        const error = {};\r\n        let message = null;\r\n        let errorsFound = false;\r\n        if (this.state.account.username === '' || VerificationUtils.checkEmail(this.state.account.username, t)) {\r\n            error.username = true;\r\n            errorsFound = true;\r\n        }\r\n        if (this.state.account.phone === '') {\r\n            error.phone = true;\r\n            errorsFound = true;\r\n        }\r\n        if (this.state.account.password !== this.state.account.repeatPassword) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.account.error_password')\r\n            };\r\n            errorsFound = true;\r\n        }\r\n        if (errorsFound) {\r\n            this.setState({error: error, message: message});\r\n        }\r\n        return !errorsFound\r\n    };\r\n\r\n    componentDidMount() {\r\n        Request.doGet(ApiUrls.ACCOUNT_MANAGEMENT)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    const json = JSON.parse(await response.text());\r\n                    this.setState({account: {...json, repeatPassword: ''}});\r\n                    this.props.onAddressChanged({\r\n                        latitude: json.latitude,\r\n                        longitude: json.longitude\r\n                    }, true)\r\n                }\r\n            })\r\n    }\r\n\r\n    submitAccount = () => {\r\n        const {t} = this.props;\r\n        if (this.validateAccount()) {\r\n            const data = {\r\n                username: this.state.account.username,\r\n                phone: this.state.account.phone,\r\n                language: this.state.account.language,\r\n                password: this.state.account.password\r\n            };\r\n            Request.doPut(ApiUrls.ACCOUNT_MANAGEMENT, null, data)\r\n                .then(async response => {\r\n                    const text = await response.text();\r\n                    if (response.ok) {\r\n                        this.setState({\r\n                            message: {\r\n                                type: TYPES.SUCCESS,\r\n                                value: t('label.account.edit_success')\r\n                            }\r\n                        });\r\n                        Request.setAuthenticationParams(JSON.parse(text));\r\n                    } else {\r\n                        this.setState({\r\n                            message: {\r\n                                type: TYPES.ERROR,\r\n                                value: t(text)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    changeValue = (propertyName, value) => {\r\n        this.setState({\r\n            account: {\r\n                ...this.state.account,\r\n                [propertyName]: value\r\n            },\r\n            error: {\r\n                ...this.state.error,\r\n                [propertyName]: false\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className=\"form\" name=\"form\" id=\"account-form\">\r\n            <h3>{t('label.account.edit')}</h3>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            <div className=\"flex-input\">\r\n                <Input\r\n                    id='Login'\r\n                    label={t('label.account.login')}\r\n                    name='username'\r\n                    error={this.state.error.username}\r\n                    placeholder='example@mail.com'\r\n                    value={this.state.account.username}\r\n                    onChange={(newValue) => this.changeValue('username', newValue)}\r\n                />\r\n                <Input\r\n                    id='Phone'\r\n                    label={t('label.account.phone')}\r\n                    name='phone'\r\n                    error={this.state.error.phone}\r\n                    placeholder={t('label.account.phone_placeholder')}\r\n                    value={this.state.account.phone}\r\n                    pattern={t('label.account.phone_pattern')}\r\n                    onChange={(newValue) => this.changeValue('phone', newValue)}\r\n                />\r\n                <LanguageSwitcher\r\n                    label={t('label.account.company_language')}\r\n                    menuClass='selectmenu-menu-account'\r\n                    current={this.state.account.language}\r\n                    onChange={(newValue) => this.changeValue('language', newValue)}\r\n                />\r\n                <Input\r\n                    id='CompanyName'\r\n                    label={t('label.account.company_name')}\r\n                    name='company_name'\r\n                    value={this.state.account.companyName}\r\n                    disabled={true}\r\n                />\r\n                <Input\r\n                    id='RegNumber'\r\n                    label={t('label.account.reg_number')}\r\n                    name='regNumber'\r\n                    value={this.state.account.regNumber}\r\n                    disabled={true}\r\n                />\r\n                <Input\r\n                    id='Password'\r\n                    label={t('label.account.password')}\r\n                    name='password'\r\n                    type='password'\r\n                    error={this.state.error.password}\r\n                    placeholder='**************'\r\n                    value={this.state.account.password}\r\n                    maxLength={50}\r\n                    onChange={(newValue) => this.changeValue('password', newValue)}\r\n                />\r\n                <Input\r\n                    id='PasswordAgain'\r\n                    label={t('label.account.repeat_password')}\r\n                    name='password'\r\n                    type='password'\r\n                    error={this.state.error.repeatPassword}\r\n                    placeholder='**************'\r\n                    value={this.state.account.repeatPassword}\r\n                    maxLength={50}\r\n                    onChange={(newValue) => this.changeValue('repeatPassword', newValue)}\r\n                />\r\n                <div id=\"form-list\">\r\n                    <Button className=\"submit button\">\r\n                        {t('label.button.addAddress')}\r\n                    </Button>\r\n                    <Button className=\"submit button\" onClick={this.submitAccount}>\r\n                        {t('label.button.save')}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(AccountForm);","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Lots.js",["198"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Request from \"../../../util/Request\";\r\nimport ApiUrls from \"../../../util/ApiUrls\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Form from \"../../../components/form/Form\";\r\nimport LotForm from \"../../../forms/lot/LotForm\"\r\nimport Message, {TYPES} from \"../../../components/message/Message\";\r\n\r\nclass Lots extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            products: [],\r\n            addresses: [],\r\n            editLot: null\r\n        }\r\n    }\r\n\r\n    loadData = (url) => {\r\n        return Request.doGet(url)\r\n            .then(async responce => {\r\n                if (responce.ok) {\r\n                    return JSON.parse(await responce.text());\r\n                }\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n        const lots = this.loadData(ApiUrls.LOT_LIST);\r\n        const products = this.loadData(ApiUrls.PRODUCT_LIST);\r\n        const addresses = this.loadData(ApiUrls.ADDRESS_LIST);\r\n\r\n        Promise.all([lots, products, addresses])\r\n            .then(values => {\r\n                this.setState({\r\n                    data: values[0],\r\n                    products: values[1],\r\n                    addresses: values[2]\r\n                });\r\n            });\r\n    }\r\n\r\n    getHeader = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {name: t('label.lot.product'), weight: 2},\r\n            {name: t('label.lot.status'), weight: 3},\r\n            {name: t('label.lot.min_price'), weight: 7},\r\n            {name: t('label.lot.max_volume'), weight: 6},\r\n            {name: t('label.lot.exp_date'), weight: 4},\r\n            {name: t('label.lot.creation_date'), weight: 5},\r\n            {name: t('label.lot.edit'), weight: 1},\r\n        ]\r\n    };\r\n\r\n    remove = (id) => {\r\n        Request.doDelete(ApiUrls.LOT.replace(\"{id}\", id))\r\n            .then(responce => {\r\n                if (responce.ok) {\r\n                    this.setState({data: this.state.data.filter(l => l.id !== id)});\r\n                }\r\n            });\r\n    };\r\n\r\n    getProduct = (categoryId) => {\r\n        return this.state.products.find(p => p.categories.find(c => c.id === categoryId));\r\n    };\r\n\r\n    formatDate = (date) => {\r\n        let month = '' + (date.getMonth() + 1);\r\n        let day = '' + date.getDate()\r\n        let year = date.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    };\r\n\r\n    changeStatus = (lot) => {\r\n        const {t} = this.props;\r\n        if (lot.status === 'ACTIVE') {\r\n            Request.doPut(ApiUrls.LOT_DEACTIVATE.replace('{id}', lot.id))\r\n                .then(responce => {\r\n                    if (responce.ok) {\r\n                        const data = this.state.data.slice();\r\n                        data.find(d => d.id === lot.id).status = 'INACTIVE';\r\n                        this.setState({\r\n                            data: data,\r\n                            message: {\r\n                                type: TYPES.SUCCESS,\r\n                                value: t('label.bid.deactivated')\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        } else if (new Date(lot.expirationDate) >= new Date()) {\r\n            Request.doPut(ApiUrls.LOT_ACTIVATE.replace('{id}', lot.id))\r\n                .then(responce => {\r\n                    if (responce.ok) {\r\n                        const data = this.state.data.slice();\r\n                        data.find(d => d.id === lot.id).status = 'ACTIVE';\r\n                        this.setState({\r\n                            data: data,\r\n                            message: {\r\n                                type: TYPES.SUCCESS,\r\n                                value: t('label.bid.activated-morning')\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({\r\n                message: {\r\n                    type: TYPES.ERROR,\r\n                    value: t('label.lot.expDate_error')\r\n                }\r\n            });\r\n        }\r\n        setTimeout(() => this.setState({message: null}), 3000);\r\n    };\r\n\r\n    getData = () => {\r\n        const {t} = this.props;\r\n        return this.state.data.map(l => {\r\n            return [\r\n                t(`label.${this.getProduct(l.categoryId).name}.name`),\r\n                <div className={`swtitch-row-${l.status === 'ACTIVE' ? 'on' : 'off'}`}\r\n                     onClick={() => this.changeStatus(l)}\r\n                />,\r\n                l.price,\r\n                l.maxVolume,\r\n                typeof l.expirationDate === 'string' ? l.expirationDate : this.formatDate(l.expirationDate),\r\n                typeof l.creationDate === 'string' ? l.creationDate : this.formatDate(l.creationDate),\r\n                <React.Fragment>\r\n                    <div className='edit' onClick={() => this.setState({editLot: l})}/>\r\n                    <div className='remove' onClick={() => this.remove(l.id)}/>\r\n                </React.Fragment>\r\n            ]\r\n        })\r\n    };\r\n\r\n    closeForm = () => {\r\n        this.setState({editLot: null});\r\n        this.props.onCloseForm();\r\n    };\r\n\r\n    getForm = () => {\r\n        if (this.state.editLot || this.props.showEmptyForm) {\r\n            return <Form\r\n                className='lot-dialogbox'\r\n                onClose={this.closeForm}\r\n            >\r\n                <LotForm\r\n                    lot={this.state.editLot ? {...this.state.editLot} : null}\r\n                    products={this.state.products}\r\n                    addresses={this.state.addresses}\r\n                    onSave={this.updateLotList}\r\n                />\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    updateLotList = (lot, isNew) => {\r\n        const {t} = this.props;\r\n        const lots = this.state.data.slice();\r\n        if (isNew) {\r\n            lots.splice(0, 0, lot);\r\n        } else {\r\n            const lotFromList = lots.find(l => l.id === lot.id);\r\n            Object.keys(lotFromList)\r\n                .forEach(propertyName => lotFromList[propertyName] = lot[propertyName]);\r\n        }\r\n        this.setState({\r\n            data: lots,\r\n            message: {\r\n                type: TYPES.SUCCESS,\r\n                value: t(lot.status === 'ACTIVE' ? 'label.bid.activated-morning' : 'label.bid.deactivated')\r\n            }\r\n        });\r\n        setTimeout(() => this.setState({message: null}), 3000);\r\n        this.closeForm();\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.getForm()}\r\n            <Table\r\n                data={this.getData()}\r\n                header={this.getHeader()}\r\n                message={this.state.message}\r\n                pageSize={10}\r\n            />\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Lots);","D:\\git\\stock\\stock-front\\src\\components\\table\\Table.js",["199","200","201"],"D:\\git\\stock\\stock-front\\src\\forms\\lot\\LotForm.js",["202"],"D:\\git\\stock\\stock-front\\src\\components\\input\\Calendar.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\File.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Dropdown.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Tenders.js",["203","204"],"D:\\git\\stock\\stock-front\\src\\forms\\tender\\TenderForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Products.js",["205","206","207"],"D:\\git\\stock\\stock-front\\src\\forms\\product\\ProductForm.js",["208","209","210","211","212","213"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Dropdown from \"../../components/input/Dropdown\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Calendar from \"../../components/input/Calendar\";\r\nimport TextArea from \"../../components/input/TextArea\";\r\nimport Button from \"../../components/input/Button\";\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Map from \"../../components/map/Map\";\r\nimport Request from '../../util/Request';\r\nimport Message, {TYPES} from \"../../components/message/Message\";\r\n\r\nclass ProductForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: {\r\n                id: null,\r\n                name: '',\r\n                picture: '',\r\n                removed: false,\r\n            }\r\n        };\r\n    }\r\n\r\n    save = () => {\r\n        const product = {...this.state.product};\r\n        Request.doPost(ApiUrls.PRODUCT_ADMIN, null, product)\r\n            .then(async responce => {\r\n                if (responce.ok) {\r\n                    product.id = JSON.parse(await responce.text());\r\n                    this.props.onSave(product);\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className=\"form\" name=\"form\">\r\n            <h3>{t('label.product.productForm')}</h3>\r\n            <div className=\"flex-input\">\r\n                <Input\r\n                    id='Name'\r\n                    label={t('label.product.name')}\r\n                    name='name'\r\n                    value={this.state.product.name}\r\n                    onChange={(newValue) => this.setState({product: {...this.state.product, name: newValue}})}\r\n                />\r\n\r\n                <Input\r\n                    id='Picture'\r\n                    label={t('label.product.picture')}\r\n                    name='picture'\r\n                    value={this.state.product.picture}\r\n                    onChange={(newValue) => this.setState({product: {...this.state.product, picture: newValue}})}\r\n                />\r\n\r\n                <div id=\"form-list\">\r\n                    <Button className=\"submit button\" id=\"save\" onClick={this.save}>\r\n                        {t('label.button.save')}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ProductForm);","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Categories.js",["214","215","216","217"],"D:\\git\\stock\\stock-front\\src\\forms\\category\\CategoryForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Companies.js",[],{"ruleId":"218","replacedBy":"219"},{"ruleId":"220","replacedBy":"221"},{"ruleId":"222","severity":1,"message":"223","line":189,"column":53,"nodeType":"224","endLine":189,"endColumn":64},{"ruleId":"222","severity":1,"message":"223","line":261,"column":45,"nodeType":"224","endLine":261,"endColumn":56},{"ruleId":"225","severity":1,"message":"226","line":5,"column":1,"nodeType":"227","endLine":20,"endColumn":2},{"ruleId":"222","severity":1,"message":"228","line":75,"column":28,"nodeType":"224","endLine":75,"endColumn":42},{"ruleId":"222","severity":1,"message":"228","line":304,"column":54,"nodeType":"224","endLine":304,"endColumn":57},{"ruleId":"222","severity":1,"message":"223","line":58,"column":17,"nodeType":"224","endLine":58,"endColumn":86},{"ruleId":"222","severity":1,"message":"223","line":63,"column":17,"nodeType":"224","endLine":63,"endColumn":82},{"ruleId":"222","severity":1,"message":"223","line":69,"column":17,"nodeType":"224","endLine":69,"endColumn":85},{"ruleId":"222","severity":1,"message":"223","line":75,"column":17,"nodeType":"224","endLine":75,"endColumn":83},{"ruleId":"222","severity":1,"message":"223","line":89,"column":21,"nodeType":"224","endLine":89,"endColumn":96},{"ruleId":"222","severity":1,"message":"223","line":94,"column":21,"nodeType":"224","endLine":94,"endColumn":89},{"ruleId":"222","severity":1,"message":"223","line":99,"column":21,"nodeType":"224","endLine":99,"endColumn":87},{"ruleId":"222","severity":1,"message":"223","line":104,"column":21,"nodeType":"224","endLine":104,"endColumn":88},{"ruleId":"222","severity":1,"message":"223","line":139,"column":13,"nodeType":"224","endLine":139,"endColumn":82},{"ruleId":"229","severity":1,"message":"230","line":145,"column":21,"nodeType":"224","endLine":145,"endColumn":91},{"ruleId":"222","severity":1,"message":"223","line":145,"column":21,"nodeType":"224","endLine":145,"endColumn":91},{"ruleId":"229","severity":1,"message":"230","line":155,"column":17,"nodeType":"224","endLine":155,"endColumn":87},{"ruleId":"222","severity":1,"message":"223","line":155,"column":17,"nodeType":"224","endLine":155,"endColumn":87},{"ruleId":"222","severity":1,"message":"223","line":204,"column":21,"nodeType":"224","endLine":210,"endColumn":22},{"ruleId":"222","severity":1,"message":"223","line":213,"column":21,"nodeType":"224","endLine":218,"endColumn":43},{"ruleId":"231","severity":1,"message":"232","line":3,"column":30,"nodeType":"233","messageId":"234","endLine":3,"endColumn":31,"suggestions":"235"},{"ruleId":"231","severity":1,"message":"232","line":3,"column":55,"nodeType":"233","messageId":"234","endLine":3,"endColumn":56,"suggestions":"236"},{"ruleId":"231","severity":1,"message":"237","line":15,"column":55,"nodeType":"233","messageId":"234","endLine":15,"endColumn":56,"suggestions":"238"},{"ruleId":"231","severity":1,"message":"237","line":15,"column":67,"nodeType":"233","messageId":"234","endLine":15,"endColumn":68,"suggestions":"239"},{"ruleId":"231","severity":1,"message":"240","line":15,"column":80,"nodeType":"233","messageId":"234","endLine":15,"endColumn":81,"suggestions":"241"},{"ruleId":"231","severity":1,"message":"242","line":15,"column":84,"nodeType":"233","messageId":"234","endLine":15,"endColumn":85,"suggestions":"243"},{"ruleId":"231","severity":1,"message":"244","line":15,"column":86,"nodeType":"233","messageId":"234","endLine":15,"endColumn":87,"suggestions":"245"},{"ruleId":"231","severity":1,"message":"246","line":15,"column":88,"nodeType":"233","messageId":"234","endLine":15,"endColumn":89,"suggestions":"247"},{"ruleId":"231","severity":1,"message":"248","line":15,"column":90,"nodeType":"233","messageId":"234","endLine":15,"endColumn":91,"suggestions":"249"},{"ruleId":"250","severity":1,"message":"251","line":4,"column":8,"nodeType":"252","messageId":"253","endLine":4,"endColumn":20},{"ruleId":"250","severity":1,"message":"254","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":16},{"ruleId":"250","severity":1,"message":"255","line":12,"column":8,"nodeType":"252","messageId":"253","endLine":12,"endColumn":15},{"ruleId":"250","severity":1,"message":"256","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":15},{"ruleId":"222","severity":1,"message":"228","line":36,"column":17,"nodeType":"224","endLine":43,"endColumn":18},{"ruleId":"222","severity":1,"message":"228","line":44,"column":23,"nodeType":"224","endLine":44,"endColumn":62},{"ruleId":"222","severity":1,"message":"228","line":45,"column":17,"nodeType":"224","endLine":52,"endColumn":18},{"ruleId":"222","severity":1,"message":"223","line":291,"column":35,"nodeType":"224","endLine":291,"endColumn":82},{"ruleId":"250","severity":1,"message":"257","line":7,"column":8,"nodeType":"252","messageId":"253","endLine":7,"endColumn":15},{"ruleId":"250","severity":1,"message":"256","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":15},{"ruleId":"250","severity":1,"message":"257","line":7,"column":8,"nodeType":"252","messageId":"253","endLine":7,"endColumn":15},{"ruleId":"250","severity":1,"message":"256","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":15},{"ruleId":"250","severity":1,"message":"258","line":8,"column":18,"nodeType":"252","messageId":"253","endLine":8,"endColumn":23},{"ruleId":"250","severity":1,"message":"259","line":3,"column":8,"nodeType":"252","messageId":"253","endLine":3,"endColumn":16},{"ruleId":"250","severity":1,"message":"260","line":5,"column":8,"nodeType":"252","messageId":"253","endLine":5,"endColumn":16},{"ruleId":"250","severity":1,"message":"254","line":6,"column":8,"nodeType":"252","messageId":"253","endLine":6,"endColumn":16},{"ruleId":"250","severity":1,"message":"261","line":9,"column":8,"nodeType":"252","messageId":"253","endLine":9,"endColumn":11},{"ruleId":"250","severity":1,"message":"256","line":11,"column":8,"nodeType":"252","messageId":"253","endLine":11,"endColumn":15},{"ruleId":"250","severity":1,"message":"258","line":11,"column":18,"nodeType":"252","messageId":"253","endLine":11,"endColumn":23},{"ruleId":"250","severity":1,"message":"257","line":7,"column":8,"nodeType":"252","messageId":"253","endLine":7,"endColumn":15},{"ruleId":"250","severity":1,"message":"256","line":8,"column":8,"nodeType":"252","messageId":"253","endLine":8,"endColumn":15},{"ruleId":"250","severity":1,"message":"258","line":8,"column":18,"nodeType":"252","messageId":"253","endLine":8,"endColumn":23},{"ruleId":"250","severity":1,"message":"262","line":9,"column":8,"nodeType":"252","messageId":"253","endLine":9,"endColumn":19},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["265","266"],["267","268"],"Unnecessary escape character: \\..",["269","270"],["271","272"],"Unnecessary escape character: \\$.",["273","274"],"Unnecessary escape character: \\(.",["275","276"],"Unnecessary escape character: \\).",["277","278"],"Unnecessary escape character: \\*.",["279","280"],"Unnecessary escape character: \\+.",["281","282"],"no-unused-vars","'LocalStorage' is defined but never used.","Identifier","unusedVar","'TextArea' is defined but never used.","'i18next' is defined but never used.","'Message' is defined but never used.","'LotForm' is defined but never used.","'TYPES' is defined but never used.","'Dropdown' is defined but never used.","'Calendar' is defined but never used.","'Map' is defined but never used.","'ProductForm' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"283","fix":"284","desc":"285"},{"messageId":"286","fix":"287","desc":"288"},{"messageId":"283","fix":"289","desc":"285"},{"messageId":"286","fix":"290","desc":"288"},{"messageId":"283","fix":"291","desc":"285"},{"messageId":"286","fix":"292","desc":"288"},{"messageId":"283","fix":"293","desc":"285"},{"messageId":"286","fix":"294","desc":"288"},{"messageId":"283","fix":"295","desc":"285"},{"messageId":"286","fix":"296","desc":"288"},{"messageId":"283","fix":"297","desc":"285"},{"messageId":"286","fix":"298","desc":"288"},{"messageId":"283","fix":"299","desc":"285"},{"messageId":"286","fix":"300","desc":"288"},{"messageId":"283","fix":"301","desc":"285"},{"messageId":"286","fix":"302","desc":"288"},{"messageId":"283","fix":"303","desc":"285"},{"messageId":"286","fix":"304","desc":"288"},"removeEscape",{"range":"305","text":"306"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"307","text":"308"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"309","text":"306"},{"range":"310","text":"308"},{"range":"311","text":"306"},{"range":"312","text":"308"},{"range":"313","text":"306"},{"range":"314","text":"308"},{"range":"315","text":"306"},{"range":"316","text":"308"},{"range":"317","text":"306"},{"range":"318","text":"308"},{"range":"319","text":"306"},{"range":"320","text":"308"},{"range":"321","text":"306"},{"range":"322","text":"308"},{"range":"323","text":"306"},{"range":"324","text":"308"},[91,92],"",[91,91],"\\",[116,117],[116,116],[728,729],[728,728],[740,741],[740,740],[753,754],[753,753],[757,758],[757,757],[759,760],[759,759],[761,762],[761,761],[763,764],[763,763]]