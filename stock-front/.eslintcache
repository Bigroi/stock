[{"D:\\git\\stock\\stock-front\\src\\index.js":"1","D:\\git\\stock\\stock-front\\src\\App.js":"2","D:\\git\\stock\\stock-front\\src\\reportWebVitals.js":"3","D:\\git\\stock\\stock-front\\src\\pages\\Main.js":"4","D:\\git\\stock\\stock-front\\src\\pages\\public\\Landing.js":"5","D:\\git\\stock\\stock-front\\src\\util\\i18n.js":"6","D:\\git\\stock\\stock-front\\src\\util\\Config.js":"7","D:\\git\\stock\\stock-front\\src\\util\\ApiUrls.js":"8","D:\\git\\stock\\stock-front\\src\\components\\language-switcher\\LanguageSwitcher.js":"9","D:\\git\\stock\\stock-front\\src\\components\\form\\Form.js":"10","D:\\git\\stock\\stock-front\\src\\components\\input\\Button.js":"11","D:\\git\\stock\\stock-front\\src\\components\\input\\Input.js":"12","D:\\git\\stock\\stock-front\\src\\components\\message\\Message.js":"13","D:\\git\\stock\\stock-front\\src\\util\\Request.js":"14","D:\\git\\stock\\stock-front\\src\\util\\LocalStrorageParams.js":"15","D:\\git\\stock\\stock-front\\src\\components\\checkbox\\CheckBox.js":"16","D:\\git\\stock\\stock-front\\src\\components\\map\\Map.js":"17","D:\\git\\stock\\stock-front\\src\\forms\\login\\LoginForm.js":"18","D:\\git\\stock\\stock-front\\src\\forms\\registration\\RegistrationForm.js":"19","D:\\git\\stock\\stock-front\\src\\pages\\user\\UserMain.js":"20","D:\\git\\stock\\stock-front\\src\\util\\LocalStorage.js":"21","D:\\git\\stock\\stock-front\\src\\forms\\feed-back\\FeedBackForm.js":"22","D:\\git\\stock\\stock-front\\src\\util\\VerificationUtils.js":"23","D:\\git\\stock\\stock-front\\src\\components\\input\\TextArea.js":"24","D:\\git\\stock\\stock-front\\src\\forms\\account\\AccountForm.js":"25","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Lots.js":"26","D:\\git\\stock\\stock-front\\src\\components\\table\\Table.js":"27","D:\\git\\stock\\stock-front\\src\\forms\\lot\\LotForm.js":"28","D:\\git\\stock\\stock-front\\src\\components\\input\\Calendar.js":"29","D:\\git\\stock\\stock-front\\src\\components\\input\\File.js":"30","D:\\git\\stock\\stock-front\\src\\components\\input\\Dropdown.js":"31","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Tenders.js":"32","D:\\git\\stock\\stock-front\\src\\forms\\tender\\TenderForm.js":"33","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Products.js":"34","D:\\git\\stock\\stock-front\\src\\forms\\product\\ProductForm.js":"35","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Categories.js":"36","D:\\git\\stock\\stock-front\\src\\forms\\category\\CategoryForm.js":"37","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Companies.js":"38","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Labels.js":"39","D:\\git\\stock\\stock-front\\src\\forms\\label\\LabelForm.js":"40","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Trade.js":"41","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\ProductsStatistics.js":"42","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\ProductStatisticsDetails.js":"43","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Deals.js":"44","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\DealDetails.js":"45","D:\\git\\stock\\stock-front\\src\\forms\\company-feed-back\\CompanyFeedBackForm.js":"46","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Addresses.js":"47","D:\\git\\stock\\stock-front\\src\\forms\\address\\AddressForm.js":"48"},{"size":597,"mtime":1607784809520,"results":"49","hashOfConfig":"50"},{"size":138,"mtime":1607551779928,"results":"51","hashOfConfig":"50"},{"size":362,"mtime":499162500000,"results":"52","hashOfConfig":"50"},{"size":1127,"mtime":1608673669173,"results":"53","hashOfConfig":"50"},{"size":14890,"mtime":1608229109370,"results":"54","hashOfConfig":"50"},{"size":812,"mtime":1608164508880,"results":"55","hashOfConfig":"50"},{"size":653,"mtime":1607548861867,"results":"56","hashOfConfig":"50"},{"size":2102,"mtime":1609631706123,"results":"57","hashOfConfig":"50"},{"size":2400,"mtime":1608229109386,"results":"58","hashOfConfig":"50"},{"size":2199,"mtime":1609632412404,"results":"59","hashOfConfig":"50"},{"size":373,"mtime":1608072852394,"results":"60","hashOfConfig":"50"},{"size":1259,"mtime":1609292254815,"results":"61","hashOfConfig":"50"},{"size":520,"mtime":1608686517851,"results":"62","hashOfConfig":"50"},{"size":4384,"mtime":1608230709661,"results":"63","hashOfConfig":"50"},{"size":233,"mtime":1608208502396,"results":"64","hashOfConfig":"50"},{"size":634,"mtime":1608168347370,"results":"65","hashOfConfig":"50"},{"size":3087,"mtime":1609607037690,"results":"66","hashOfConfig":"50"},{"size":2998,"mtime":1608210012384,"results":"67","hashOfConfig":"50"},{"size":12558,"mtime":1608168347388,"results":"68","hashOfConfig":"50"},{"size":15836,"mtime":1609633102130,"results":"69","hashOfConfig":"50"},{"size":578,"mtime":1608688027828,"results":"70","hashOfConfig":"50"},{"size":3030,"mtime":1608215806928,"results":"71","hashOfConfig":"50"},{"size":962,"mtime":1607549256410,"results":"72","hashOfConfig":"50"},{"size":852,"mtime":1609624392849,"results":"73","hashOfConfig":"50"},{"size":7412,"mtime":1609632548424,"results":"74","hashOfConfig":"50"},{"size":7035,"mtime":1608761585673,"results":"75","hashOfConfig":"50"},{"size":5128,"mtime":1608932394180,"results":"76","hashOfConfig":"50"},{"size":12809,"mtime":1608763374210,"results":"77","hashOfConfig":"50"},{"size":1079,"mtime":1608684906138,"results":"78","hashOfConfig":"50"},{"size":670,"mtime":1608675473542,"results":"79","hashOfConfig":"50"},{"size":1190,"mtime":1608762657300,"results":"80","hashOfConfig":"50"},{"size":7201,"mtime":1608762657284,"results":"81","hashOfConfig":"50"},{"size":13201,"mtime":1608763374193,"results":"82","hashOfConfig":"50"},{"size":3388,"mtime":1608936271814,"results":"83","hashOfConfig":"50"},{"size":2411,"mtime":1608776257619,"results":"84","hashOfConfig":"50"},{"size":3135,"mtime":1608777470376,"results":"85","hashOfConfig":"50"},{"size":1913,"mtime":1608776257441,"results":"86","hashOfConfig":"50"},{"size":2194,"mtime":1608811417275,"results":"87","hashOfConfig":"50"},{"size":3291,"mtime":1608813509823,"results":"88","hashOfConfig":"50"},{"size":3090,"mtime":1608813686451,"results":"89","hashOfConfig":"50"},{"size":1209,"mtime":1608824178251,"results":"90","hashOfConfig":"50"},{"size":2680,"mtime":1608942932340,"results":"91","hashOfConfig":"50"},{"size":3287,"mtime":1608943602067,"results":"92","hashOfConfig":"50"},{"size":2305,"mtime":1609000116515,"results":"93","hashOfConfig":"50"},{"size":12228,"mtime":1609628195680,"results":"94","hashOfConfig":"50"},{"size":3366,"mtime":1609628356225,"results":"95","hashOfConfig":"50"},{"size":4292,"mtime":1609632776711,"results":"96","hashOfConfig":"50"},{"size":4844,"mtime":1609632983907,"results":"97","hashOfConfig":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},"13r9h7f",{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"100"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"100"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"100"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"100"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"100"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"100"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"100"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"100"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"100"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"100"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"100"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"182","usedDeprecatedRules":"100"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"100"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"100"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"100"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\git\\stock\\stock-front\\src\\index.js",[],["210","211"],"D:\\git\\stock\\stock-front\\src\\App.js",[],"D:\\git\\stock\\stock-front\\src\\reportWebVitals.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\Main.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\Landing.js",["212","213"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport LanguageSwitcher from '../../components/language-switcher/LanguageSwitcher';\r\nimport i18n from 'i18next';\r\nimport Button from '../../components/input/Button';\r\nimport Form from '../../components/form/Form';\r\nimport LoginForm from '../../forms/login/LoginForm';\r\nimport RegistrationForm from \"../../forms/registration/RegistrationForm\";\r\n\r\n/**\r\n * onLoginSuccess: function\r\n */\r\nclass Landing extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            form: null\r\n        }\r\n    }\r\n\r\n    getForm = () => {\r\n        if (this.state.form === 'login') {\r\n            return <Form\r\n                className='login-dialogbox'\r\n                onClose={() => this.setState({form: null})}\r\n            >\r\n                <LoginForm\r\n                    toRegistration={() => this.setState({form: 'registration'})}\r\n                    onLoginSuccess={this.props.onLoginSuccess}\r\n                />\r\n            </Form>\r\n        } else if (this.state.form === 'registration') {\r\n            return <Form\r\n                className='registration-dialogbox'\r\n                map={true}\r\n                onClose={() => this.setState({form: null})}\r\n            >\r\n                <RegistrationForm\r\n                    toLogin={() => this.setState({form: 'login'})}\r\n                    onRegistrationSuccess={this.props.onLoginSuccess}\r\n                />\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <div className='wrapper'>\r\n            {this.getForm()}\r\n            <div className='content'>\r\n                <header>\r\n                    <div className='container'>\r\n                        <img className='logo' src='/img/logo.png' alt='YourTrader' title='YourTrader'/>\r\n                        <nav className='main-page-nav'>\r\n                            <a href='#ex2'>{t('label.index.benefits')}</a>\r\n                            <a href='#ex3'>{t('label.index.products')}</a>\r\n                            <a href='#ex4'>{t('label.index.for_whom')}</a>\r\n                            <a href='#ex5'>{t('label.index.try_it_now')}</a>\r\n                        </nav>\r\n                        <div className='buttons-login'>\r\n                            <Button className='registration background-blue registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}>\r\n                                {t('label.navigation.regestration')}\r\n                            </Button>\r\n                            <Button className='sign-in login-button' onClick={() => this.setState({form: 'login'})}>\r\n                                {t('label.navigation.login')}\r\n                            </Button>\r\n                        </div>\r\n                        <LanguageSwitcher\r\n                            menuClass='selectmenu-menu-landing'\r\n                            onChange={lang => i18n.changeLanguage(lang)}\r\n                            current={i18n.language}\r\n                        />\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <div className='front' id='ex1'>\r\n                        <div className='container'>\r\n                            <span className='span_h1'>{t('label.index.description_title')}</span>\r\n                            <h1 className='front-desc'>{t('label.index.description')}</h1>\r\n                            <div className='front-desc-but'>\r\n                                <div className='reg-as'>{t('label.index.regestrate_as_farmer')} </div>\r\n                                <div className='reg-but'>\r\n                                    <Button\r\n                                        className='req-far background-green registration-button'\r\n                                        onClick={() => this.setState({form: 'registration'})}\r\n                                    >\r\n                                        {t('label.index.farmer')}\r\n                                    </Button>\r\n                                    <div>{t('label.index.regestrate_as_buyer')}</div>\r\n                                    <Button\r\n                                        className='req-buy background-blue registration-button'\r\n                                        onClick={() => this.setState({form: 'registration'})}\r\n                                    >\r\n                                        {t('label.index.buyer')}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='advantages' id='ex2'>\r\n                        <div className='container'>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/organic.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.speed_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.speed_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/trusted.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.trust_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.trust_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/deal.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.deal_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.deal_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/platform.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.convenient_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.convenient_description')}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='products' id='ex3'>\r\n                        <div className='container'>\r\n                            <span className='span_h3'>{t('label.index.products')}</span>\r\n                            <div className='product-cont unauthorised slider'/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='for-whom' id='ex4'>\r\n                        <div className='for-farmers'>\r\n                            <div className='for-farm-cont'>\r\n                                <span className='span_h3'>{t('label.index.for_farmers')}</span>\r\n                                <ul>\r\n                                    <li>{t('label.index.for_farmers_li1')}</li>\r\n                                    <li>{t('label.index.for_farmers_li2')}</li>\r\n                                    <li>{t('label.index.for_farmers_li3')}</li>\r\n                                </ul>\r\n                                <Button\r\n                                    className='start-trade background-green registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.start_trade_now')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='for-buyers'>\r\n                            <div className='for-buyers-cont'>\r\n                                <span className='span_h3'>{t('label.index.for_buyers')}</span>\r\n                                <ul>\r\n                                    <li>{t('label.index.for_buyers_li1')}</li>\r\n                                    <li>{t('label.index.for_buyers_li2')}</li>\r\n                                    <li>{t('label.index.for_buyers_li3')}</li>\r\n                                </ul>\r\n                                <Button\r\n                                    className='start-buy background-blue registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.start_buy_now')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='about-us' id='about-us'>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.about_us_title')}</span>\r\n                                <p>{t('label.index.about_us_text_one')}</p>\r\n                                <p>{t('label.index.about_us_text_two')}</p>\r\n                            </div>\r\n                            <div>\r\n                                <video width='640' height='480' controls>\r\n                                    <source src='/video/demo.mp4' type='video/mp4'/>\r\n                                </video>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='question' id=''>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.frequently_asked_question')}</span>\r\n                                <p className='answer'>{t('label.index.not_found_answer')}</p>\r\n                                <p className='mail'><a href=''>info@yourtrader.eu</a></p>\r\n                            </div>\r\n                            <div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_one')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_one')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_two')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_two')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_three')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_three')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_four')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_four')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='preview-platform'>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.responsive_title')}</span>\r\n                                <p>{t('label.index.responsive_description')}</p>\r\n                                <Button\r\n                                    className='register background-green registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.registrate')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n            <footer>\r\n                <div className='container'>\r\n                    <div className='contacts'>\r\n                        <p className='phone'>\r\n                            {t('label.index.phone_prefix')}<span>{t('label.index.phone')}</span>\r\n                        </p>\r\n                        <p className='mail'><a href=''>{t('label.index.email')}</a></p>\r\n                    </div>\r\n                    <div className='copyright'>\r\n                        {t('label.index.copyright')}\r\n                    </div>\r\n                </div>\r\n                <div className='button_up'/>\r\n            </footer>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Landing);","D:\\git\\stock\\stock-front\\src\\util\\i18n.js",[],"D:\\git\\stock\\stock-front\\src\\util\\Config.js",["214"],"import ProdConfig from '../config-prod.json';\r\nimport TestConfig from '../config-test.json';\r\nimport DevConfig from '../local-config.json';\r\n\r\nexport default {\r\n    getConfig: () => {\r\n        if (process.env.NODE_ENV === 'production') {\r\n            if (window && window.location && window.location.href\r\n                && !window.location.href.startsWith('http://test.yourtrader.eu')\r\n                && !window.location.href.startsWith('https://test.yourtrader.eu')) {\r\n\r\n                return ProdConfig;\r\n            } else {\r\n                return TestConfig;\r\n            }\r\n        } else {\r\n            return DevConfig;\r\n        }\r\n    }\r\n}","D:\\git\\stock\\stock-front\\src\\util\\ApiUrls.js",[],"D:\\git\\stock\\stock-front\\src\\components\\language-switcher\\LanguageSwitcher.js",[],"D:\\git\\stock\\stock-front\\src\\components\\form\\Form.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Button.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Input.js",[],"D:\\git\\stock\\stock-front\\src\\components\\message\\Message.js",[],"D:\\git\\stock\\stock-front\\src\\util\\Request.js",[],"D:\\git\\stock\\stock-front\\src\\util\\LocalStrorageParams.js",[],"D:\\git\\stock\\stock-front\\src\\components\\checkbox\\CheckBox.js",[],"D:\\git\\stock\\stock-front\\src\\components\\map\\Map.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\login\\LoginForm.js",["215"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Input from '../../components/input/Input';\r\nimport Button from '../../components/input/Button';\r\nimport Request from \"../../util/Request\";\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Message, {TYPES} from \"../../components/message/Message\";\r\n\r\n/**\r\n * toRegistration: function\r\n * onLoginSuccess: function\r\n */\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    loginRequest = () => {\r\n        const {t} = this.props;\r\n        Request.doPost(ApiUrls.AUTHENTICATE, null, this.state)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    const authParams = await response.text();\r\n                    this.props.onLoginSuccess(JSON.parse(authParams));\r\n                } else {\r\n                    this.setState({\r\n                        errorMessage: {\r\n                            type: TYPES.ERROR,\r\n                            value: t('label.index.login_error')\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form' id='login-form'>\r\n            <h3>{t('label.login.loginForm')}</h3>\r\n            <p>{t('label.login.dontHaveAcc')}\r\n                <span className='go_to_registration' onClick={this.props.toRegistration}>\r\n                    <span>{t('label.login.registerHere')}</span>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <Message message={this.state.errorMessage}/>\r\n            </div>\r\n            <Input\r\n                id='Login'\r\n                label={t('label.login.login')}\r\n                type='email'\r\n                name='username'\r\n                placeholder='johndoe@mail.xx'\r\n                value={this.state.username}\r\n                onChange={(newValue) => this.setState({username: newValue})}\r\n            />\r\n\r\n            <Input\r\n                id='Password'\r\n                label={t('label.login.password')}\r\n                type='password'\r\n                name='password'\r\n                placeholder='***********'\r\n                maxLength={50}\r\n                value={this.state.password}\r\n                onChange={(newValue) => this.setState({password: newValue})}\r\n                underline={<a id='reset'><span>{t('label.login.forgot')}</span></a>}\r\n            />\r\n            <div>\r\n                <div id='form-list'>\r\n                    <Button id='login' className='submit button' onClick={this.loginRequest}>\r\n                        {t('label.button.login')}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LoginForm);","D:\\git\\stock\\stock-front\\src\\forms\\registration\\RegistrationForm.js",["216"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Input from '../../components/input/Input';\r\nimport Button from '../../components/input/Button';\r\nimport Request from '../../util/Request';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Message, {TYPES} from '../../components/message/Message';\r\nimport i18next from 'i18next';\r\nimport CheckBox from '../../components/checkbox/CheckBox';\r\n\r\n/**\r\n * toLogin: function\r\n * onRegistrationSuccess: function\r\n * onAddressChanged: function\r\n */\r\nclass RegistrationForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userData: {\r\n                username: '',\r\n                password: '',\r\n                passwordRepeat: '',\r\n                companyName: '',\r\n                phone: '',\r\n                regNumber: '',\r\n                city: '',\r\n                country: '',\r\n                address: '',\r\n                latitude: 0,\r\n                longitude: 0\r\n            },\r\n            errorFields: {\r\n                username: false,\r\n                password: false,\r\n                passwordRepeat: false,\r\n                companyName: false,\r\n                phone: false,\r\n                regNumber: false,\r\n                city: false,\r\n                country: false,\r\n                address: false\r\n            },\r\n            agree: false,\r\n            agreeError: false,\r\n            step: 1,\r\n            message: null\r\n        }\r\n    }\r\n\r\n    register = () => {\r\n        const {t} = this.props;\r\n        if (this.validateEmptyFields() & this.validateAgree()) {\r\n            const data = {...this.state.userData, language: i18next.language};\r\n            Request.doPost(ApiUrls.REGISTRATION, null, data)\r\n                .then(async response => {\r\n                    const text = await response.text();\r\n                    if (response.ok) {\r\n                        const json = JSON.parse(text);\r\n                        this.props.onRegistrationSuccess(json);\r\n                    } else {\r\n                        this.setState({\r\n                            message: {\r\n                                type: TYPES.ERROR,\r\n                                value: t(text)\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    validateAgree = () => {\r\n        this.setState({agreeError: !this.state.agree});\r\n        return this.state.agree;\r\n    };\r\n\r\n    validateEmptyFields = () => {\r\n        const errorFieldNames = [];\r\n        if (this.state.step === 1) {\r\n            if (this.state.userData.username === '') {\r\n                errorFieldNames.push('username');\r\n            }\r\n            if (this.state.userData.password === '') {\r\n                errorFieldNames.push('password');\r\n            }\r\n            if (this.state.userData.passwordRepeat === '') {\r\n                errorFieldNames.push('passwordRepeat');\r\n            }\r\n            if (this.state.userData.companyName === '') {\r\n                errorFieldNames.push('companyName');\r\n            }\r\n            if (this.state.userData.phone === '') {\r\n                errorFieldNames.push('phone');\r\n            }\r\n            if (this.state.userData.regNumber === '') {\r\n                errorFieldNames.push('regNumber');\r\n            }\r\n        } else {\r\n            if (this.state.userData.city === '') {\r\n                errorFieldNames.push('city');\r\n            }\r\n            if (this.state.userData.country === '') {\r\n                errorFieldNames.push('country');\r\n            }\r\n            if (this.state.userData.address === '') {\r\n                errorFieldNames.push('address');\r\n            }\r\n        }\r\n        if (errorFieldNames.length === 0) {\r\n            return true;\r\n        } else {\r\n            const errorFields = {};\r\n            errorFieldNames.forEach(name => errorFields[name] = true);\r\n            this.setState({errorFields: errorFields});\r\n            return false;\r\n        }\r\n    };\r\n\r\n    toStep2 = () => {\r\n        const {t} = this.props;\r\n        const noEmptyFields = this.validateEmptyFields();\r\n        if (this.state.userData.password !== this.state.userData.passwordRepeat) {\r\n            this.setState({\r\n                message: {\r\n                    type: TYPES.ERROR,\r\n                    value: t('label.account.error_password')\r\n                }\r\n            });\r\n        } else if (noEmptyFields) {\r\n            this.setState({step: 2, message: null});\r\n        }\r\n    };\r\n\r\n    setFieldValue = (fieldName, value) => {\r\n        this.setState({\r\n            userData: {\r\n                ...this.state.userData,\r\n                [fieldName]: value\r\n            },\r\n            errorFields: {\r\n                ...this.state.errorFields,\r\n                [fieldName]: value.length === 0\r\n            }\r\n        });\r\n\r\n        if (fieldName === 'city' || fieldName === 'country' || fieldName === 'address') {\r\n            this.changeAddress(fieldName, value);\r\n        }\r\n    };\r\n\r\n    changeAddress = (fieldName, value) => {\r\n        const address = {\r\n            city: this.state.userData.city,\r\n            country: this.state.userData.country,\r\n            address: this.state.userData.address,\r\n            [fieldName]: value\r\n        };\r\n\r\n        if (this.state.timer) {\r\n            clearTimeout(this.state.timer);\r\n        }\r\n        const timer = setTimeout(() =>\r\n            this.props.onAddressChanged(address).then(coords =>\r\n                this.setState({\r\n                    userData: {\r\n                        ...this.state.userData,\r\n                        language: coords.language,\r\n                        longitude: coords.longitude\r\n                    }\r\n                })\r\n            ), 1000);\r\n\r\n        this.setState({timer : timer})\r\n    };\r\n\r\n    getFirstPart = () => {\r\n        const {t} = this.props;\r\n        return <div className='registration-first-part'>\r\n            <div className='flex-input'>\r\n                <Input\r\n                    id='Login'\r\n                    label={t('label.account.login')}\r\n                    type='email'\r\n                    name='username'\r\n                    placeholder='johndoe@mail.xx'\r\n                    value={this.state.userData.username}\r\n                    error={this.state.errorFields.username}\r\n                    onChange={(newValue) => this.setFieldValue('username', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='Phone'\r\n                    label={t('label.account.phone')}\r\n                    type='text'\r\n                    name='phone'\r\n                    placeholder={t('label.account.phone_placeholder')}\r\n                    value={this.state.userData.phone}\r\n                    error={this.state.errorFields.phone}\r\n                    onChange={(newValue) => this.setFieldValue('phone', newValue)}\r\n                    pattern={t('label.account.phone_pattern')}\r\n                />\r\n\r\n                <Input\r\n                    id='CompanyName'\r\n                    label={t('label.account.company_name')}\r\n                    type='text'\r\n                    name='companyName'\r\n                    placeholder='Stock ltd'\r\n                    maxLength={100}\r\n                    value={this.state.userData.companyName}\r\n                    error={this.state.errorFields.companyName}\r\n                    onChange={(newValue) => this.setFieldValue('companyName', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='RegNumber'\r\n                    label={t('label.account.reg_number')}\r\n                    type='text'\r\n                    name='RegNumber'\r\n                    placeholder={t('label.account.reg_number_placeholder')}\r\n                    pattern={t('label.account.reg_number_pattern')}\r\n                    value={this.state.userData.regNumber}\r\n                    error={this.state.errorFields.regNumber}\r\n                    onChange={(newValue) => this.setFieldValue('regNumber', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='Password'\r\n                    label={t('label.account.password')}\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder='***********'\r\n                    maxLength={50}\r\n                    value={this.state.userData.password}\r\n                    error={this.state.errorFields.password}\r\n                    onChange={(newValue) => this.setFieldValue('password', newValue)}\r\n                />\r\n                <Input\r\n                    id='PasswordAgain'\r\n                    label={t('label.account.repeat_password')}\r\n                    type='password'\r\n                    name='passwordRepeat'\r\n                    placeholder='***********'\r\n                    maxLength={50}\r\n                    value={this.state.userData.passwordRepeat}\r\n                    error={this.state.errorFields.passwordRepeat}\r\n                    onChange={(newValue) => this.setFieldValue('passwordRepeat', newValue)}\r\n                />\r\n            </div>\r\n            <Button id='to-second-step' onClick={this.toStep2}>\r\n                {t('label.button.continueButton')}\r\n            </Button>\r\n            <p className='second-step'>{t('label.account.secondStepReg')}</p>\r\n        </div>\r\n    };\r\n\r\n    getSecondPart = () => {\r\n        const {t} = this.props;\r\n        return <div className='registration-second-part'>\r\n            <div className='flex-input'>\r\n                <Input\r\n                    id='City'\r\n                    className='city'\r\n                    label={t('label.account.city')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='Minsk'\r\n                    maxLength={100}\r\n                    value={this.state.userData.city}\r\n                    error={this.state.errorFields.city}\r\n                    onChange={(newValue) => this.setFieldValue('city', newValue)}\r\n                />\r\n                <Input\r\n                    id='Country'\r\n                    className='country'\r\n                    label={t('label.account.country')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='Belarus'\r\n                    maxLength={50}\r\n                    value={this.state.userData.country}\r\n                    error={this.state.errorFields.country}\r\n                    onChange={(newValue) => this.setFieldValue('country', newValue)}\r\n                />\r\n                <Input\r\n                    id='Address'\r\n                    label={t('label.account.address')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='str. Nezalejnasti'\r\n                    maxLength={200}\r\n                    value={this.state.userData.address}\r\n                    error={this.state.errorFields.address}\r\n                    onChange={(newValue) => this.setFieldValue('address', newValue)}\r\n                />\r\n\r\n                <CheckBox\r\n                    value={this.state.agree}\r\n                    error={this.state.agreeError}\r\n                    onChange={(value) => this.setState({agree: value, agreeError: !value})}\r\n                >\r\n                    <span>{t('label.account.accept')}<a>\r\n                        <span>{t('label.account.termsOfUse')}</span>\r\n                    </a></span>\r\n                </CheckBox>\r\n\r\n            </div>\r\n            <Button id='go-back' onClick={() => this.setState({step: 1})}>\r\n                {t('label.button.back')}\r\n            </Button>\r\n            <div id='form-list'>\r\n                <Button id='finish-registration' onClick={this.register}>{t('label.button.finishRegistration')}</Button>\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form' id='registration-form'>\r\n            <h3>{t('label.account.registration')}</h3>\r\n            <p>{t('label.account.haveAcc')}\r\n                <span className='go_to_login' onClick={this.props.toLogin}>\r\n                    <span>{t('label.account.logHere')}</span>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            {this.state.step === 1\r\n                ? this.getFirstPart()\r\n                : this.getSecondPart()}\r\n        </form>\r\n    }\r\n\r\n}\r\n\r\nexport default withTranslation()(RegistrationForm);","D:\\git\\stock\\stock-front\\src\\pages\\user\\UserMain.js",["217","218","219","220","221","222","223","224","225","226","227","228","229","230","231"],"D:\\git\\stock\\stock-front\\src\\util\\LocalStorage.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\feed-back\\FeedBackForm.js",[],"D:\\git\\stock\\stock-front\\src\\util\\VerificationUtils.js",["232","233","234","235","236","237","238","239","240"],"const verificationUtils = {\r\n    checkEmail: (email, t) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email && !re.test(email.toLowerCase())) {\r\n            return t('enter_valid_email');\r\n        } else {\r\n            const domainPart = email.substr(email.indexOf(\"@\") + 1);\r\n            const localPart = email.substr(0, email.indexOf(\"@\"));\r\n            if (domainPart.length > 255 || localPart.length > 64) {\r\n                return t('enter_valid_email');\r\n            }\r\n        }\r\n    },\r\n    checkUrl: (value, t) => {\r\n        const re = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\r\n        if (value !== '' && (!re.test(value.toLowerCase()) || value.length > 2048)) {\r\n            return t('enter_valid_url');\r\n        }\r\n    }\r\n};\r\n\r\nexport default verificationUtils;","D:\\git\\stock\\stock-front\\src\\components\\input\\TextArea.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\account\\AccountForm.js",["241","242","243"],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Lots.js",["244"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Request from \"../../../util/Request\";\r\nimport ApiUrls from \"../../../util/ApiUrls\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Form from \"../../../components/form/Form\";\r\nimport LotForm from \"../../../forms/lot/LotForm\"\r\nimport Message, {TYPES} from \"../../../components/message/Message\";\r\n\r\nclass Lots extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            products: [],\r\n            addresses: [],\r\n            editLot: null\r\n        }\r\n    }\r\n\r\n    loadData = (url) => {\r\n        return Request.doGet(url)\r\n            .then(async responce => {\r\n                if (responce.ok) {\r\n                    return JSON.parse(await responce.text());\r\n                }\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n        const lots = this.loadData(ApiUrls.LOT_LIST);\r\n        const products = this.loadData(ApiUrls.PRODUCT_LIST);\r\n        const addresses = this.loadData(ApiUrls.ADDRESS_LIST);\r\n\r\n        Promise.all([lots, products, addresses])\r\n            .then(values => {\r\n                this.setState({\r\n                    data: values[0],\r\n                    products: values[1],\r\n                    addresses: values[2]\r\n                });\r\n            });\r\n    }\r\n\r\n    getHeader = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {name: t('label.lot.product'), weight: 2},\r\n            {name: t('label.lot.status'), weight: 3},\r\n            {name: t('label.lot.min_price'), weight: 7},\r\n            {name: t('label.lot.max_volume'), weight: 6},\r\n            {name: t('label.lot.exp_date'), weight: 4},\r\n            {name: t('label.lot.creation_date'), weight: 5},\r\n            {name: t('label.lot.edit'), weight: 1},\r\n        ]\r\n    };\r\n\r\n    remove = (id) => {\r\n        Request.doDelete(ApiUrls.LOT.replace(\"{id}\", id))\r\n            .then(responce => {\r\n                if (responce.ok) {\r\n                    this.setState({data: this.state.data.filter(l => l.id !== id)});\r\n                }\r\n            });\r\n    };\r\n\r\n    getProduct = (categoryId) => {\r\n        return this.state.products.find(p => p.categories.find(c => c.id === categoryId));\r\n    };\r\n\r\n    formatDate = (date) => {\r\n        let month = '' + (date.getMonth() + 1);\r\n        let day = '' + date.getDate()\r\n        let year = date.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    };\r\n\r\n    changeStatus = (lot) => {\r\n        const {t} = this.props;\r\n        if (lot.status === 'ACTIVE') {\r\n            Request.doPut(ApiUrls.LOT_DEACTIVATE.replace('{id}', lot.id))\r\n                .then(responce => {\r\n                    if (responce.ok) {\r\n                        const data = this.state.data.slice();\r\n                        data.find(d => d.id === lot.id).status = 'INACTIVE';\r\n                        this.setState({\r\n                            data: data,\r\n                            message: {\r\n                                type: TYPES.SUCCESS,\r\n                                value: t('label.bid.deactivated')\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        } else if (new Date(lot.expirationDate) >= new Date()) {\r\n            Request.doPut(ApiUrls.LOT_ACTIVATE.replace('{id}', lot.id))\r\n                .then(responce => {\r\n                    if (responce.ok) {\r\n                        const data = this.state.data.slice();\r\n                        data.find(d => d.id === lot.id).status = 'ACTIVE';\r\n                        this.setState({\r\n                            data: data,\r\n                            message: {\r\n                                type: TYPES.SUCCESS,\r\n                                value: t('label.bid.activated-morning')\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({\r\n                message: {\r\n                    type: TYPES.ERROR,\r\n                    value: t('label.lot.expDate_error')\r\n                }\r\n            });\r\n        }\r\n        setTimeout(() => this.setState({message: null}), 3000);\r\n    };\r\n\r\n    getData = () => {\r\n        const {t} = this.props;\r\n        return this.state.data.map(l => {\r\n            return [\r\n                t(`label.${this.getProduct(l.categoryId).name}.name`),\r\n                <div className={`swtitch-row-${l.status === 'ACTIVE' ? 'on' : 'off'}`}\r\n                     onClick={() => this.changeStatus(l)}\r\n                />,\r\n                l.price,\r\n                l.maxVolume,\r\n                typeof l.expirationDate === 'string' ? l.expirationDate : this.formatDate(l.expirationDate),\r\n                typeof l.creationDate === 'string' ? l.creationDate : this.formatDate(l.creationDate),\r\n                <React.Fragment>\r\n                    <div className='edit' onClick={() => this.setState({editLot: l})}/>\r\n                    <div className='remove' onClick={() => this.remove(l.id)}/>\r\n                </React.Fragment>\r\n            ]\r\n        })\r\n    };\r\n\r\n    closeForm = () => {\r\n        this.setState({editLot: null});\r\n        this.props.onCloseForm();\r\n    };\r\n\r\n    getForm = () => {\r\n        if (this.state.editLot || this.props.showEmptyForm) {\r\n            return <Form\r\n                className='lot-dialogbox'\r\n                onClose={this.closeForm}\r\n            >\r\n                <LotForm\r\n                    lot={this.state.editLot ? {...this.state.editLot} : null}\r\n                    products={this.state.products}\r\n                    addresses={this.state.addresses}\r\n                    onSave={this.updateLotList}\r\n                />\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    updateLotList = (lot, isNew) => {\r\n        const {t} = this.props;\r\n        const lots = this.state.data.slice();\r\n        if (isNew) {\r\n            lots.splice(0, 0, lot);\r\n        } else {\r\n            const lotFromList = lots.find(l => l.id === lot.id);\r\n            Object.keys(lotFromList)\r\n                .forEach(propertyName => lotFromList[propertyName] = lot[propertyName]);\r\n        }\r\n        this.setState({\r\n            data: lots,\r\n            message: {\r\n                type: TYPES.SUCCESS,\r\n                value: t(lot.status === 'ACTIVE' ? 'label.bid.activated-morning' : 'label.bid.deactivated')\r\n            }\r\n        });\r\n        setTimeout(() => this.setState({message: null}), 3000);\r\n        this.closeForm();\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.getForm()}\r\n            <Table\r\n                data={this.getData()}\r\n                header={this.getHeader()}\r\n                message={this.state.message}\r\n                pageSize={10}\r\n            />\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Lots);","D:\\git\\stock\\stock-front\\src\\components\\table\\Table.js",["245","246","247"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport './Table.css';\r\nimport Message from \"../message/Message\";\r\n\r\n/**\r\n * pageSize: number\r\n * data: [[any]]\r\n * header: [{name: String, weight: number}]\r\n * message: {type: String, value:String}\r\n */\r\nclass Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageNumber: 1,\r\n            search: ''\r\n        }\r\n    }\r\n\r\n    getPageSize = () => {\r\n        return this.props.pageSize || 10;\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.data.length < this.props.data.length) {\r\n            this.setState({pageNumber: 1, search: ''})\r\n        }\r\n    }\r\n\r\n    getPaginator = (data) => {\r\n        console.log(data);\r\n        if (data.length > this.getPageSize()) {\r\n            return <div className=\"dataTables_paginate paging_simple_numbers\" id=\"main-table_paginate\"\r\n                        style={{display: 'block'}}>\r\n                <a className=\"paginate_button previous disabled\"\r\n                   id=\"main-table_previous\"\r\n                   onClick={() => {\r\n                       if (this.state.pageNumber > 1) {\r\n                           this.setState({pageNumber: this.state.pageNumber - 1});\r\n                       }\r\n                   }}\r\n                > </a>\r\n                <span><a className=\"paginate_button current\">{this.state.pageNumber}</a></span>\r\n                <a className=\"paginate_button next disabled\"\r\n                   id=\"main-table_next\"\r\n                   onClick={() => {\r\n                       if (this.state.pageNumber < data.length / 10) {\r\n                           this.setState({pageNumber: this.state.pageNumber + 1});\r\n                       }\r\n                   }}\r\n                > </a>\r\n            </div>\r\n        }\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        this.setState({\r\n            search: e.currentTarget.value,\r\n            pageNumber: 1\r\n        })\r\n    };\r\n\r\n    filterData = () => {\r\n        return this.props.data\r\n            .filter(obj => Object.values(obj).find(field =>\r\n                typeof field === 'string' && field.toLowerCase().indexOf(this.state.search.toLowerCase()) >= 0));\r\n    };\r\n\r\n    getTableRows = (data) => {\r\n        const {t} = this.props;\r\n        if (data.length === 0) {\r\n            return <tr>\r\n                <td valign=\"top\" colSpan={this.props.header.length} className=\"dataTables_empty\">\r\n                    {t('label.table.emptyTable')}\r\n                </td>\r\n            </tr>\r\n        } else {\r\n            return data.map((d, rowIndex) =>\r\n                <tr role=\"row\" className=\"odd inactive-row\" key={`table-row-${rowIndex}`}>\r\n                    {d.map((cell, cellIndex) =>\r\n                        <td className={`column-weight-${this.props.header[cellIndex].weight}`}\r\n                            key={`table-row-${rowIndex}-cell-${cellIndex}`}\r\n                        >\r\n                            {cell}\r\n                        </td>\r\n                    )}\r\n                </tr>\r\n            );\r\n        }\r\n    };\r\n\r\n    getHeader = () => {\r\n        if (this.props.message) {\r\n            return <th colSpan={this.props.header.length} className='table-message-header'>\r\n                <Message message={this.props.message} className='table-message'/>\r\n            </th>\r\n        } else {\r\n            return this.props.header.map((h, index) =>\r\n                <th className={`sorting_disabled column-weight-${h.weight}`} key={`table-head-${index}`}>\r\n                    {h.name}\r\n                </th>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        const filteredData = this.filterData();\r\n        const data = filteredData.slice(\r\n            (this.state.pageNumber - 1) * this.getPageSize(),\r\n            this.state.pageNumber * this.getPageSize()\r\n        );\r\n\r\n        return <div id=\"table-container\">\r\n            <div id=\"main-table_wrapper\" className=\"dataTables_wrapper no-footer\">\r\n                <div id=\"main-table_filter\" className=\"dataTables_filter\">\r\n                    <label>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder={t('label.table.searchPlaceholder')}\r\n                            onChange={this.onSearchChange}\r\n                            value={this.state.search}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <table id=\"main-table\" className=\"display responsive nowrap dataTable no-footer dtr-inline collapsed\"\r\n                       style={{width: '100%'}}>\r\n                    <thead>\r\n                    <tr role=\"row\">\r\n                        {this.getHeader()}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.getTableRows(data)}\r\n                    </tbody>\r\n                </table>\r\n                {this.getPaginator(filteredData)}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Table);","D:\\git\\stock\\stock-front\\src\\forms\\lot\\LotForm.js",["248"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Dropdown from \"../../components/input/Dropdown\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Calendar from \"../../components/input/Calendar\";\r\nimport File from \"../../components/input/File\";\r\nimport TextArea from \"../../components/input/TextArea\";\r\nimport Button from \"../../components/input/Button\";\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Map from \"../../components/map/Map\";\r\nimport Request from '../../util/Request';\r\nimport Message, {TYPES} from \"../../components/message/Message\";\r\n\r\nclass LotForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lot: this.props.lot\r\n                || {\r\n                    id: null,\r\n                    description: '',\r\n                    price: null,\r\n                    minVolume: null,\r\n                    maxVolume: null,\r\n                    companyId: null,\r\n                    status: null,\r\n                    creationDate: new Date(),\r\n                    expirationDate: this.getDefaultExpirationDate(),\r\n                    addressId: this.props.addresses[0].id,\r\n                    distance: 30000,\r\n                    categoryId: null,\r\n                    alert: null,\r\n                    photo: null\r\n                },\r\n            error: {}\r\n        };\r\n    }\r\n\r\n    getDefaultExpirationDate = () => {\r\n        const date = new Date();\r\n        if (date.getMonth() === 12) {\r\n            date.setMonth(1);\r\n            date.setFullYear(date.getFullYear() + 1);\r\n        } else {\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    validate = () => {\r\n        const {t} = this.props;\r\n        const error = {};\r\n        let message = null;\r\n\r\n        if (Number.isNaN(+this.state.lot.price) || this.state.lot.price < 0.01) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.price_error')\r\n            };\r\n            error.price = true;\r\n        }\r\n\r\n        if (!Number.isInteger(+this.state.lot.minVolume) || this.state.lot.minVolume < 1) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.minVolume_error')\r\n            };\r\n            error.minVolume = true;\r\n        }\r\n\r\n        if (!Number.isInteger(+this.state.lot.maxVolume) || this.state.lot.maxVolume < this.state.lot.minVolume) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.maxVolume_error')\r\n            };\r\n            error.maxVolume = true;\r\n        }\r\n        if (!this.state.lot.categoryId) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.category_error')\r\n            };\r\n            error.categoryId = true;\r\n        }\r\n\r\n        if (this.state.lot.expirationDate < new Date()) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.expDate_error')\r\n            };\r\n            error.expirationDate = true;\r\n        }\r\n\r\n        this.setState({error: error, message: message});\r\n        return message === null;\r\n    };\r\n\r\n    save = (status) => {\r\n        if (this.validate()) {\r\n            const lot = {...this.state.lot, status: status};\r\n            const method = lot.id === null ? Request.doPost : Request.doPut;\r\n            method(ApiUrls.LOT.replace('{id}', lot.id || ''), null, lot)\r\n                .then(async responce => {\r\n                    if (responce.ok) {\r\n                        const id = await responce.text();\r\n                        if (id) {\r\n                            lot.id = JSON.parse(id);\r\n                        }\r\n                        this.props.onSave(lot, !!id);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    getProduct = () => {\r\n        const {t} = this.props;\r\n        return this.props.products.find(p => p.categories.find(c => c.id === this.state.lot.categoryId))\r\n            || {name: t('label.lot.list'), id: null, categories: []};\r\n    };\r\n\r\n    getProducts = () => {\r\n        const {t} = this.props;\r\n        const product = this.getProduct();\r\n        const list = this.props.products.map(p => {\r\n            return {\r\n                id: p.id,\r\n                name: t(`label.${p.name}.name`),\r\n                active: p.id === product.id\r\n            }\r\n        });\r\n\r\n        list.splice(0, 0, {name: t('label.lot.list'), id: null, active: product.id === null});\r\n        return list;\r\n    };\r\n\r\n    getCategories = () => {\r\n        const {t} = this.props;\r\n        const list = (this.props.products.find(p => p.id === this.state.lot.productId)\r\n            || this.getProduct()\r\n            || {categories: []})\r\n            .categories\r\n            .map(p => {\r\n                return {\r\n                    id: p.id,\r\n                    name: t(`label.${p.name}.name`),\r\n                    active: p.id === this.state.lot.categoryId\r\n                }\r\n            });\r\n\r\n        list.splice(0, 0, {\r\n            name: t('label.lot.list'), id: null, active: this.state.lot.categoryId === null\r\n        });\r\n        return list;\r\n    };\r\n\r\n    getAddresses = () => {\r\n        return this.props.addresses\r\n            .map(a => {\r\n                return {\r\n                    name: `${a.country}, ${a.city}, ${a.address}`,\r\n                    id: a.id,\r\n                    active: a.id === this.state.lot.addressId\r\n                }\r\n            });\r\n    };\r\n\r\n    getDistances = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {id: 30000, name: t('label.lot.distance_any'), active: this.state.lot.distance === 30000},\r\n            {id: 400, name: t('label.lot.distance_400'), active: this.state.lot.distance === 400},\r\n            {id: 200, name: t('label.lot.distance_200'), active: this.state.lot.distance === 200},\r\n            {id: 100, name: t('label.lot.distance_100'), active: this.state.lot.distance === 100},\r\n            {id: 50, name: t('label.lot.distance_40'), active: this.state.lot.distance === 50},\r\n            {id: 0, name: t('label.lot.distance_0'), active: this.state.lot.distance === 0}\r\n        ];\r\n    };\r\n\r\n    showPhoto = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.lot.photo);\r\n    };\r\n\r\n    changeLot = (propertyName, value) => {\r\n        this.setState({\r\n            lot: {\r\n                ...this.state.lot,\r\n                [propertyName]: value\r\n            },\r\n            error: {\r\n                ...this.state.error,\r\n                [propertyName]: false\r\n            }\r\n        })\r\n    };\r\n\r\n    getCoords = () => {\r\n        const address = this.props.addresses.find(a => a.id === this.state.lot.addressId);\r\n        return {latitude: address.latitude, longitude: address.longitude};\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className=\"form\" action=\"#\" method=\"post\" name=\"form\">\r\n            <h3>{t('label.lot.lotForm')}</h3>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            <div className=\"flex-two-input\">\r\n                <div>\r\n                    <Dropdown\r\n                        id='ProductId'\r\n                        name='productId'\r\n                        elements={this.getProducts()}\r\n                        label={t('label.lot.product')}\r\n                        readOnly={this.state.lot.id !== null}\r\n                        error={this.state.error.productId}\r\n                        onChange={(newId) => this.changeLot('productId', newId)}\r\n                    />\r\n\r\n                    <Dropdown\r\n                        id='CategoryId'\r\n                        name='categoryId'\r\n                        elements={this.getCategories()}\r\n                        label={t('label.lot.category')}\r\n                        error={this.state.error.categoryId}\r\n                        onChange={(newId) => this.changeLot('categoryId', newId)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='Price'\r\n                        label={t('label.lot.min_price')}\r\n                        name='price'\r\n                        placeholder='9.99'\r\n                        value={this.state.lot.price}\r\n                        error={this.state.error.price}\r\n                        onChange={(newValue) => this.changeLot('price', newValue)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='MinVolume'\r\n                        label={t('label.lot.min_volume')}\r\n                        name='minVolume'\r\n                        value={this.state.lot.minVolume}\r\n                        error={this.state.error.minVolume}\r\n                        onChange={(newValue) => this.changeLot('minVolume', newValue)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='MaxVolume'\r\n                        label={t('label.lot.max_volume')}\r\n                        name='maxVolume'\r\n                        value={this.state.lot.maxVolume}\r\n                        error={this.state.error.maxVolume}\r\n                        onChange={(newValue) => this.changeLot('maxVolume', newValue)}\r\n                    />\r\n\r\n                    <Calendar\r\n                        id='ExpDate'\r\n                        label={t('label.lot.exp_date')}\r\n                        value={this.state.lot.expirationDate}\r\n                        error={this.state.error.expirationDate}\r\n                        onChange={(value => this.changeLot('expirationDate', value))}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <Dropdown\r\n                                id='AddressId'\r\n                                name='addressId'\r\n                                className=\"address-selector\"\r\n                                elements={this.getAddresses()}\r\n                                label={t('label.lot.address')}\r\n                                error={this.state.error.addressId}\r\n                                onChange={(newId) => this.changeLot('addressId', newId)}\r\n                            />\r\n\r\n                            <Dropdown\r\n                                id='Distance'\r\n                                name='distance'\r\n                                className=\"address-selector\"\r\n                                elements={this.getDistances()}\r\n                                label={t('label.lot.distance')}\r\n                                error={this.state.error.distance}\r\n                                onChange={(newId) => this.changeLot('distance', newId)}\r\n                            />\r\n\r\n                            {this.state.lot.photo\r\n                                ? <a href='#' onClick={(e) => this.showPhoto(e)}>\r\n                                    {t('label.lot.uploaded_foto')}\r\n                                </a>\r\n                                : ''\r\n                            }\r\n                            <File\r\n                                id='Photo'\r\n                                name='photo'\r\n                                label={t('label.lot.foto')}\r\n                                onChange={(value) => this.changeLot('photo', value)}\r\n                            />\r\n\r\n                            <TextArea\r\n                                id='Description'\r\n                                labe={t('label.lot.description')}\r\n                                name='description'\r\n                                maxLength={1000}\r\n                                value={this.state.lot.description}\r\n                                onChange={(value) => this.changeLot('description', value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"forMapLotsTender google-map-container\"\r\n                             style={{position: 'relative', overflow: 'hidden'}}>\r\n                            <Map coords={this.getCoords()}/>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"form-list\">\r\n                        <Button className=\"submit button gray-button\" id=\"save\" onClick={() => this.save('INACTIVE')}>\r\n                            {t('label.button.save')}\r\n                        </Button>\r\n                        <Button className=\"submit button\" id=\"save-start-trading\" onClick={() => this.save('ACTIVE')}>\r\n                            {t('label.button.save_start_trading')}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LotForm);","D:\\git\\stock\\stock-front\\src\\components\\input\\Calendar.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\File.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Dropdown.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Tenders.js",["249","250"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Request from \"../../../util/Request\";\r\nimport ApiUrls from \"../../../util/ApiUrls\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Form from \"../../../components/form/Form\";\r\nimport LotForm from \"../../../forms/lot/LotForm\"\r\nimport Message, {TYPES} from \"../../../components/message/Message\";\r\nimport TenderForm from \"../../../forms/tender/TenderForm\";\r\n\r\nclass Tenders extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            products: [],\r\n            addresses: [],\r\n            editTender: null\r\n        }\r\n    }\r\n\r\n    loadData = (url) => {\r\n        return Request.doGet(url)\r\n            .then(async responce => {\r\n                if (responce.ok) {\r\n                    return JSON.parse(await responce.text());\r\n                }\r\n            })\r\n    };\r\n\r\n    componentDidMount() {\r\n        const tenders = this.loadData(ApiUrls.TENDER_LIST);\r\n        const products = this.loadData(ApiUrls.PRODUCT_LIST);\r\n        const addresses = this.loadData(ApiUrls.ADDRESS_LIST);\r\n\r\n        Promise.all([tenders, products, addresses])\r\n            .then(values => {\r\n                this.setState({\r\n                    data: values[0],\r\n                    products: values[1],\r\n                    addresses: values[2]\r\n                });\r\n            });\r\n    }\r\n\r\n    getHeader = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {name: t('label.tender.product'), weight: 2},\r\n            {name: t('label.tender.status'), weight: 3},\r\n            {name: t('label.v.max_price'), weight: 7},\r\n            {name: t('label.tender.max_volume'), weight: 6},\r\n            {name: t('label.tender.exp_date'), weight: 4},\r\n            {name: t('label.tender.creation_date'), weight: 5},\r\n            {name: t('label.tender.edit'), weight: 1},\r\n        ]\r\n    };\r\n\r\n    remove = (id) => {\r\n        Request.doDelete(ApiUrls.TENDER.replace(\"{id}\", id))\r\n            .then(responce => {\r\n                if (responce.ok) {\r\n                    this.setState({data: this.state.data.filter(l => l.id !== id)});\r\n                }\r\n            });\r\n    };\r\n\r\n    getProduct = (productId) => {\r\n        return this.state.products.find(p => p.id === productId);\r\n    };\r\n\r\n    formatDate = (date) => {\r\n        let month = '' + (date.getMonth() + 1);\r\n        let day = '' + date.getDate()\r\n        let year = date.getFullYear();\r\n\r\n        if (month.length < 2)\r\n            month = '0' + month;\r\n        if (day.length < 2)\r\n            day = '0' + day;\r\n\r\n        return [year, month, day].join('-');\r\n    };\r\n\r\n    changeStatus = (tender) => {\r\n        const {t} = this.props;\r\n        if (tender.status === 'ACTIVE') {\r\n            Request.doPut(ApiUrls.TENDER_DEACTIVATE.replace('{id}', tender.id))\r\n                .then(responce => {\r\n                    if (responce.ok) {\r\n                        const data = this.state.data.slice();\r\n                        data.find(d => d.id === tender.id).status = 'INACTIVE';\r\n                        this.setState({\r\n                            data: data,\r\n                            message: {\r\n                                type: TYPES.SUCCESS,\r\n                                value: t('label.bid.deactivated')\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        } else if (new Date(tender.expirationDate) >= new Date()) {\r\n            Request.doPut(ApiUrls.TENDER_ACTIVATE.replace('{id}', tender.id))\r\n                .then(responce => {\r\n                    if (responce.ok) {\r\n                        const data = this.state.data.slice();\r\n                        data.find(d => d.id === tender.id).status = 'ACTIVE';\r\n                        this.setState({\r\n                            data: data,\r\n                            message: {\r\n                                type: TYPES.SUCCESS,\r\n                                value: t('label.bid.activated-morning')\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n        } else {\r\n            this.setState({\r\n                message: {\r\n                    type: TYPES.ERROR,\r\n                    value: t('label.tender.expDate_error')\r\n                }\r\n            });\r\n        }\r\n        setTimeout(() => this.setState({message: null}), 3000);\r\n    };\r\n\r\n    getData = () => {\r\n        const {t} = this.props;\r\n        return this.state.data.map(p => {\r\n            return [\r\n                t(`label.${this.getProduct(p.productId).name}.name`),\r\n                <div className={`swtitch-row-${p.status === 'ACTIVE' ? 'on' : 'off'}`}\r\n                     onClick={() => this.changeStatus(p)}\r\n                />,\r\n                p.price,\r\n                p.maxVolume,\r\n                typeof p.expirationDate === 'string' ? p.expirationDate : this.formatDate(p.expirationDate),\r\n                typeof p.creationDate === 'string' ? p.creationDate : this.formatDate(p.creationDate),\r\n                <React.Fragment>\r\n                    <div className='edit' onClick={() => this.setState({editTender: p})}/>\r\n                    <div className='remove' onClick={() => this.remove(p.id)}/>\r\n                </React.Fragment>\r\n            ]\r\n        })\r\n    };\r\n\r\n    closeForm = () => {\r\n        this.setState({editTender: null});\r\n        this.props.onCloseForm();\r\n    };\r\n\r\n    getForm = () => {\r\n        if (this.state.editTender || this.props.showEmptyForm) {\r\n            return <Form\r\n                className='tender-dialogbox'\r\n                onClose={this.closeForm}\r\n            >\r\n                <TenderForm\r\n                    tender={this.state.editTender ? {...this.state.editTender} : null}\r\n                    products={this.state.products}\r\n                    addresses={this.state.addresses}\r\n                    onSave={this.updateTenderList}\r\n                />\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    updateTenderList = (tender, isNew) => {\r\n        const {t} = this.props;\r\n        const tenders = this.state.data.slice();\r\n        if (isNew) {\r\n            tenders.splice(0, 0, tender);\r\n        } else {\r\n            const tenderFromList = tenders.find(l => l.id === tender.id);\r\n            Object.keys(tenderFromList)\r\n                .forEach(propertyName => tenderFromList[propertyName] = tender[propertyName]);\r\n        }\r\n        this.setState({\r\n            data: tenders,\r\n            message: {\r\n                type: TYPES.SUCCESS,\r\n                value: t(tender.status === 'ACTIVE' ? 'label.bid.activated-morning' : 'label.bid.deactivated')\r\n            }\r\n        });\r\n        setTimeout(() => this.setState({message: null}), 3000);\r\n        this.closeForm();\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.getForm()}\r\n            <Table\r\n                data={this.getData()}\r\n                header={this.getHeader()}\r\n                message={this.state.message}\r\n                pageSize={10}\r\n            />\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Tenders);","D:\\git\\stock\\stock-front\\src\\forms\\tender\\TenderForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Products.js",["251","252","253"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Request from \"../../../util/Request\";\r\nimport ApiUrls from \"../../../util/ApiUrls\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Form from \"../../../components/form/Form\";\r\nimport LotForm from \"../../../forms/lot/LotForm\"\r\nimport Message, {TYPES} from \"../../../components/message/Message\";\r\nimport ProductForm from \"../../../forms/product/ProductForm\";\r\nimport Categories from \"./Categories\";\r\n\r\nclass Products extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        return Request.doGet(ApiUrls.PRODUCTS_ADMIN)\r\n            .then(async responce => {\r\n                if (responce.ok) {\r\n                    this.setState({data: JSON.parse(await responce.text())});\r\n                }\r\n            });\r\n    }\r\n\r\n    getHeader = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {name: t('label.product.name'), weight: 1},\r\n            {name: t('label.product.archive'), weight: 3},\r\n            {name: t('label.product.edit'), weight: 1},\r\n        ]\r\n    };\r\n\r\n    changeStatus = (product) => {\r\n        if (product.removed) {\r\n            Request.doPut(ApiUrls.PRODUCT_ADMIN_ACTIVATE.replace('{id}', product.id))\r\n                .then(responce => {\r\n                    if (responce.ok) {\r\n                        const data = this.state.data.slice();\r\n                        data.find(d => d.id === product.id).removed = false;\r\n                        this.setState({data: data});\r\n                    }\r\n                });\r\n        } else {\r\n            Request.doPut(ApiUrls.PRODUCT_ADMIN_DEACTIVATE.replace('{id}', product.id))\r\n                .then(responce => {\r\n                    if (responce.ok) {\r\n                        const data = this.state.data.slice();\r\n                        data.find(d => d.id === product.id).removed = true;\r\n                        this.setState({data: data});\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    getData = () => {\r\n        const {t} = this.props;\r\n        return this.state.data.map(p => {\r\n            return [\r\n                t(`label.${p.name}.name`),\r\n                <div className={`swtitch-row-${p.removed ? 'off' : 'on'}`}\r\n                     onClick={() => this.changeStatus(p)}\r\n                />,\r\n                <div className='edit' onClick={() => this.props.onToDetails(p.id)}/>\r\n            ]\r\n        })\r\n    };\r\n\r\n    getForm = () => {\r\n        if (this.props.showEmptyForm) {\r\n            return <Form\r\n                className='product-dialogbox'\r\n                onClose={this.props.onCloseForm}\r\n            >\r\n                <ProductForm onSave={this.addProduct}/>\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    addProduct = (product) => {\r\n        const products = this.state.data.slice();\r\n        products.splice(0, 0, product);\r\n        this.setState({data: products});\r\n        this.props.onCloseForm();\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.getForm()}\r\n            <Table\r\n                data={this.getData()}\r\n                header={this.getHeader()}\r\n                pageSize={10}\r\n            />\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Products);","D:\\git\\stock\\stock-front\\src\\forms\\product\\ProductForm.js",["254","255","256","257","258","259"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Dropdown from \"../../components/input/Dropdown\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Calendar from \"../../components/input/Calendar\";\r\nimport TextArea from \"../../components/input/TextArea\";\r\nimport Button from \"../../components/input/Button\";\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Map from \"../../components/map/Map\";\r\nimport Request from '../../util/Request';\r\nimport Message, {TYPES} from \"../../components/message/Message\";\r\n\r\nclass ProductForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: {\r\n                id: null,\r\n                name: '',\r\n                picture: '',\r\n                removed: false,\r\n            }\r\n        };\r\n    }\r\n\r\n    save = () => {\r\n        const product = {...this.state.product};\r\n        Request.doPost(ApiUrls.PRODUCT_ADMIN, null, product)\r\n            .then(async responce => {\r\n                if (responce.ok) {\r\n                    product.id = JSON.parse(await responce.text());\r\n                    this.props.onSave(product);\r\n                }\r\n            });\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className=\"form\" name=\"form\">\r\n            <h3>{t('label.product.productForm')}</h3>\r\n            <div className=\"flex-input\">\r\n                <Input\r\n                    id='Name'\r\n                    label={t('label.product.name')}\r\n                    name='name'\r\n                    value={this.state.product.name}\r\n                    onChange={(newValue) => this.setState({product: {...this.state.product, name: newValue}})}\r\n                />\r\n\r\n                <Input\r\n                    id='Picture'\r\n                    label={t('label.product.picture')}\r\n                    name='picture'\r\n                    value={this.state.product.picture}\r\n                    onChange={(newValue) => this.setState({product: {...this.state.product, picture: newValue}})}\r\n                />\r\n\r\n                <div id=\"form-list\">\r\n                    <Button className=\"submit button\" id=\"save\" onClick={this.save}>\r\n                        {t('label.button.save')}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ProductForm);","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Categories.js",["260","261","262","263"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Request from \"../../../util/Request\";\r\nimport ApiUrls from \"../../../util/ApiUrls\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Form from \"../../../components/form/Form\";\r\nimport LotForm from \"../../../forms/lot/LotForm\"\r\nimport Message, {TYPES} from \"../../../components/message/Message\";\r\nimport ProductForm from \"../../../forms/product/ProductForm\";\r\nimport CategoryForm from \"../../../forms/category/CategoryForm\";\r\n\r\nclass Categories extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        return Request.doGet(ApiUrls.PRODUCT_CATEGORIES_ADMIN.replace('{productId}', this.props.productId))\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    this.setState({ data: JSON.parse(await response.text())});\r\n                }\r\n            });\r\n    }\r\n\r\n    getHeader = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {name: t('label.product.name'), weight: 1},\r\n            {name: t('label.product.archive'), weight: 2},\r\n        ]\r\n    };\r\n\r\n    changeStatus = (category) => {\r\n        const baseUrl = category.removed\r\n            ? ApiUrls.PRODUCT_CATEGORY_ADMIN_ACTIVATE\r\n            : ApiUrls.PRODUCT_CATEGORY_ADMIN_DEACTIVATE;\r\n\r\n        const url = baseUrl\r\n            .replace('{id}', category.id)\r\n            .replace('{productId}', this.props.productId);\r\n\r\n        Request.doPut(url)\r\n            .then(responce => {\r\n                if (responce.ok) {\r\n                    const data = this.state.data.slice();\r\n                    data.find(d => d.id === category.id).removed = !category.removed;\r\n                    this.setState({data: data});\r\n                }\r\n            });\r\n    };\r\n\r\n    getData = () => {\r\n        const {t} = this.props;\r\n        return this.state.data.map(c => {\r\n            return [\r\n                t(`label.${c.categoryName}.name`),\r\n                <div className={`swtitch-row-${c.removed ? 'off' : 'on'}`}\r\n                     onClick={() => this.changeStatus(c)}\r\n                />\r\n            ]\r\n        })\r\n    };\r\n\r\n    getForm = () => {\r\n        if (this.props.showEmptyForm) {\r\n            return <Form\r\n                className='product-dialogbox'\r\n                onClose={this.props.onCloseForm}\r\n            >\r\n                <CategoryForm onSave={this.addCategory} productId={this.props.productId}/>\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    addCategory = (category) => {\r\n        const categories = this.state.data.slice();\r\n        categories.splice(0, 0, category);\r\n        this.setState({data: categories});\r\n        this.props.onCloseForm();\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.getForm()}\r\n            <Table\r\n                data={this.getData()}\r\n                header={this.getHeader()}\r\n                pageSize={10}\r\n            />\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Categories);","D:\\git\\stock\\stock-front\\src\\forms\\category\\CategoryForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Companies.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Labels.js",["264"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Request from \"../../../util/Request\";\r\nimport ApiUrls from \"../../../util/ApiUrls\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Form from \"../../../components/form/Form\";\r\nimport LotForm from \"../../../forms/lot/LotForm\"\r\nimport LabelForm from \"../../../forms/label/LabelForm\";\r\n\r\nclass Categories extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            editLabel: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        return Request.doGet(ApiUrls.LABELS_ADMIN)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    this.setState({data: JSON.parse(await response.text())});\r\n                }\r\n            });\r\n    }\r\n\r\n    getHeader = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {name: t('label.labels.name'), weight: 1},\r\n            {name: t('label.labels.english'), weight: 3},\r\n            {name: t('label.labels.poland'), weight: 4},\r\n            {name: t('label.labels.russian'), weight: 5},\r\n            {name: t('label.labels.edit'), weight: 1},\r\n        ]\r\n    };\r\n\r\n    remove = (name) => {\r\n        Request.doDelete(ApiUrls.LABEL_ADMIN.replace(\"{name}\", name))\r\n            .then(response => {\r\n                if (response.ok) {\r\n                    this.setState({data: this.state.data.filter(l => l.name !== name)});\r\n                }\r\n            });\r\n    };\r\n\r\n    getData = () => {\r\n        return this.state.data.map(l => {\r\n            return [\r\n                l.name,\r\n                l.labels.EN,\r\n                l.labels.PL,\r\n                l.labels.RU,\r\n                <React.Fragment>\r\n                    <div className='edit' onClick={() => this.setState({editLabel: l})}/>\r\n                    <div className='remove' onClick={() => this.remove(l.name)}/>\r\n                </React.Fragment>\r\n            ]\r\n        })\r\n    };\r\n\r\n    closeForm = () => {\r\n        this.setState({editLabel: null});\r\n        this.props.onCloseForm();\r\n    };\r\n\r\n    getForm = () => {\r\n        if (this.state.editLabel || this.props.showEmptyForm) {\r\n            return <Form\r\n                className='label-dialogbox'\r\n                onClose={this.closeForm}\r\n            >\r\n                <LabelForm onSave={this.changeLabelList} label={this.state.editLabel ? this.state.editLabel : null}/>\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    changeLabelList = (label, isNew) => {\r\n        const labels = this.state.data.slice();\r\n        if (isNew) {\r\n            labels.splice(0, 0, label);\r\n        } else {\r\n            const labelFromList = labels.find(l => l.id === label.id);\r\n            Object.keys(labelFromList)\r\n                .forEach(propertyName => labelFromList[propertyName] = label[propertyName]);\r\n        }\r\n        this.setState({data: labels});\r\n        this.closeForm();\r\n    };\r\n\r\n    render() {\r\n        return <React.Fragment>\r\n            {this.getForm()}\r\n            <Table\r\n                data={this.getData()}\r\n                header={this.getHeader()}\r\n                pageSize={10}\r\n            />\r\n        </React.Fragment>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Categories);","D:\\git\\stock\\stock-front\\src\\forms\\label\\LabelForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Trade.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\ProductsStatistics.js",["265","266","267","268","269","270","271"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Request from \"../../../util/Request\";\r\nimport ApiUrls from \"../../../util/ApiUrls\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Form from \"../../../components/form/Form\";\r\nimport LotForm from \"../../../forms/lot/LotForm\"\r\nimport Message, {TYPES} from \"../../../components/message/Message\";\r\nimport ProductForm from \"../../../forms/product/ProductForm\";\r\nimport CategoryForm from \"../../../forms/category/CategoryForm\";\r\nimport Button from \"../../../components/input/Button\";\r\n\r\nclass ProductsStatistics extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Request.doGet(ApiUrls.PRODUCTS_STATISTICS)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    this.setState({data: JSON.parse(await response.text())});\r\n                }\r\n            });\r\n    }\r\n\r\n    getCard = (product) => {\r\n        const {t} = this.props;\r\n        return <div className=\"product\"\r\n                    style={{backgroundImage: `url(\"${product.picture}\")`}}\r\n                    key={`product-card-for-${product.id}`}\r\n        >\r\n            <h4>{t(`label.${product.name}.name`)}</h4>\r\n            <Button className=\"background-blue\" onClick={() => this.props.onDetails(product.id)}>\r\n                {t('label.product.details')}\r\n            </Button>\r\n            <div className=\"about-product\">\r\n                <table>\r\n                    <thead>\r\n                    <tr>\r\n                        <td/>\r\n                        <td>{t('label.index.average_price')}</td>\r\n                        <td>{t('label.index.requests_volume')}</td>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr className=\"sell-tr\">\r\n                        <td>{t('label.index.sell')}</td>\r\n                        <td>{product.sell.price}</td>\r\n                        <td>{product.sell.volume}</td>\r\n                    </tr>\r\n                    <tr className=\"buy-tr\">\r\n                        <td>{t('label.index.buy')}</td>\r\n                        <td>{product.buy.price}</td>\r\n                        <td>{product.sell.volume}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </div>;\r\n    };\r\n\r\n    render() {\r\n        return <div className=\"product-cont authorised product-page\">\r\n            {this.state.data.map(this.getCard)}\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ProductsStatistics);","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\ProductStatisticsDetails.js",["272","273","274","275","276","277","278"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Request from \"../../../util/Request\";\r\nimport ApiUrls from \"../../../util/ApiUrls\";\r\nimport Table from \"../../../components/table/Table\";\r\nimport Form from \"../../../components/form/Form\";\r\nimport LotForm from \"../../../forms/lot/LotForm\"\r\nimport Message, {TYPES} from \"../../../components/message/Message\";\r\nimport ProductForm from \"../../../forms/product/ProductForm\";\r\nimport CategoryForm from \"../../../forms/category/CategoryForm\";\r\nimport Button from \"../../../components/input/Button\";\r\n\r\nclass ProductsStatistics extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            product: {\r\n                name: '',\r\n                picture: '',\r\n                rows: []\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Request.doGet(ApiUrls.PRODUCTS_STATISTICS_DETAILS.replace('{id}', this.props.productId))\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    this.setState({product: JSON.parse(await response.text())});\r\n                }\r\n            });\r\n    }\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <div className=\"white-div\">\r\n            <div className=\"header-white-div\" style={{backgroundImage: `url('${this.state.product.picture}')`}}>\r\n                <form className=\"form form-tradeOffers\" name=\"form\">\r\n                    <ul>\r\n                        <li>\r\n                            <input type=\"text\" disabled={true} value={t(`label.${this.state.product.name}.name`)}/>\r\n                        </li>\r\n                    </ul>\r\n                </form>\r\n            </div>\r\n\r\n            <div className=\"table-tradeOffers\">\r\n                <div id=\"main-table_wrapper\" className=\"dataTables_wrapper no-footer\">\r\n                    <table id=\"main-table\" className=\"display responsive nowrap dataTable no-footer dtr-inline\">\r\n                        <thead>\r\n                        <tr role=\"row\">\r\n                            <th>{t('label.product.price')}</th>\r\n                            <th>{t('label.product.lot_volume')}</th>\r\n                            <th>{t('label.product.tender_volume')}</th>\r\n                        </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.state.product.rows.map(r =>\r\n                            <tr key={`product-depails-for-${r.price}`}>\r\n                                <td>{r.price}</td>\r\n                                <td>{r.lotVolume}</td>\r\n                                <td>{r.tenderVolume}</td>\r\n                            </tr>\r\n                        )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n\r\n            <form className=\"form form-tradeOffers-button \">\r\n                <ul>\r\n                    <li>\r\n                        <Button className=\"submit fs-submit gray-button\" onClick={this.props.onBack}>\r\n                            {t('label.button.back')}\r\n                        </Button>\r\n                    </li>\r\n                </ul>\r\n            </form>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(ProductsStatistics);","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Deals.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\DealDetails.js",["279","280","281"],"D:\\git\\stock\\stock-front\\src\\forms\\company-feed-back\\CompanyFeedBackForm.js",["282","283","284","285","286"],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Addresses.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\address\\AddressForm.js",[],{"ruleId":"287","replacedBy":"288"},{"ruleId":"289","replacedBy":"290"},{"ruleId":"291","severity":1,"message":"292","line":189,"column":53,"nodeType":"293","endLine":189,"endColumn":64},{"ruleId":"291","severity":1,"message":"292","line":261,"column":45,"nodeType":"293","endLine":261,"endColumn":56},{"ruleId":"294","severity":1,"message":"295","line":5,"column":1,"nodeType":"296","endLine":20,"endColumn":2},{"ruleId":"291","severity":1,"message":"297","line":75,"column":28,"nodeType":"293","endLine":75,"endColumn":42},{"ruleId":"291","severity":1,"message":"297","line":304,"column":54,"nodeType":"293","endLine":304,"endColumn":57},{"ruleId":"291","severity":1,"message":"292","line":195,"column":17,"nodeType":"293","endLine":195,"endColumn":89},{"ruleId":"291","severity":1,"message":"292","line":200,"column":17,"nodeType":"293","endLine":200,"endColumn":85},{"ruleId":"291","severity":1,"message":"292","line":206,"column":17,"nodeType":"293","endLine":206,"endColumn":88},{"ruleId":"291","severity":1,"message":"292","line":216,"column":17,"nodeType":"293","endLine":216,"endColumn":86},{"ruleId":"291","severity":1,"message":"292","line":235,"column":21,"nodeType":"293","endLine":235,"endColumn":99},{"ruleId":"291","severity":1,"message":"292","line":240,"column":21,"nodeType":"293","endLine":240,"endColumn":92},{"ruleId":"291","severity":1,"message":"292","line":245,"column":21,"nodeType":"293","endLine":245,"endColumn":90},{"ruleId":"291","severity":1,"message":"292","line":250,"column":21,"nodeType":"293","endLine":250,"endColumn":91},{"ruleId":"291","severity":1,"message":"292","line":287,"column":13,"nodeType":"293","endLine":287,"endColumn":85},{"ruleId":"298","severity":1,"message":"299","line":293,"column":21,"nodeType":"293","endLine":293,"endColumn":94},{"ruleId":"291","severity":1,"message":"292","line":293,"column":21,"nodeType":"293","endLine":293,"endColumn":94},{"ruleId":"298","severity":1,"message":"299","line":303,"column":17,"nodeType":"293","endLine":303,"endColumn":90},{"ruleId":"291","severity":1,"message":"292","line":303,"column":17,"nodeType":"293","endLine":303,"endColumn":90},{"ruleId":"291","severity":1,"message":"292","line":329,"column":21,"nodeType":"293","endLine":335,"endColumn":22},{"ruleId":"291","severity":1,"message":"292","line":338,"column":21,"nodeType":"293","endLine":343,"endColumn":43},{"ruleId":"300","severity":1,"message":"301","line":3,"column":30,"nodeType":"302","messageId":"303","endLine":3,"endColumn":31,"suggestions":"304"},{"ruleId":"300","severity":1,"message":"301","line":3,"column":55,"nodeType":"302","messageId":"303","endLine":3,"endColumn":56,"suggestions":"305"},{"ruleId":"300","severity":1,"message":"306","line":15,"column":55,"nodeType":"302","messageId":"303","endLine":15,"endColumn":56,"suggestions":"307"},{"ruleId":"300","severity":1,"message":"306","line":15,"column":67,"nodeType":"302","messageId":"303","endLine":15,"endColumn":68,"suggestions":"308"},{"ruleId":"300","severity":1,"message":"309","line":15,"column":80,"nodeType":"302","messageId":"303","endLine":15,"endColumn":81,"suggestions":"310"},{"ruleId":"300","severity":1,"message":"311","line":15,"column":84,"nodeType":"302","messageId":"303","endLine":15,"endColumn":85,"suggestions":"312"},{"ruleId":"300","severity":1,"message":"313","line":15,"column":86,"nodeType":"302","messageId":"303","endLine":15,"endColumn":87,"suggestions":"314"},{"ruleId":"300","severity":1,"message":"315","line":15,"column":88,"nodeType":"302","messageId":"303","endLine":15,"endColumn":89,"suggestions":"316"},{"ruleId":"300","severity":1,"message":"317","line":15,"column":90,"nodeType":"302","messageId":"303","endLine":15,"endColumn":91,"suggestions":"318"},{"ruleId":"319","severity":1,"message":"320","line":4,"column":8,"nodeType":"321","messageId":"322","endLine":4,"endColumn":20},{"ruleId":"319","severity":1,"message":"323","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":16},{"ruleId":"319","severity":1,"message":"324","line":12,"column":8,"nodeType":"321","messageId":"322","endLine":12,"endColumn":15},{"ruleId":"319","severity":1,"message":"325","line":8,"column":8,"nodeType":"321","messageId":"322","endLine":8,"endColumn":15},{"ruleId":"291","severity":1,"message":"297","line":37,"column":17,"nodeType":"293","endLine":44,"endColumn":18},{"ruleId":"291","severity":1,"message":"297","line":45,"column":23,"nodeType":"293","endLine":45,"endColumn":62},{"ruleId":"291","severity":1,"message":"297","line":46,"column":17,"nodeType":"293","endLine":53,"endColumn":18},{"ruleId":"291","severity":1,"message":"292","line":291,"column":35,"nodeType":"293","endLine":291,"endColumn":82},{"ruleId":"319","severity":1,"message":"326","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":15},{"ruleId":"319","severity":1,"message":"325","line":8,"column":8,"nodeType":"321","messageId":"322","endLine":8,"endColumn":15},{"ruleId":"319","severity":1,"message":"326","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":15},{"ruleId":"319","severity":1,"message":"325","line":8,"column":8,"nodeType":"321","messageId":"322","endLine":8,"endColumn":15},{"ruleId":"319","severity":1,"message":"327","line":8,"column":18,"nodeType":"321","messageId":"322","endLine":8,"endColumn":23},{"ruleId":"319","severity":1,"message":"328","line":3,"column":8,"nodeType":"321","messageId":"322","endLine":3,"endColumn":16},{"ruleId":"319","severity":1,"message":"329","line":5,"column":8,"nodeType":"321","messageId":"322","endLine":5,"endColumn":16},{"ruleId":"319","severity":1,"message":"323","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":16},{"ruleId":"319","severity":1,"message":"330","line":9,"column":8,"nodeType":"321","messageId":"322","endLine":9,"endColumn":11},{"ruleId":"319","severity":1,"message":"325","line":11,"column":8,"nodeType":"321","messageId":"322","endLine":11,"endColumn":15},{"ruleId":"319","severity":1,"message":"327","line":11,"column":18,"nodeType":"321","messageId":"322","endLine":11,"endColumn":23},{"ruleId":"319","severity":1,"message":"326","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":15},{"ruleId":"319","severity":1,"message":"325","line":8,"column":8,"nodeType":"321","messageId":"322","endLine":8,"endColumn":15},{"ruleId":"319","severity":1,"message":"327","line":8,"column":18,"nodeType":"321","messageId":"322","endLine":8,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":9,"column":8,"nodeType":"321","messageId":"322","endLine":9,"endColumn":19},{"ruleId":"319","severity":1,"message":"326","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":15},{"ruleId":"319","severity":1,"message":"332","line":5,"column":8,"nodeType":"321","messageId":"322","endLine":5,"endColumn":13},{"ruleId":"319","severity":1,"message":"333","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":12},{"ruleId":"319","severity":1,"message":"326","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":15},{"ruleId":"319","severity":1,"message":"325","line":8,"column":8,"nodeType":"321","messageId":"322","endLine":8,"endColumn":15},{"ruleId":"319","severity":1,"message":"327","line":8,"column":18,"nodeType":"321","messageId":"322","endLine":8,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":9,"column":8,"nodeType":"321","messageId":"322","endLine":9,"endColumn":19},{"ruleId":"319","severity":1,"message":"334","line":10,"column":8,"nodeType":"321","messageId":"322","endLine":10,"endColumn":20},{"ruleId":"319","severity":1,"message":"332","line":5,"column":8,"nodeType":"321","messageId":"322","endLine":5,"endColumn":13},{"ruleId":"319","severity":1,"message":"333","line":6,"column":8,"nodeType":"321","messageId":"322","endLine":6,"endColumn":12},{"ruleId":"319","severity":1,"message":"326","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":15},{"ruleId":"319","severity":1,"message":"325","line":8,"column":8,"nodeType":"321","messageId":"322","endLine":8,"endColumn":15},{"ruleId":"319","severity":1,"message":"327","line":8,"column":18,"nodeType":"321","messageId":"322","endLine":8,"endColumn":23},{"ruleId":"319","severity":1,"message":"331","line":9,"column":8,"nodeType":"321","messageId":"322","endLine":9,"endColumn":19},{"ruleId":"319","severity":1,"message":"334","line":10,"column":8,"nodeType":"321","messageId":"322","endLine":10,"endColumn":20},{"ruleId":"319","severity":1,"message":"332","line":5,"column":8,"nodeType":"321","messageId":"322","endLine":5,"endColumn":13},{"ruleId":"319","severity":1,"message":"330","line":8,"column":9,"nodeType":"321","messageId":"322","endLine":8,"endColumn":12},{"ruleId":"319","severity":1,"message":"326","line":12,"column":8,"nodeType":"321","messageId":"322","endLine":12,"endColumn":15},{"ruleId":"319","severity":1,"message":"320","line":4,"column":8,"nodeType":"321","messageId":"322","endLine":4,"endColumn":20},{"ruleId":"319","severity":1,"message":"335","line":5,"column":8,"nodeType":"321","messageId":"322","endLine":5,"endColumn":13},{"ruleId":"319","severity":1,"message":"336","line":7,"column":8,"nodeType":"321","messageId":"322","endLine":7,"endColumn":25},{"ruleId":"319","severity":1,"message":"325","line":10,"column":8,"nodeType":"321","messageId":"322","endLine":10,"endColumn":15},{"ruleId":"319","severity":1,"message":"327","line":10,"column":18,"nodeType":"321","messageId":"322","endLine":10,"endColumn":23},"no-native-reassign",["337"],"no-negated-in-lhs",["338"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["339","340"],["341","342"],"Unnecessary escape character: \\..",["343","344"],["345","346"],"Unnecessary escape character: \\$.",["347","348"],"Unnecessary escape character: \\(.",["349","350"],"Unnecessary escape character: \\).",["351","352"],"Unnecessary escape character: \\*.",["353","354"],"Unnecessary escape character: \\+.",["355","356"],"no-unused-vars","'LocalStorage' is defined but never used.","Identifier","unusedVar","'TextArea' is defined but never used.","'i18next' is defined but never used.","'Message' is defined but never used.","'LotForm' is defined but never used.","'TYPES' is defined but never used.","'Dropdown' is defined but never used.","'Calendar' is defined but never used.","'Map' is defined but never used.","'ProductForm' is defined but never used.","'Table' is defined but never used.","'Form' is defined but never used.","'CategoryForm' is defined but never used.","'Input' is defined but never used.","'VerificationUtils' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"357","fix":"358","desc":"359"},{"messageId":"360","fix":"361","desc":"362"},{"messageId":"357","fix":"363","desc":"359"},{"messageId":"360","fix":"364","desc":"362"},{"messageId":"357","fix":"365","desc":"359"},{"messageId":"360","fix":"366","desc":"362"},{"messageId":"357","fix":"367","desc":"359"},{"messageId":"360","fix":"368","desc":"362"},{"messageId":"357","fix":"369","desc":"359"},{"messageId":"360","fix":"370","desc":"362"},{"messageId":"357","fix":"371","desc":"359"},{"messageId":"360","fix":"372","desc":"362"},{"messageId":"357","fix":"373","desc":"359"},{"messageId":"360","fix":"374","desc":"362"},{"messageId":"357","fix":"375","desc":"359"},{"messageId":"360","fix":"376","desc":"362"},{"messageId":"357","fix":"377","desc":"359"},{"messageId":"360","fix":"378","desc":"362"},"removeEscape",{"range":"379","text":"380"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"381","text":"382"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"383","text":"380"},{"range":"384","text":"382"},{"range":"385","text":"380"},{"range":"386","text":"382"},{"range":"387","text":"380"},{"range":"388","text":"382"},{"range":"389","text":"380"},{"range":"390","text":"382"},{"range":"391","text":"380"},{"range":"392","text":"382"},{"range":"393","text":"380"},{"range":"394","text":"382"},{"range":"395","text":"380"},{"range":"396","text":"382"},{"range":"397","text":"380"},{"range":"398","text":"382"},[91,92],"",[91,91],"\\",[116,117],[116,116],[728,729],[728,728],[740,741],[740,740],[753,754],[753,753],[757,758],[757,757],[759,760],[759,759],[761,762],[761,761],[763,764],[763,763]]