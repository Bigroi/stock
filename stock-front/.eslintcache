[{"D:\\git\\stock\\stock-front\\src\\index.js":"1","D:\\git\\stock\\stock-front\\src\\App.js":"2","D:\\git\\stock\\stock-front\\src\\reportWebVitals.js":"3","D:\\git\\stock\\stock-front\\src\\pages\\Main.js":"4","D:\\git\\stock\\stock-front\\src\\pages\\public\\Landing.js":"5","D:\\git\\stock\\stock-front\\src\\util\\i18n.js":"6","D:\\git\\stock\\stock-front\\src\\util\\Config.js":"7","D:\\git\\stock\\stock-front\\src\\util\\ApiUrls.js":"8","D:\\git\\stock\\stock-front\\src\\components\\language-switcher\\LanguageSwitcher.js":"9","D:\\git\\stock\\stock-front\\src\\components\\form\\Form.js":"10","D:\\git\\stock\\stock-front\\src\\components\\input\\Button.js":"11","D:\\git\\stock\\stock-front\\src\\components\\input\\Input.js":"12","D:\\git\\stock\\stock-front\\src\\components\\message\\Message.js":"13","D:\\git\\stock\\stock-front\\src\\util\\Request.js":"14","D:\\git\\stock\\stock-front\\src\\util\\LocalStrorageParams.js":"15","D:\\git\\stock\\stock-front\\src\\components\\checkbox\\CheckBox.js":"16","D:\\git\\stock\\stock-front\\src\\components\\map\\Map.js":"17","D:\\git\\stock\\stock-front\\src\\forms\\login\\LoginForm.js":"18","D:\\git\\stock\\stock-front\\src\\forms\\registration\\RegistrationForm.js":"19","D:\\git\\stock\\stock-front\\src\\pages\\user\\UserMain.js":"20","D:\\git\\stock\\stock-front\\src\\util\\LocalStorage.js":"21","D:\\git\\stock\\stock-front\\src\\forms\\feed-back\\FeedBackForm.js":"22","D:\\git\\stock\\stock-front\\src\\util\\VerificationUtils.js":"23","D:\\git\\stock\\stock-front\\src\\components\\input\\TextArea.js":"24","D:\\git\\stock\\stock-front\\src\\forms\\account\\AccountForm.js":"25","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Lots.js":"26","D:\\git\\stock\\stock-front\\src\\components\\table\\Table.js":"27","D:\\git\\stock\\stock-front\\src\\forms\\lot\\LotForm.js":"28","D:\\git\\stock\\stock-front\\src\\components\\input\\Calendar.js":"29","D:\\git\\stock\\stock-front\\src\\components\\input\\File.js":"30","D:\\git\\stock\\stock-front\\src\\components\\input\\Dropdown.js":"31"},{"size":597,"mtime":1607784809520,"results":"32","hashOfConfig":"33"},{"size":138,"mtime":1607551779928,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":499162500000,"results":"35","hashOfConfig":"33"},{"size":1127,"mtime":1608673669173,"results":"36","hashOfConfig":"33"},{"size":14890,"mtime":1608229109370,"results":"37","hashOfConfig":"33"},{"size":812,"mtime":1608164508880,"results":"38","hashOfConfig":"33"},{"size":653,"mtime":1607548861867,"results":"39","hashOfConfig":"33"},{"size":778,"mtime":1608640544479,"results":"40","hashOfConfig":"33"},{"size":2400,"mtime":1608229109386,"results":"41","hashOfConfig":"33"},{"size":2174,"mtime":1608231643672,"results":"42","hashOfConfig":"33"},{"size":373,"mtime":1608072852394,"results":"43","hashOfConfig":"33"},{"size":1211,"mtime":1608222193604,"results":"44","hashOfConfig":"33"},{"size":520,"mtime":1608686517851,"results":"45","hashOfConfig":"33"},{"size":4384,"mtime":1608230709661,"results":"46","hashOfConfig":"33"},{"size":233,"mtime":1608208502396,"results":"47","hashOfConfig":"33"},{"size":634,"mtime":1608168347370,"results":"48","hashOfConfig":"33"},{"size":1371,"mtime":1608165423650,"results":"49","hashOfConfig":"33"},{"size":2998,"mtime":1608210012384,"results":"50","hashOfConfig":"33"},{"size":12558,"mtime":1608168347388,"results":"51","hashOfConfig":"33"},{"size":11382,"mtime":1608758433791,"results":"52","hashOfConfig":"33"},{"size":578,"mtime":1608688027828,"results":"53","hashOfConfig":"33"},{"size":3030,"mtime":1608215806928,"results":"54","hashOfConfig":"33"},{"size":962,"mtime":1607549256410,"results":"55","hashOfConfig":"33"},{"size":796,"mtime":1608420640695,"results":"56","hashOfConfig":"33"},{"size":7381,"mtime":1608231643658,"results":"57","hashOfConfig":"33"},{"size":7065,"mtime":1608759717968,"results":"58","hashOfConfig":"33"},{"size":5054,"mtime":1608759871054,"results":"59","hashOfConfig":"33"},{"size":12809,"mtime":1608687904475,"results":"60","hashOfConfig":"33"},{"size":1079,"mtime":1608684906138,"results":"61","hashOfConfig":"33"},{"size":670,"mtime":1608675473542,"results":"62","hashOfConfig":"33"},{"size":1009,"mtime":1608421873290,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"13r9h7f",{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"66"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"66"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"66"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"66"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"66"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"66"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"66"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},"D:\\git\\stock\\stock-front\\src\\index.js",[],["134","135"],"D:\\git\\stock\\stock-front\\src\\App.js",[],"D:\\git\\stock\\stock-front\\src\\reportWebVitals.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\Main.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\Landing.js",["136","137"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport LanguageSwitcher from '../../components/language-switcher/LanguageSwitcher';\r\nimport i18n from 'i18next';\r\nimport Button from '../../components/input/Button';\r\nimport Form from '../../components/form/Form';\r\nimport LoginForm from '../../forms/login/LoginForm';\r\nimport RegistrationForm from \"../../forms/registration/RegistrationForm\";\r\n\r\n/**\r\n * onLoginSuccess: function\r\n */\r\nclass Landing extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            form: null\r\n        }\r\n    }\r\n\r\n    getForm = () => {\r\n        if (this.state.form === 'login') {\r\n            return <Form\r\n                className='login-dialogbox'\r\n                onClose={() => this.setState({form: null})}\r\n            >\r\n                <LoginForm\r\n                    toRegistration={() => this.setState({form: 'registration'})}\r\n                    onLoginSuccess={this.props.onLoginSuccess}\r\n                />\r\n            </Form>\r\n        } else if (this.state.form === 'registration') {\r\n            return <Form\r\n                className='registration-dialogbox'\r\n                map={true}\r\n                onClose={() => this.setState({form: null})}\r\n            >\r\n                <RegistrationForm\r\n                    toLogin={() => this.setState({form: 'login'})}\r\n                    onRegistrationSuccess={this.props.onLoginSuccess}\r\n                />\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <div className='wrapper'>\r\n            {this.getForm()}\r\n            <div className='content'>\r\n                <header>\r\n                    <div className='container'>\r\n                        <img className='logo' src='/img/logo.png' alt='YourTrader' title='YourTrader'/>\r\n                        <nav className='main-page-nav'>\r\n                            <a href='#ex2'>{t('label.index.benefits')}</a>\r\n                            <a href='#ex3'>{t('label.index.products')}</a>\r\n                            <a href='#ex4'>{t('label.index.for_whom')}</a>\r\n                            <a href='#ex5'>{t('label.index.try_it_now')}</a>\r\n                        </nav>\r\n                        <div className='buttons-login'>\r\n                            <Button className='registration background-blue registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}>\r\n                                {t('label.navigation.regestration')}\r\n                            </Button>\r\n                            <Button className='sign-in login-button' onClick={() => this.setState({form: 'login'})}>\r\n                                {t('label.navigation.login')}\r\n                            </Button>\r\n                        </div>\r\n                        <LanguageSwitcher\r\n                            menuClass='selectmenu-menu-landing'\r\n                            onChange={lang => i18n.changeLanguage(lang)}\r\n                            current={i18n.language}\r\n                        />\r\n                    </div>\r\n                </header>\r\n                <main>\r\n                    <div className='front' id='ex1'>\r\n                        <div className='container'>\r\n                            <span className='span_h1'>{t('label.index.description_title')}</span>\r\n                            <h1 className='front-desc'>{t('label.index.description')}</h1>\r\n                            <div className='front-desc-but'>\r\n                                <div className='reg-as'>{t('label.index.regestrate_as_farmer')} </div>\r\n                                <div className='reg-but'>\r\n                                    <Button\r\n                                        className='req-far background-green registration-button'\r\n                                        onClick={() => this.setState({form: 'registration'})}\r\n                                    >\r\n                                        {t('label.index.farmer')}\r\n                                    </Button>\r\n                                    <div>{t('label.index.regestrate_as_buyer')}</div>\r\n                                    <Button\r\n                                        className='req-buy background-blue registration-button'\r\n                                        onClick={() => this.setState({form: 'registration'})}\r\n                                    >\r\n                                        {t('label.index.buyer')}\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='advantages' id='ex2'>\r\n                        <div className='container'>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/organic.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.speed_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.speed_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/trusted.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.trust_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.trust_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/deal.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.deal_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.deal_description')}</p>\r\n                            </div>\r\n                            <div className='advantage'>\r\n                                <div className='adv-icon'>\r\n                                    <img src='/img/platform.png' alt='YourTrader' title='YourTrader'/>\r\n                                </div>\r\n                                <p className='adv-title'>{t('label.index.convenient_title')}</p>\r\n                                <p className='adv-desc'>{t('label.index.convenient_description')}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='products' id='ex3'>\r\n                        <div className='container'>\r\n                            <span className='span_h3'>{t('label.index.products')}</span>\r\n                            <div className='product-cont unauthorised slider'/>\r\n                        </div>\r\n                    </div>\r\n                    <div className='for-whom' id='ex4'>\r\n                        <div className='for-farmers'>\r\n                            <div className='for-farm-cont'>\r\n                                <span className='span_h3'>{t('label.index.for_farmers')}</span>\r\n                                <ul>\r\n                                    <li>{t('label.index.for_farmers_li1')}</li>\r\n                                    <li>{t('label.index.for_farmers_li2')}</li>\r\n                                    <li>{t('label.index.for_farmers_li3')}</li>\r\n                                </ul>\r\n                                <Button\r\n                                    className='start-trade background-green registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.start_trade_now')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                        <div className='for-buyers'>\r\n                            <div className='for-buyers-cont'>\r\n                                <span className='span_h3'>{t('label.index.for_buyers')}</span>\r\n                                <ul>\r\n                                    <li>{t('label.index.for_buyers_li1')}</li>\r\n                                    <li>{t('label.index.for_buyers_li2')}</li>\r\n                                    <li>{t('label.index.for_buyers_li3')}</li>\r\n                                </ul>\r\n                                <Button\r\n                                    className='start-buy background-blue registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.start_buy_now')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='about-us' id='about-us'>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.about_us_title')}</span>\r\n                                <p>{t('label.index.about_us_text_one')}</p>\r\n                                <p>{t('label.index.about_us_text_two')}</p>\r\n                            </div>\r\n                            <div>\r\n                                <video width='640' height='480' controls>\r\n                                    <source src='/video/demo.mp4' type='video/mp4'/>\r\n                                </video>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='question' id=''>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.frequently_asked_question')}</span>\r\n                                <p className='answer'>{t('label.index.not_found_answer')}</p>\r\n                                <p className='mail'><a href=''>info@yourtrader.eu</a></p>\r\n                            </div>\r\n                            <div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_one')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_one')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_two')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_two')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_three')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_three')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='question-answer'>\r\n                                    <div>\r\n                                        <div className='header-question'>\r\n                                            {t('label.index.header_question_four')}\r\n                                            <div className='question-close'/>\r\n                                        </div>\r\n                                        <div className='body-answer'>\r\n                                            {t('label.index.body_answer_four')}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='preview-platform'>\r\n                        <div className='container'>\r\n                            <div>\r\n                                <span className='span_h3'>{t('label.index.responsive_title')}</span>\r\n                                <p>{t('label.index.responsive_description')}</p>\r\n                                <Button\r\n                                    className='register background-green registration-button'\r\n                                    onClick={() => this.setState({form: 'registration'})}\r\n                                >\r\n                                    {t('label.button.registrate')}\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </main>\r\n            </div>\r\n            <footer>\r\n                <div className='container'>\r\n                    <div className='contacts'>\r\n                        <p className='phone'>\r\n                            {t('label.index.phone_prefix')}<span>{t('label.index.phone')}</span>\r\n                        </p>\r\n                        <p className='mail'><a href=''>{t('label.index.email')}</a></p>\r\n                    </div>\r\n                    <div className='copyright'>\r\n                        {t('label.index.copyright')}\r\n                    </div>\r\n                </div>\r\n                <div className='button_up'/>\r\n            </footer>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Landing);","D:\\git\\stock\\stock-front\\src\\util\\i18n.js",[],"D:\\git\\stock\\stock-front\\src\\util\\Config.js",["138"],"import ProdConfig from '../config-prod.json';\r\nimport TestConfig from '../config-test.json';\r\nimport DevConfig from '../local-config.json';\r\n\r\nexport default {\r\n    getConfig: () => {\r\n        if (process.env.NODE_ENV === 'production') {\r\n            if (window && window.location && window.location.href\r\n                && !window.location.href.startsWith('http://test.yourtrader.eu')\r\n                && !window.location.href.startsWith('https://test.yourtrader.eu')) {\r\n\r\n                return ProdConfig;\r\n            } else {\r\n                return TestConfig;\r\n            }\r\n        } else {\r\n            return DevConfig;\r\n        }\r\n    }\r\n}","D:\\git\\stock\\stock-front\\src\\util\\ApiUrls.js",[],"D:\\git\\stock\\stock-front\\src\\components\\language-switcher\\LanguageSwitcher.js",[],"D:\\git\\stock\\stock-front\\src\\components\\form\\Form.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Button.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Input.js",[],"D:\\git\\stock\\stock-front\\src\\components\\message\\Message.js",[],"D:\\git\\stock\\stock-front\\src\\util\\Request.js",[],"D:\\git\\stock\\stock-front\\src\\util\\LocalStrorageParams.js",[],"D:\\git\\stock\\stock-front\\src\\components\\checkbox\\CheckBox.js",[],"D:\\git\\stock\\stock-front\\src\\components\\map\\Map.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\login\\LoginForm.js",["139"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Input from '../../components/input/Input';\r\nimport Button from '../../components/input/Button';\r\nimport Request from \"../../util/Request\";\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Message, {TYPES} from \"../../components/message/Message\";\r\n\r\n/**\r\n * toRegistration: function\r\n * onLoginSuccess: function\r\n */\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    loginRequest = () => {\r\n        const {t} = this.props;\r\n        Request.doPost(ApiUrls.AUTHENTICATE, null, this.state)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    const authParams = await response.text();\r\n                    this.props.onLoginSuccess(JSON.parse(authParams));\r\n                } else {\r\n                    this.setState({\r\n                        errorMessage: {\r\n                            type: TYPES.ERROR,\r\n                            value: t('label.index.login_error')\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form' id='login-form'>\r\n            <h3>{t('label.login.loginForm')}</h3>\r\n            <p>{t('label.login.dontHaveAcc')}\r\n                <span className='go_to_registration' onClick={this.props.toRegistration}>\r\n                    <span>{t('label.login.registerHere')}</span>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <Message message={this.state.errorMessage}/>\r\n            </div>\r\n            <Input\r\n                id='Login'\r\n                label={t('label.login.login')}\r\n                type='email'\r\n                name='username'\r\n                placeholder='johndoe@mail.xx'\r\n                value={this.state.username}\r\n                onChange={(newValue) => this.setState({username: newValue})}\r\n            />\r\n\r\n            <Input\r\n                id='Password'\r\n                label={t('label.login.password')}\r\n                type='password'\r\n                name='password'\r\n                placeholder='***********'\r\n                maxLength={50}\r\n                value={this.state.password}\r\n                onChange={(newValue) => this.setState({password: newValue})}\r\n                underline={<a id='reset'><span>{t('label.login.forgot')}</span></a>}\r\n            />\r\n            <div>\r\n                <div id='form-list'>\r\n                    <Button id='login' className='submit button' onClick={this.loginRequest}>\r\n                        {t('label.button.login')}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LoginForm);","D:\\git\\stock\\stock-front\\src\\forms\\registration\\RegistrationForm.js",["140"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Input from '../../components/input/Input';\r\nimport Button from '../../components/input/Button';\r\nimport Request from '../../util/Request';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Message, {TYPES} from '../../components/message/Message';\r\nimport i18next from 'i18next';\r\nimport CheckBox from '../../components/checkbox/CheckBox';\r\n\r\n/**\r\n * toLogin: function\r\n * onRegistrationSuccess: function\r\n * onAddressChanged: function\r\n */\r\nclass RegistrationForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userData: {\r\n                username: '',\r\n                password: '',\r\n                passwordRepeat: '',\r\n                companyName: '',\r\n                phone: '',\r\n                regNumber: '',\r\n                city: '',\r\n                country: '',\r\n                address: '',\r\n                latitude: 0,\r\n                longitude: 0\r\n            },\r\n            errorFields: {\r\n                username: false,\r\n                password: false,\r\n                passwordRepeat: false,\r\n                companyName: false,\r\n                phone: false,\r\n                regNumber: false,\r\n                city: false,\r\n                country: false,\r\n                address: false\r\n            },\r\n            agree: false,\r\n            agreeError: false,\r\n            step: 1,\r\n            message: null\r\n        }\r\n    }\r\n\r\n    register = () => {\r\n        const {t} = this.props;\r\n        if (this.validateEmptyFields() & this.validateAgree()) {\r\n            const data = {...this.state.userData, language: i18next.language};\r\n            Request.doPost(ApiUrls.REGISTRATION, null, data)\r\n                .then(async response => {\r\n                    const text = await response.text();\r\n                    if (response.ok) {\r\n                        const json = JSON.parse(text);\r\n                        this.props.onRegistrationSuccess(json);\r\n                    } else {\r\n                        this.setState({\r\n                            message: {\r\n                                type: TYPES.ERROR,\r\n                                value: t(text)\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    validateAgree = () => {\r\n        this.setState({agreeError: !this.state.agree});\r\n        return this.state.agree;\r\n    };\r\n\r\n    validateEmptyFields = () => {\r\n        const errorFieldNames = [];\r\n        if (this.state.step === 1) {\r\n            if (this.state.userData.username === '') {\r\n                errorFieldNames.push('username');\r\n            }\r\n            if (this.state.userData.password === '') {\r\n                errorFieldNames.push('password');\r\n            }\r\n            if (this.state.userData.passwordRepeat === '') {\r\n                errorFieldNames.push('passwordRepeat');\r\n            }\r\n            if (this.state.userData.companyName === '') {\r\n                errorFieldNames.push('companyName');\r\n            }\r\n            if (this.state.userData.phone === '') {\r\n                errorFieldNames.push('phone');\r\n            }\r\n            if (this.state.userData.regNumber === '') {\r\n                errorFieldNames.push('regNumber');\r\n            }\r\n        } else {\r\n            if (this.state.userData.city === '') {\r\n                errorFieldNames.push('city');\r\n            }\r\n            if (this.state.userData.country === '') {\r\n                errorFieldNames.push('country');\r\n            }\r\n            if (this.state.userData.address === '') {\r\n                errorFieldNames.push('address');\r\n            }\r\n        }\r\n        if (errorFieldNames.length === 0) {\r\n            return true;\r\n        } else {\r\n            const errorFields = {};\r\n            errorFieldNames.forEach(name => errorFields[name] = true);\r\n            this.setState({errorFields: errorFields});\r\n            return false;\r\n        }\r\n    };\r\n\r\n    toStep2 = () => {\r\n        const {t} = this.props;\r\n        const noEmptyFields = this.validateEmptyFields();\r\n        if (this.state.userData.password !== this.state.userData.passwordRepeat) {\r\n            this.setState({\r\n                message: {\r\n                    type: TYPES.ERROR,\r\n                    value: t('label.account.error_password')\r\n                }\r\n            });\r\n        } else if (noEmptyFields) {\r\n            this.setState({step: 2, message: null});\r\n        }\r\n    };\r\n\r\n    setFieldValue = (fieldName, value) => {\r\n        this.setState({\r\n            userData: {\r\n                ...this.state.userData,\r\n                [fieldName]: value\r\n            },\r\n            errorFields: {\r\n                ...this.state.errorFields,\r\n                [fieldName]: value.length === 0\r\n            }\r\n        });\r\n\r\n        if (fieldName === 'city' || fieldName === 'country' || fieldName === 'address') {\r\n            this.changeAddress(fieldName, value);\r\n        }\r\n    };\r\n\r\n    changeAddress = (fieldName, value) => {\r\n        const address = {\r\n            city: this.state.userData.city,\r\n            country: this.state.userData.country,\r\n            address: this.state.userData.address,\r\n            [fieldName]: value\r\n        };\r\n\r\n        if (this.state.timer) {\r\n            clearTimeout(this.state.timer);\r\n        }\r\n        const timer = setTimeout(() =>\r\n            this.props.onAddressChanged(address).then(coords =>\r\n                this.setState({\r\n                    userData: {\r\n                        ...this.state.userData,\r\n                        language: coords.language,\r\n                        longitude: coords.longitude\r\n                    }\r\n                })\r\n            ), 1000);\r\n\r\n        this.setState({timer : timer})\r\n    };\r\n\r\n    getFirstPart = () => {\r\n        const {t} = this.props;\r\n        return <div className='registration-first-part'>\r\n            <div className='flex-input'>\r\n                <Input\r\n                    id='Login'\r\n                    label={t('label.account.login')}\r\n                    type='email'\r\n                    name='username'\r\n                    placeholder='johndoe@mail.xx'\r\n                    value={this.state.userData.username}\r\n                    error={this.state.errorFields.username}\r\n                    onChange={(newValue) => this.setFieldValue('username', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='Phone'\r\n                    label={t('label.account.phone')}\r\n                    type='text'\r\n                    name='phone'\r\n                    placeholder={t('label.account.phone_placeholder')}\r\n                    value={this.state.userData.phone}\r\n                    error={this.state.errorFields.phone}\r\n                    onChange={(newValue) => this.setFieldValue('phone', newValue)}\r\n                    pattern={t('label.account.phone_pattern')}\r\n                />\r\n\r\n                <Input\r\n                    id='CompanyName'\r\n                    label={t('label.account.company_name')}\r\n                    type='text'\r\n                    name='companyName'\r\n                    placeholder='Stock ltd'\r\n                    maxLength={100}\r\n                    value={this.state.userData.companyName}\r\n                    error={this.state.errorFields.companyName}\r\n                    onChange={(newValue) => this.setFieldValue('companyName', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='RegNumber'\r\n                    label={t('label.account.reg_number')}\r\n                    type='text'\r\n                    name='RegNumber'\r\n                    placeholder={t('label.account.reg_number_placeholder')}\r\n                    pattern={t('label.account.reg_number_pattern')}\r\n                    value={this.state.userData.regNumber}\r\n                    error={this.state.errorFields.regNumber}\r\n                    onChange={(newValue) => this.setFieldValue('regNumber', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='Password'\r\n                    label={t('label.account.password')}\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder='***********'\r\n                    maxLength={50}\r\n                    value={this.state.userData.password}\r\n                    error={this.state.errorFields.password}\r\n                    onChange={(newValue) => this.setFieldValue('password', newValue)}\r\n                />\r\n                <Input\r\n                    id='PasswordAgain'\r\n                    label={t('label.account.repeat_password')}\r\n                    type='password'\r\n                    name='passwordRepeat'\r\n                    placeholder='***********'\r\n                    maxLength={50}\r\n                    value={this.state.userData.passwordRepeat}\r\n                    error={this.state.errorFields.passwordRepeat}\r\n                    onChange={(newValue) => this.setFieldValue('passwordRepeat', newValue)}\r\n                />\r\n            </div>\r\n            <Button id='to-second-step' onClick={this.toStep2}>\r\n                {t('label.button.continueButton')}\r\n            </Button>\r\n            <p className='second-step'>{t('label.account.secondStepReg')}</p>\r\n        </div>\r\n    };\r\n\r\n    getSecondPart = () => {\r\n        const {t} = this.props;\r\n        return <div className='registration-second-part'>\r\n            <div className='flex-input'>\r\n                <Input\r\n                    id='City'\r\n                    className='city'\r\n                    label={t('label.account.city')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='Minsk'\r\n                    maxLength={100}\r\n                    value={this.state.userData.city}\r\n                    error={this.state.errorFields.city}\r\n                    onChange={(newValue) => this.setFieldValue('city', newValue)}\r\n                />\r\n                <Input\r\n                    id='Country'\r\n                    className='country'\r\n                    label={t('label.account.country')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='Belarus'\r\n                    maxLength={50}\r\n                    value={this.state.userData.country}\r\n                    error={this.state.errorFields.country}\r\n                    onChange={(newValue) => this.setFieldValue('country', newValue)}\r\n                />\r\n                <Input\r\n                    id='Address'\r\n                    label={t('label.account.address')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='str. Nezalejnasti'\r\n                    maxLength={200}\r\n                    value={this.state.userData.address}\r\n                    error={this.state.errorFields.address}\r\n                    onChange={(newValue) => this.setFieldValue('address', newValue)}\r\n                />\r\n\r\n                <CheckBox\r\n                    value={this.state.agree}\r\n                    error={this.state.agreeError}\r\n                    onChange={(value) => this.setState({agree: value, agreeError: !value})}\r\n                >\r\n                    <span>{t('label.account.accept')}<a>\r\n                        <span>{t('label.account.termsOfUse')}</span>\r\n                    </a></span>\r\n                </CheckBox>\r\n\r\n            </div>\r\n            <Button id='go-back' onClick={() => this.setState({step: 1})}>\r\n                {t('label.button.back')}\r\n            </Button>\r\n            <div id='form-list'>\r\n                <Button id='finish-registration' onClick={this.register}>{t('label.button.finishRegistration')}</Button>\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form' id='registration-form'>\r\n            <h3>{t('label.account.registration')}</h3>\r\n            <p>{t('label.account.haveAcc')}\r\n                <span className='go_to_login' onClick={this.props.toLogin}>\r\n                    <span>{t('label.account.logHere')}</span>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            {this.state.step === 1\r\n                ? this.getFirstPart()\r\n                : this.getSecondPart()}\r\n        </form>\r\n    }\r\n\r\n}\r\n\r\nexport default withTranslation()(RegistrationForm);","D:\\git\\stock\\stock-front\\src\\pages\\user\\UserMain.js",["141","142","143","144","145","146","147","148","149","150","151","152","153","154","155"],"D:\\git\\stock\\stock-front\\src\\util\\LocalStorage.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\feed-back\\FeedBackForm.js",[],"D:\\git\\stock\\stock-front\\src\\util\\VerificationUtils.js",["156","157","158","159","160","161","162","163","164"],"const verificationUtils = {\r\n    checkEmail: (email, t) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email && !re.test(email.toLowerCase())) {\r\n            return t('enter_valid_email');\r\n        } else {\r\n            const domainPart = email.substr(email.indexOf(\"@\") + 1);\r\n            const localPart = email.substr(0, email.indexOf(\"@\"));\r\n            if (domainPart.length > 255 || localPart.length > 64) {\r\n                return t('enter_valid_email');\r\n            }\r\n        }\r\n    },\r\n    checkUrl: (value, t) => {\r\n        const re = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\r\n        if (value !== '' && (!re.test(value.toLowerCase()) || value.length > 2048)) {\r\n            return t('enter_valid_url');\r\n        }\r\n    }\r\n};\r\n\r\nexport default verificationUtils;","D:\\git\\stock\\stock-front\\src\\components\\input\\TextArea.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\account\\AccountForm.js",["165","166","167"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Button from '../../components/input/Button';\r\nimport LocalStorage from '../../util/LocalStorage';\r\nimport Input from '../../components/input/Input';\r\nimport TextArea from '../../components/input/TextArea';\r\nimport VerificationUtils from '../../util/VerificationUtils';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Request from '../../util/Request';\r\nimport Message, {TYPES} from '../../components/message/Message';\r\nimport LanguageSwitcher from \"../../components/language-switcher/LanguageSwitcher\";\r\nimport i18next from \"i18next\";\r\n\r\nclass AccountForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            account: {},\r\n            error: {},\r\n            message: null\r\n        }\r\n    }\r\n\r\n    validateAccount = () => {\r\n        const {t} = this.props;\r\n        const error = {};\r\n        let message = null;\r\n        let errorsFound = false;\r\n        if (this.state.account.username === '' || VerificationUtils.checkEmail(this.state.account.username, t)) {\r\n            error.username = true;\r\n            errorsFound = true;\r\n        }\r\n        if (this.state.account.phone === '') {\r\n            error.phone = true;\r\n            errorsFound = true;\r\n        }\r\n        if (this.state.account.password !== this.state.account.repeatPassword) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.account.error_password')\r\n            };\r\n            errorsFound = true;\r\n        }\r\n        if (errorsFound) {\r\n            this.setState({error: error, message: message});\r\n        }\r\n        return !errorsFound\r\n    };\r\n\r\n    componentDidMount() {\r\n        Request.doGet(ApiUrls.ACCOUNT_MANAGEMENT)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    const json = JSON.parse(await response.text());\r\n                    this.setState({account: {...json, repeatPassword: ''}});\r\n                    this.props.onAddressChanged({\r\n                        latitude: json.latitude,\r\n                        longitude: json.longitude\r\n                    }, true)\r\n                }\r\n            })\r\n    }\r\n\r\n    submitAccount = () => {\r\n        const {t} = this.props;\r\n        if (this.validateAccount()) {\r\n            const data = {\r\n                username: this.state.account.username,\r\n                phone: this.state.account.phone,\r\n                language: this.state.account.language,\r\n                password: this.state.account.password\r\n            };\r\n            Request.doPut(ApiUrls.ACCOUNT_MANAGEMENT, null, data)\r\n                .then(async response => {\r\n                    const text = await response.text();\r\n                    if (response.ok) {\r\n                        this.setState({\r\n                            message: {\r\n                                type: TYPES.SUCCESS,\r\n                                value: t('label.account.edit_success')\r\n                            }\r\n                        });\r\n                        Request.setAuthenticationParams(JSON.parse(text));\r\n                    } else {\r\n                        this.setState({\r\n                            message: {\r\n                                type: TYPES.ERROR,\r\n                                value: t(text)\r\n                            }\r\n                        })\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    changeValue = (propertyName, value) => {\r\n        this.setState({\r\n            account: {\r\n                ...this.state.account,\r\n                [propertyName]: value\r\n            },\r\n            error: {\r\n                ...this.state.error,\r\n                [propertyName]: false\r\n            }\r\n        })\r\n    };\r\n\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className=\"form\" name=\"form\" id=\"account-form\">\r\n            <h3>{t('label.account.edit')}</h3>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            <div className=\"flex-input\">\r\n                <Input\r\n                    id='Login'\r\n                    label={t('label.account.login')}\r\n                    name='username'\r\n                    error={this.state.error.username}\r\n                    placeholder='example@mail.com'\r\n                    value={this.state.account.username}\r\n                    onChange={(newValue) => this.changeValue('username', newValue)}\r\n                />\r\n                <Input\r\n                    id='Phone'\r\n                    label={t('label.account.phone')}\r\n                    name='phone'\r\n                    error={this.state.error.phone}\r\n                    placeholder={t('label.account.phone_placeholder')}\r\n                    value={this.state.account.phone}\r\n                    pattern={t('label.account.phone_pattern')}\r\n                    onChange={(newValue) => this.changeValue('phone', newValue)}\r\n                />\r\n                <LanguageSwitcher\r\n                    label={t('label.account.company_language')}\r\n                    menuClass='selectmenu-menu-account'\r\n                    current={this.state.account.language}\r\n                    onChange={(newValue) => this.changeValue('language', newValue)}\r\n                />\r\n                <Input\r\n                    id='CompanyName'\r\n                    label={t('label.account.company_name')}\r\n                    name='company_name'\r\n                    value={this.state.account.companyName}\r\n                    disabled={true}\r\n                />\r\n                <Input\r\n                    id='RegNumber'\r\n                    label={t('label.account.reg_number')}\r\n                    name='regNumber'\r\n                    value={this.state.account.regNumber}\r\n                    disabled={true}\r\n                />\r\n                <Input\r\n                    id='Password'\r\n                    label={t('label.account.password')}\r\n                    name='password'\r\n                    type='password'\r\n                    error={this.state.error.password}\r\n                    placeholder='**************'\r\n                    value={this.state.account.password}\r\n                    maxLength={50}\r\n                    onChange={(newValue) => this.changeValue('password', newValue)}\r\n                />\r\n                <Input\r\n                    id='PasswordAgain'\r\n                    label={t('label.account.repeat_password')}\r\n                    name='password'\r\n                    type='password'\r\n                    error={this.state.error.repeatPassword}\r\n                    placeholder='**************'\r\n                    value={this.state.account.repeatPassword}\r\n                    maxLength={50}\r\n                    onChange={(newValue) => this.changeValue('repeatPassword', newValue)}\r\n                />\r\n                <div id=\"form-list\">\r\n                    <Button className=\"submit button\">\r\n                        {t('label.button.addAddress')}\r\n                    </Button>\r\n                    <Button className=\"submit button\" onClick={this.submitAccount}>\r\n                        {t('label.button.save')}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(AccountForm);","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Lots.js",["168"],"D:\\git\\stock\\stock-front\\src\\components\\table\\Table.js",["169","170","171"],"D:\\git\\stock\\stock-front\\src\\forms\\lot\\LotForm.js",["172"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Dropdown from \"../../components/input/Dropdown\";\r\nimport Input from \"../../components/input/Input\";\r\nimport Calendar from \"../../components/input/Calendar\";\r\nimport File from \"../../components/input/File\";\r\nimport TextArea from \"../../components/input/TextArea\";\r\nimport Button from \"../../components/input/Button\";\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Map from \"../../components/map/Map\";\r\nimport Request from '../../util/Request';\r\nimport Message, {TYPES} from \"../../components/message/Message\";\r\n\r\nclass LotForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lot: this.props.lot\r\n                || {\r\n                    id: null,\r\n                    description: '',\r\n                    price: null,\r\n                    minVolume: null,\r\n                    maxVolume: null,\r\n                    companyId: null,\r\n                    status: null,\r\n                    creationDate: new Date(),\r\n                    expirationDate: this.getDefaultExpirationDate(),\r\n                    addressId: this.props.addresses[0].id,\r\n                    distance: 30000,\r\n                    categoryId: null,\r\n                    alert: null,\r\n                    photo: null\r\n                },\r\n            error: {}\r\n        };\r\n    }\r\n\r\n    getDefaultExpirationDate = () => {\r\n        const date = new Date();\r\n        if (date.getMonth() === 12) {\r\n            date.setMonth(1);\r\n            date.setFullYear(date.getFullYear() + 1);\r\n        } else {\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    validate = () => {\r\n        const {t} = this.props;\r\n        const error = {};\r\n        let message = null;\r\n\r\n        if (Number.isNaN(+this.state.lot.price) || this.state.lot.price < 0.01) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.price_error')\r\n            };\r\n            error.price = true;\r\n        }\r\n\r\n        if (!Number.isInteger(+this.state.lot.minVolume) || this.state.lot.minVolume < 1) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.minVolume_error')\r\n            };\r\n            error.minVolume = true;\r\n        }\r\n\r\n        if (!Number.isInteger(+this.state.lot.maxVolume) || this.state.lot.maxVolume < this.state.lot.minVolume) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.maxVolume_error')\r\n            };\r\n            error.maxVolume = true;\r\n        }\r\n        if (!this.state.lot.categoryId) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.category_error')\r\n            };\r\n            error.categoryId = true;\r\n        }\r\n\r\n        if (this.state.lot.expirationDate < new Date()) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.expDate_error')\r\n            };\r\n            error.expirationDate = true;\r\n        }\r\n\r\n        this.setState({error: error, message: message});\r\n        return message === null;\r\n    };\r\n\r\n    save = (status) => {\r\n        if (this.validate()) {\r\n            const lot = {...this.state.lot, status: status};\r\n            const method = lot.id === null ? Request.doPost : Request.doPut;\r\n            method(ApiUrls.LOT.replace('{id}', lot.id || ''), null, lot)\r\n                .then(async responce => {\r\n                    if (responce.ok) {\r\n                        const id = JSON.parse(await responce.text());\r\n                        if (id) {\r\n                            lot.id = id;\r\n                        }\r\n                        this.props.onSave(lot, !!id);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    getProduct = () => {\r\n        const {t} = this.props;\r\n        return this.props.products.find(p => p.categories.find(c => c.id === this.state.lot.categoryId))\r\n            || {name: t('label.lot.list'), id: null, categories: []};\r\n    };\r\n\r\n    getProducts = () => {\r\n        const {t} = this.props;\r\n        const product = this.getProduct();\r\n        const list = this.props.products.map(p => {\r\n            return {\r\n                id: p.id,\r\n                name: t(`label.${p.name}.name`),\r\n                active: p.id === product.id\r\n            }\r\n        });\r\n\r\n        list.splice(0, 0, {name: t('label.lot.list'), id: null, active: product.id === null});\r\n        return list;\r\n    };\r\n\r\n    getCategories = () => {\r\n        const {t} = this.props;\r\n        const list = (this.props.products.find(p => p.id === this.state.lot.productId)\r\n            || this.getProduct()\r\n            || {categories: []})\r\n            .categories\r\n            .map(p => {\r\n                return {\r\n                    id: p.id,\r\n                    name: t(`label.${p.name}.name`),\r\n                    active: p.id === this.state.lot.categoryId\r\n                }\r\n            });\r\n\r\n        list.splice(0, 0, {\r\n            name: t('label.lot.list'), id: null, active: this.state.lot.categoryId === null\r\n        });\r\n        return list;\r\n    };\r\n\r\n    getAddresses = () => {\r\n        return this.props.addresses\r\n            .map(a => {\r\n                return {\r\n                    name: `${a.country}, ${a.city}, ${a.address}`,\r\n                    id: a.id,\r\n                    active: a.id === this.state.lot.addressId\r\n                }\r\n            });\r\n    };\r\n\r\n    getDistances = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {id: 30000, name: t('label.lot.distance_any'), active: this.state.lot.distance === 30000},\r\n            {id: 400, name: t('label.lot.distance_400'), active: this.state.lot.distance === 400},\r\n            {id: 200, name: t('label.lot.distance_200'), active: this.state.lot.distance === 200},\r\n            {id: 100, name: t('label.lot.distance_100'), active: this.state.lot.distance === 100},\r\n            {id: 50, name: t('label.lot.distance_40'), active: this.state.lot.distance === 50},\r\n            {id: 0, name: t('label.lot.distance_0'), active: this.state.lot.distance === 0}\r\n        ];\r\n    };\r\n\r\n    showPhoto = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.lot.photo);\r\n    };\r\n\r\n    changeLot = (propertyName, value) => {\r\n        this.setState({\r\n            lot: {\r\n                ...this.state.lot,\r\n                [propertyName]: value\r\n            },\r\n            error: {\r\n                ...this.state.error,\r\n                [propertyName]: false\r\n            }\r\n        })\r\n    };\r\n\r\n    getCoords = () => {\r\n        const address = this.props.addresses.find(a => a.id === this.state.lot.addressId);\r\n        return {latitude: address.latitude, longitude: address.longitude};\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className=\"form\" action=\"#\" method=\"post\" name=\"form\">\r\n            <h3>{t('label.lot.lotForm')}</h3>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            <div className=\"flex-two-input\">\r\n                <div>\r\n                    <Dropdown\r\n                        id='ProductId'\r\n                        name='productId'\r\n                        elements={this.getProducts()}\r\n                        label={t('label.lot.product')}\r\n                        readOnly={this.state.lot.id !== null}\r\n                        error={this.state.error.productId}\r\n                        onChange={(newId) => this.changeLot('productId', newId)}\r\n                    />\r\n\r\n                    <Dropdown\r\n                        id='CategoryId'\r\n                        name='categoryId'\r\n                        elements={this.getCategories()}\r\n                        label={t('label.lot.category')}\r\n                        error={this.state.error.categoryId}\r\n                        onChange={(newId) => this.changeLot('categoryId', newId)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='Price'\r\n                        label={t('label.lot.min_price')}\r\n                        name='price'\r\n                        placeholder='9.99'\r\n                        value={this.state.lot.price}\r\n                        error={this.state.error.price}\r\n                        onChange={(newValue) => this.changeLot('price', newValue)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='MinVolume'\r\n                        label={t('label.lot.min_volume')}\r\n                        name='minVolume'\r\n                        value={this.state.lot.minVolume}\r\n                        error={this.state.error.minVolume}\r\n                        onChange={(newValue) => this.changeLot('minVolume', newValue)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='MaxVolume'\r\n                        label={t('label.lot.max_volume')}\r\n                        name='maxVolume'\r\n                        value={this.state.lot.maxVolume}\r\n                        error={this.state.error.maxVolume}\r\n                        onChange={(newValue) => this.changeLot('maxVolume', newValue)}\r\n                    />\r\n\r\n                    <Calendar\r\n                        id='ExpDate'\r\n                        label={t('label.lot.exp_date')}\r\n                        value={this.state.lot.expirationDate}\r\n                        error={this.state.error.expirationDate}\r\n                        onChange={(value => this.changeLot('expirationDate', value))}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <Dropdown\r\n                                id='AddressId'\r\n                                name='addressId'\r\n                                className=\"address-selector\"\r\n                                elements={this.getAddresses()}\r\n                                label={t('label.lot.address')}\r\n                                error={this.state.error.addressId}\r\n                                onChange={(newId) => this.changeLot('addressId', newId)}\r\n                            />\r\n\r\n                            <Dropdown\r\n                                id='Distance'\r\n                                name='distance'\r\n                                className=\"address-selector\"\r\n                                elements={this.getDistances()}\r\n                                label={t('label.lot.distance')}\r\n                                error={this.state.error.distance}\r\n                                onChange={(newId) => this.changeLot('distance', newId)}\r\n                            />\r\n\r\n                            {this.state.lot.photo\r\n                                ? <a href='#' onClick={(e) => this.showPhoto(e)}>\r\n                                    {t('label.lot.uploaded_foto')}\r\n                                </a>\r\n                                : ''\r\n                            }\r\n                            <File\r\n                                id='Photo'\r\n                                name='photo'\r\n                                label={t('label.lot.foto')}\r\n                                onChange={(value) => this.changeLot('photo', value)}\r\n                            />\r\n\r\n                            <TextArea\r\n                                id='Description'\r\n                                labe={t('label.lot.description')}\r\n                                name='description'\r\n                                maxLength={1000}\r\n                                value={this.state.lot.description}\r\n                                onChange={(value) => this.changeLot('description', value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"forMapLotsTender google-map-container\"\r\n                             style={{position: 'relative', overflow: 'hidden'}}>\r\n                            <Map coords={this.getCoords()}/>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"form-list\">\r\n                        <Button className=\"submit button gray-button\" id=\"save\" onClick={() => this.save('INACTIVE')}>\r\n                            {t('label.button.save')}\r\n                        </Button>\r\n                        <Button className=\"submit button\" id=\"save-start-trading\" onClick={() => this.save('ACTIVE')}>\r\n                            {t('label.button.save_start_trading')}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LotForm);","D:\\git\\stock\\stock-front\\src\\components\\input\\Calendar.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\File.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Dropdown.js",[],{"ruleId":"173","replacedBy":"174"},{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","severity":1,"message":"178","line":189,"column":53,"nodeType":"179","endLine":189,"endColumn":64},{"ruleId":"177","severity":1,"message":"178","line":261,"column":45,"nodeType":"179","endLine":261,"endColumn":56},{"ruleId":"180","severity":1,"message":"181","line":5,"column":1,"nodeType":"182","endLine":20,"endColumn":2},{"ruleId":"177","severity":1,"message":"183","line":75,"column":28,"nodeType":"179","endLine":75,"endColumn":42},{"ruleId":"177","severity":1,"message":"183","line":304,"column":54,"nodeType":"179","endLine":304,"endColumn":57},{"ruleId":"177","severity":1,"message":"178","line":56,"column":17,"nodeType":"179","endLine":56,"endColumn":86},{"ruleId":"177","severity":1,"message":"178","line":61,"column":17,"nodeType":"179","endLine":61,"endColumn":82},{"ruleId":"177","severity":1,"message":"178","line":67,"column":17,"nodeType":"179","endLine":67,"endColumn":85},{"ruleId":"177","severity":1,"message":"178","line":73,"column":17,"nodeType":"179","endLine":73,"endColumn":83},{"ruleId":"177","severity":1,"message":"178","line":87,"column":21,"nodeType":"179","endLine":87,"endColumn":96},{"ruleId":"177","severity":1,"message":"178","line":92,"column":21,"nodeType":"179","endLine":92,"endColumn":89},{"ruleId":"177","severity":1,"message":"178","line":97,"column":21,"nodeType":"179","endLine":97,"endColumn":87},{"ruleId":"177","severity":1,"message":"178","line":102,"column":21,"nodeType":"179","endLine":102,"endColumn":88},{"ruleId":"177","severity":1,"message":"178","line":137,"column":13,"nodeType":"179","endLine":137,"endColumn":82},{"ruleId":"184","severity":1,"message":"185","line":143,"column":21,"nodeType":"179","endLine":143,"endColumn":91},{"ruleId":"177","severity":1,"message":"178","line":143,"column":21,"nodeType":"179","endLine":143,"endColumn":91},{"ruleId":"184","severity":1,"message":"185","line":153,"column":17,"nodeType":"179","endLine":153,"endColumn":87},{"ruleId":"177","severity":1,"message":"178","line":153,"column":17,"nodeType":"179","endLine":153,"endColumn":87},{"ruleId":"177","severity":1,"message":"178","line":202,"column":21,"nodeType":"179","endLine":208,"endColumn":22},{"ruleId":"177","severity":1,"message":"178","line":211,"column":21,"nodeType":"179","endLine":216,"endColumn":43},{"ruleId":"186","severity":1,"message":"187","line":3,"column":30,"nodeType":"188","messageId":"189","endLine":3,"endColumn":31,"suggestions":"190"},{"ruleId":"186","severity":1,"message":"187","line":3,"column":55,"nodeType":"188","messageId":"189","endLine":3,"endColumn":56,"suggestions":"191"},{"ruleId":"186","severity":1,"message":"192","line":15,"column":55,"nodeType":"188","messageId":"189","endLine":15,"endColumn":56,"suggestions":"193"},{"ruleId":"186","severity":1,"message":"192","line":15,"column":67,"nodeType":"188","messageId":"189","endLine":15,"endColumn":68,"suggestions":"194"},{"ruleId":"186","severity":1,"message":"195","line":15,"column":80,"nodeType":"188","messageId":"189","endLine":15,"endColumn":81,"suggestions":"196"},{"ruleId":"186","severity":1,"message":"197","line":15,"column":84,"nodeType":"188","messageId":"189","endLine":15,"endColumn":85,"suggestions":"198"},{"ruleId":"186","severity":1,"message":"199","line":15,"column":86,"nodeType":"188","messageId":"189","endLine":15,"endColumn":87,"suggestions":"200"},{"ruleId":"186","severity":1,"message":"201","line":15,"column":88,"nodeType":"188","messageId":"189","endLine":15,"endColumn":89,"suggestions":"202"},{"ruleId":"186","severity":1,"message":"203","line":15,"column":90,"nodeType":"188","messageId":"189","endLine":15,"endColumn":91,"suggestions":"204"},{"ruleId":"205","severity":1,"message":"206","line":4,"column":8,"nodeType":"207","messageId":"208","endLine":4,"endColumn":20},{"ruleId":"205","severity":1,"message":"209","line":6,"column":8,"nodeType":"207","messageId":"208","endLine":6,"endColumn":16},{"ruleId":"205","severity":1,"message":"210","line":12,"column":8,"nodeType":"207","messageId":"208","endLine":12,"endColumn":15},{"ruleId":"205","severity":1,"message":"211","line":8,"column":8,"nodeType":"207","messageId":"208","endLine":8,"endColumn":15},{"ruleId":"177","severity":1,"message":"183","line":36,"column":17,"nodeType":"179","endLine":43,"endColumn":18},{"ruleId":"177","severity":1,"message":"183","line":44,"column":23,"nodeType":"179","endLine":44,"endColumn":62},{"ruleId":"177","severity":1,"message":"183","line":45,"column":17,"nodeType":"179","endLine":52,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":291,"column":35,"nodeType":"179","endLine":291,"endColumn":82},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["214","215"],["216","217"],"Unnecessary escape character: \\..",["218","219"],["220","221"],"Unnecessary escape character: \\$.",["222","223"],"Unnecessary escape character: \\(.",["224","225"],"Unnecessary escape character: \\).",["226","227"],"Unnecessary escape character: \\*.",["228","229"],"Unnecessary escape character: \\+.",["230","231"],"no-unused-vars","'LocalStorage' is defined but never used.","Identifier","unusedVar","'TextArea' is defined but never used.","'i18next' is defined but never used.","'Message' is defined but never used.","no-global-assign","no-unsafe-negation",{"messageId":"232","fix":"233","desc":"234"},{"messageId":"235","fix":"236","desc":"237"},{"messageId":"232","fix":"238","desc":"234"},{"messageId":"235","fix":"239","desc":"237"},{"messageId":"232","fix":"240","desc":"234"},{"messageId":"235","fix":"241","desc":"237"},{"messageId":"232","fix":"242","desc":"234"},{"messageId":"235","fix":"243","desc":"237"},{"messageId":"232","fix":"244","desc":"234"},{"messageId":"235","fix":"245","desc":"237"},{"messageId":"232","fix":"246","desc":"234"},{"messageId":"235","fix":"247","desc":"237"},{"messageId":"232","fix":"248","desc":"234"},{"messageId":"235","fix":"249","desc":"237"},{"messageId":"232","fix":"250","desc":"234"},{"messageId":"235","fix":"251","desc":"237"},{"messageId":"232","fix":"252","desc":"234"},{"messageId":"235","fix":"253","desc":"237"},"removeEscape",{"range":"254","text":"255"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"256","text":"257"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"258","text":"255"},{"range":"259","text":"257"},{"range":"260","text":"255"},{"range":"261","text":"257"},{"range":"262","text":"255"},{"range":"263","text":"257"},{"range":"264","text":"255"},{"range":"265","text":"257"},{"range":"266","text":"255"},{"range":"267","text":"257"},{"range":"268","text":"255"},{"range":"269","text":"257"},{"range":"270","text":"255"},{"range":"271","text":"257"},{"range":"272","text":"255"},{"range":"273","text":"257"},[91,92],"",[91,91],"\\",[116,117],[116,116],[728,729],[728,728],[740,741],[740,740],[753,754],[753,753],[757,758],[757,757],[759,760],[759,759],[761,762],[761,761],[763,764],[763,763]]