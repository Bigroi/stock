[{"D:\\git\\stock\\stock-front\\src\\index.js":"1","D:\\git\\stock\\stock-front\\src\\App.js":"2","D:\\git\\stock\\stock-front\\src\\reportWebVitals.js":"3","D:\\git\\stock\\stock-front\\src\\pages\\Main.js":"4","D:\\git\\stock\\stock-front\\src\\pages\\public\\Landing.js":"5","D:\\git\\stock\\stock-front\\src\\util\\i18n.js":"6","D:\\git\\stock\\stock-front\\src\\util\\Config.js":"7","D:\\git\\stock\\stock-front\\src\\util\\ApiUrls.js":"8","D:\\git\\stock\\stock-front\\src\\components\\language-switcher\\LanguageSwitcher.js":"9","D:\\git\\stock\\stock-front\\src\\components\\form\\Form.js":"10","D:\\git\\stock\\stock-front\\src\\components\\input\\Button.js":"11","D:\\git\\stock\\stock-front\\src\\components\\input\\Input.js":"12","D:\\git\\stock\\stock-front\\src\\components\\message\\Message.js":"13","D:\\git\\stock\\stock-front\\src\\util\\Request.js":"14","D:\\git\\stock\\stock-front\\src\\util\\LocalStrorageParams.js":"15","D:\\git\\stock\\stock-front\\src\\components\\checkbox\\CheckBox.js":"16","D:\\git\\stock\\stock-front\\src\\components\\map\\Map.js":"17","D:\\git\\stock\\stock-front\\src\\forms\\login\\LoginForm.js":"18","D:\\git\\stock\\stock-front\\src\\forms\\registration\\RegistrationForm.js":"19","D:\\git\\stock\\stock-front\\src\\pages\\user\\UserMain.js":"20","D:\\git\\stock\\stock-front\\src\\util\\LocalStorage.js":"21","D:\\git\\stock\\stock-front\\src\\forms\\feed-back\\FeedBackForm.js":"22","D:\\git\\stock\\stock-front\\src\\util\\VerificationUtils.js":"23","D:\\git\\stock\\stock-front\\src\\components\\input\\TextArea.js":"24","D:\\git\\stock\\stock-front\\src\\forms\\account\\AccountForm.js":"25","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Lots.js":"26","D:\\git\\stock\\stock-front\\src\\components\\table\\Table.js":"27","D:\\git\\stock\\stock-front\\src\\forms\\lot\\LotForm.js":"28","D:\\git\\stock\\stock-front\\src\\components\\input\\Calendar.js":"29","D:\\git\\stock\\stock-front\\src\\components\\input\\File.js":"30","D:\\git\\stock\\stock-front\\src\\components\\input\\Dropdown.js":"31","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Tenders.js":"32","D:\\git\\stock\\stock-front\\src\\forms\\tender\\TenderForm.js":"33","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Products.js":"34","D:\\git\\stock\\stock-front\\src\\forms\\product\\ProductForm.js":"35","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Categories.js":"36","D:\\git\\stock\\stock-front\\src\\forms\\category\\CategoryForm.js":"37","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Companies.js":"38","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Labels.js":"39","D:\\git\\stock\\stock-front\\src\\forms\\label\\LabelForm.js":"40","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Trade.js":"41","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\ProductsStatistics.js":"42","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\ProductStatisticsDetails.js":"43","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Deals.js":"44","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\DealDetails.js":"45","D:\\git\\stock\\stock-front\\src\\forms\\company-feed-back\\CompanyFeedBackForm.js":"46","D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Addresses.js":"47","D:\\git\\stock\\stock-front\\src\\forms\\address\\AddressForm.js":"48","D:\\git\\stock\\stock-front\\src\\components\\Slider.js":"49","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Header.js":"50","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Welcome.js":"51","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Advantages.js":"52","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Products.js":"53","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\ForWhom.js":"54","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\AboutUs.js":"55","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Footer.js":"56","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Questions.js":"57","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\PreviewPlatform.js":"58"},{"size":597,"mtime":1607784809520,"results":"59","hashOfConfig":"60"},{"size":140,"mtime":1609709080935,"results":"61","hashOfConfig":"60"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"60"},{"size":1409,"mtime":1609769597739,"results":"63","hashOfConfig":"60"},{"size":3852,"mtime":1609768548002,"results":"64","hashOfConfig":"60"},{"size":950,"mtime":1609773645438,"results":"65","hashOfConfig":"60"},{"size":680,"mtime":1609709080119,"results":"66","hashOfConfig":"60"},{"size":2261,"mtime":1609709081158,"results":"67","hashOfConfig":"60"},{"size":2400,"mtime":1608229109386,"results":"68","hashOfConfig":"60"},{"size":2197,"mtime":1609709080498,"results":"69","hashOfConfig":"60"},{"size":373,"mtime":1609709080765,"results":"70","hashOfConfig":"60"},{"size":1259,"mtime":1609292254815,"results":"71","hashOfConfig":"60"},{"size":520,"mtime":1608686517851,"results":"72","hashOfConfig":"60"},{"size":4384,"mtime":1608230709661,"results":"73","hashOfConfig":"60"},{"size":233,"mtime":1608208502396,"results":"74","hashOfConfig":"60"},{"size":634,"mtime":1609709080550,"results":"75","hashOfConfig":"60"},{"size":3101,"mtime":1609773645405,"results":"76","hashOfConfig":"60"},{"size":2998,"mtime":1609709080803,"results":"77","hashOfConfig":"60"},{"size":12809,"mtime":1609773645458,"results":"78","hashOfConfig":"60"},{"size":17964,"mtime":1609709080827,"results":"79","hashOfConfig":"60"},{"size":578,"mtime":1609709080448,"results":"80","hashOfConfig":"60"},{"size":3030,"mtime":1608215806928,"results":"81","hashOfConfig":"60"},{"size":962,"mtime":1607549256410,"results":"82","hashOfConfig":"60"},{"size":852,"mtime":1609624392849,"results":"83","hashOfConfig":"60"},{"size":7270,"mtime":1609709080263,"results":"84","hashOfConfig":"60"},{"size":7271,"mtime":1609709080684,"results":"85","hashOfConfig":"60"},{"size":5128,"mtime":1609709080360,"results":"86","hashOfConfig":"60"},{"size":12784,"mtime":1609773304888,"results":"87","hashOfConfig":"60"},{"size":1079,"mtime":1608684906138,"results":"88","hashOfConfig":"60"},{"size":670,"mtime":1608675473542,"results":"89","hashOfConfig":"60"},{"size":1190,"mtime":1608762657300,"results":"90","hashOfConfig":"60"},{"size":7389,"mtime":1609709080407,"results":"91","hashOfConfig":"60"},{"size":13173,"mtime":1609773442230,"results":"92","hashOfConfig":"60"},{"size":3229,"mtime":1609709081106,"results":"93","hashOfConfig":"60"},{"size":2129,"mtime":1609709080717,"results":"94","hashOfConfig":"60"},{"size":2952,"mtime":1609709080516,"results":"95","hashOfConfig":"60"},{"size":1913,"mtime":1609709080474,"results":"96","hashOfConfig":"60"},{"size":2177,"mtime":1609709080312,"results":"97","hashOfConfig":"60"},{"size":3241,"mtime":1609709080956,"results":"98","hashOfConfig":"60"},{"size":3090,"mtime":1609709081281,"results":"99","hashOfConfig":"60"},{"size":1209,"mtime":1609709080300,"results":"100","hashOfConfig":"60"},{"size":2327,"mtime":1609709081189,"results":"101","hashOfConfig":"60"},{"size":2934,"mtime":1609709080618,"results":"102","hashOfConfig":"60"},{"size":2655,"mtime":1609709080789,"results":"103","hashOfConfig":"60"},{"size":12129,"mtime":1609709080279,"results":"104","hashOfConfig":"60"},{"size":3133,"mtime":1609709080437,"results":"105","hashOfConfig":"60"},{"size":4292,"mtime":1609709080374,"results":"106","hashOfConfig":"60"},{"size":5095,"mtime":1609773645424,"results":"107","hashOfConfig":"60"},{"size":946,"mtime":1609709081066,"results":"108","hashOfConfig":"60"},{"size":1823,"mtime":1609766248605,"results":"109","hashOfConfig":"60"},{"size":1366,"mtime":1609766591967,"results":"110","hashOfConfig":"60"},{"size":1799,"mtime":1609766694821,"results":"111","hashOfConfig":"60"},{"size":2562,"mtime":1609767661374,"results":"112","hashOfConfig":"60"},{"size":1950,"mtime":1609767661358,"results":"113","hashOfConfig":"60"},{"size":726,"mtime":1609767661388,"results":"114","hashOfConfig":"60"},{"size":935,"mtime":1609768547940,"results":"115","hashOfConfig":"60"},{"size":2461,"mtime":1609768547921,"results":"116","hashOfConfig":"60"},{"size":870,"mtime":1609768547984,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"dizqkc",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"120"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"120"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"120"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"241","usedDeprecatedRules":"120"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"D:\\git\\stock\\stock-front\\src\\index.js",[],["244","245"],"D:\\git\\stock\\stock-front\\src\\App.js",[],"D:\\git\\stock\\stock-front\\src\\reportWebVitals.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\Main.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\Landing.js",[],"D:\\git\\stock\\stock-front\\src\\util\\i18n.js",[],"D:\\git\\stock\\stock-front\\src\\util\\Config.js",[],"D:\\git\\stock\\stock-front\\src\\util\\ApiUrls.js",[],"D:\\git\\stock\\stock-front\\src\\components\\language-switcher\\LanguageSwitcher.js",[],"D:\\git\\stock\\stock-front\\src\\components\\form\\Form.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Button.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Input.js",[],"D:\\git\\stock\\stock-front\\src\\components\\message\\Message.js",[],"D:\\git\\stock\\stock-front\\src\\util\\Request.js",[],"D:\\git\\stock\\stock-front\\src\\util\\LocalStrorageParams.js",[],"D:\\git\\stock\\stock-front\\src\\components\\checkbox\\CheckBox.js",[],"D:\\git\\stock\\stock-front\\src\\components\\map\\Map.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\login\\LoginForm.js",["246"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Input from '../../components/input/Input';\r\nimport Button from '../../components/input/Button';\r\nimport Request from '../../util/Request';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Message, {TYPES} from '../../components/message/Message';\r\n\r\n/**\r\n * toRegistration: function\r\n * onLoginSuccess: function\r\n */\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            user: {\r\n                username: '',\r\n                password: ''\r\n            },\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    loginRequest = () => {\r\n        const {t} = this.props;\r\n        Request.doPost(ApiUrls.AUTHENTICATE, null, this.state)\r\n            .then(async response => {\r\n                if (response.ok) {\r\n                    const authParams = await response.text();\r\n                    this.props.onLoginSuccess(JSON.parse(authParams));\r\n                } else {\r\n                    this.setState({\r\n                        errorMessage: {\r\n                            type: TYPES.ERROR,\r\n                            value: t('label.index.login_error')\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form' id='login-form'>\r\n            <h3>{t('label.login.loginForm')}</h3>\r\n            <p>{t('label.login.dontHaveAcc')}\r\n                <span className='go_to_registration' onClick={this.props.toRegistration}>\r\n                    <span>{t('label.login.registerHere')}</span>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <Message message={this.state.errorMessage}/>\r\n            </div>\r\n            <Input\r\n                id='Login'\r\n                label={t('label.login.login')}\r\n                type='email'\r\n                name='username'\r\n                placeholder='johndoe@mail.xx'\r\n                value={this.state.username}\r\n                onChange={(newValue) => this.setState({username: newValue})}\r\n            />\r\n\r\n            <Input\r\n                id='Password'\r\n                label={t('label.login.password')}\r\n                type='password'\r\n                name='password'\r\n                placeholder='***********'\r\n                maxLength={50}\r\n                value={this.state.password}\r\n                onChange={(newValue) => this.setState({password: newValue})}\r\n                underline={<a id='reset'><span>{t('label.login.forgot')}</span></a>}\r\n            />\r\n            <div>\r\n                <div id='form-list'>\r\n                    <Button id='login' className='submit button' onClick={this.loginRequest}>\r\n                        {t('label.button.login')}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LoginForm);","D:\\git\\stock\\stock-front\\src\\forms\\registration\\RegistrationForm.js",["247"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Input from '../../components/input/Input';\r\nimport Button from '../../components/input/Button';\r\nimport Request from '../../util/Request';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Message, {TYPES} from '../../components/message/Message';\r\nimport i18next from 'i18next';\r\nimport CheckBox from '../../components/checkbox/CheckBox';\r\nimport Map from '../../components/map/Map';\r\n\r\n/**\r\n * toLogin: function\r\n * onRegistrationSuccess: function\r\n * onAddressChanged: function\r\n */\r\nclass RegistrationForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userData: {\r\n                username: '',\r\n                password: '',\r\n                passwordRepeat: '',\r\n                companyName: '',\r\n                phone: '',\r\n                regNumber: '',\r\n                city: '',\r\n                country: '',\r\n                address: '',\r\n                latitude: 0,\r\n                longitude: 0\r\n            },\r\n            errorFields: {\r\n                username: false,\r\n                password: false,\r\n                passwordRepeat: false,\r\n                companyName: false,\r\n                phone: false,\r\n                regNumber: false,\r\n                city: false,\r\n                country: false,\r\n                address: false\r\n            },\r\n            agree: false,\r\n            agreeError: false,\r\n            step: 1,\r\n            message: null\r\n        }\r\n    }\r\n\r\n    register = () => {\r\n        const {t} = this.props;\r\n        if (this.validateEmptyFields() & this.validateAgree()) {\r\n            const data = {...this.state.userData, language: i18next.language};\r\n            Request.doPost(ApiUrls.REGISTRATION, null, data)\r\n                .then(async response => {\r\n                    const text = await response.text();\r\n                    if (response.ok) {\r\n                        const json = JSON.parse(text);\r\n                        this.props.onRegistrationSuccess(json);\r\n                    } else {\r\n                        this.setState({\r\n                            message: {\r\n                                type: TYPES.ERROR,\r\n                                value: t(text)\r\n                            }\r\n                        })\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    validateAgree = () => {\r\n        this.setState({agreeError: !this.state.agree});\r\n        return this.state.agree;\r\n    };\r\n\r\n    validateEmptyFields = () => {\r\n        const errorFieldNames = [];\r\n        if (this.state.step === 1) {\r\n            if (this.state.userData.username === '') {\r\n                errorFieldNames.push('username');\r\n            }\r\n            if (this.state.userData.password === '') {\r\n                errorFieldNames.push('password');\r\n            }\r\n            if (this.state.userData.passwordRepeat === '') {\r\n                errorFieldNames.push('passwordRepeat');\r\n            }\r\n            if (this.state.userData.companyName === '') {\r\n                errorFieldNames.push('companyName');\r\n            }\r\n            if (this.state.userData.phone === '') {\r\n                errorFieldNames.push('phone');\r\n            }\r\n            if (this.state.userData.regNumber === '') {\r\n                errorFieldNames.push('regNumber');\r\n            }\r\n        } else {\r\n            if (this.state.userData.city === '') {\r\n                errorFieldNames.push('city');\r\n            }\r\n            if (this.state.userData.country === '') {\r\n                errorFieldNames.push('country');\r\n            }\r\n            if (this.state.userData.address === '') {\r\n                errorFieldNames.push('address');\r\n            }\r\n        }\r\n        if (errorFieldNames.length === 0) {\r\n            return true;\r\n        } else {\r\n            const errorFields = {};\r\n            errorFieldNames.forEach(name => errorFields[name] = true);\r\n            this.setState({errorFields: errorFields});\r\n            return false;\r\n        }\r\n    };\r\n\r\n    toStep2 = () => {\r\n        const {t} = this.props;\r\n        const noEmptyFields = this.validateEmptyFields();\r\n        if (this.state.userData.password !== this.state.userData.passwordRepeat) {\r\n            this.setState({\r\n                message: {\r\n                    type: TYPES.ERROR,\r\n                    value: t('label.account.error_password')\r\n                }\r\n            });\r\n        } else if (noEmptyFields) {\r\n            this.setState({step: 2, message: null});\r\n        }\r\n    };\r\n\r\n    setFieldValue = (fieldName, value) => {\r\n        this.setState({\r\n            userData: {\r\n                ...this.state.userData,\r\n                [fieldName]: value\r\n            },\r\n            errorFields: {\r\n                ...this.state.errorFields,\r\n                [fieldName]: value.length === 0\r\n            }\r\n        });\r\n\r\n        if (fieldName === 'city' || fieldName === 'country' || fieldName === 'address') {\r\n            this.changeAddress(fieldName, value);\r\n        }\r\n    };\r\n\r\n    changeAddress = (fieldName, value) => {\r\n        const address = {\r\n            city: this.state.userData.city,\r\n            country: this.state.userData.country,\r\n            address: this.state.userData.address,\r\n            [fieldName]: value\r\n        };\r\n\r\n        if (this.state.timer) {\r\n            clearTimeout(this.state.timer);\r\n        }\r\n        const timer = setTimeout(() =>\r\n            this.props.onAddressChanged(address).then(coords =>\r\n                this.setState({\r\n                    userData: {\r\n                        ...this.state.userData,\r\n                        latitude: coords.latitude,\r\n                        longitude: coords.longitude\r\n                    }\r\n                })\r\n            ), 1000);\r\n\r\n        this.setState({timer: timer})\r\n    };\r\n\r\n    getFirstPart = () => {\r\n        const {t} = this.props;\r\n        return <div className='registration-first-part'>\r\n            <div className='flex-input'>\r\n                <Input\r\n                    id='Login'\r\n                    label={t('label.account.login')}\r\n                    type='email'\r\n                    name='username'\r\n                    placeholder='johndoe@mail.xx'\r\n                    value={this.state.userData.username}\r\n                    error={this.state.errorFields.username}\r\n                    onChange={(newValue) => this.setFieldValue('username', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='Phone'\r\n                    label={t('label.account.phone')}\r\n                    type='text'\r\n                    name='phone'\r\n                    placeholder={t('label.account.phone_placeholder')}\r\n                    value={this.state.userData.phone}\r\n                    error={this.state.errorFields.phone}\r\n                    onChange={(newValue) => this.setFieldValue('phone', newValue)}\r\n                    pattern={t('label.account.phone_pattern')}\r\n                />\r\n\r\n                <Input\r\n                    id='CompanyName'\r\n                    label={t('label.account.company_name')}\r\n                    type='text'\r\n                    name='companyName'\r\n                    placeholder='Stock ltd'\r\n                    maxLength={100}\r\n                    value={this.state.userData.companyName}\r\n                    error={this.state.errorFields.companyName}\r\n                    onChange={(newValue) => this.setFieldValue('companyName', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='RegNumber'\r\n                    label={t('label.account.reg_number')}\r\n                    type='text'\r\n                    name='RegNumber'\r\n                    placeholder={t('label.account.reg_number_placeholder')}\r\n                    pattern={t('label.account.reg_number_pattern')}\r\n                    value={this.state.userData.regNumber}\r\n                    error={this.state.errorFields.regNumber}\r\n                    onChange={(newValue) => this.setFieldValue('regNumber', newValue)}\r\n                />\r\n\r\n                <Input\r\n                    id='Password'\r\n                    label={t('label.account.password')}\r\n                    type='password'\r\n                    name='password'\r\n                    placeholder='***********'\r\n                    maxLength={50}\r\n                    value={this.state.userData.password}\r\n                    error={this.state.errorFields.password}\r\n                    onChange={(newValue) => this.setFieldValue('password', newValue)}\r\n                />\r\n                <Input\r\n                    id='PasswordAgain'\r\n                    label={t('label.account.repeat_password')}\r\n                    type='password'\r\n                    name='passwordRepeat'\r\n                    placeholder='***********'\r\n                    maxLength={50}\r\n                    value={this.state.userData.passwordRepeat}\r\n                    error={this.state.errorFields.passwordRepeat}\r\n                    onChange={(newValue) => this.setFieldValue('passwordRepeat', newValue)}\r\n                />\r\n            </div>\r\n            <Button id='to-second-step' onClick={this.toStep2}>\r\n                {t('label.button.continueButton')}\r\n            </Button>\r\n            <p className='second-step'>{t('label.account.secondStepReg')}</p>\r\n        </div>\r\n    };\r\n\r\n    getSecondPart = () => {\r\n        const {t} = this.props;\r\n        return <div className='registration-second-part'>\r\n            <div className='flex-input'>\r\n                <Input\r\n                    id='City'\r\n                    className='city'\r\n                    label={t('label.account.city')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='Minsk'\r\n                    maxLength={100}\r\n                    value={this.state.userData.city}\r\n                    error={this.state.errorFields.city}\r\n                    onChange={(newValue) => this.setFieldValue('city', newValue)}\r\n                />\r\n                <Input\r\n                    id='Country'\r\n                    className='country'\r\n                    label={t('label.account.country')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='Belarus'\r\n                    maxLength={50}\r\n                    value={this.state.userData.country}\r\n                    error={this.state.errorFields.country}\r\n                    onChange={(newValue) => this.setFieldValue('country', newValue)}\r\n                />\r\n                <Input\r\n                    id='Address'\r\n                    label={t('label.account.address')}\r\n                    type='text'\r\n                    name='city'\r\n                    placeholder='str. Nezalejnasti'\r\n                    maxLength={200}\r\n                    value={this.state.userData.address}\r\n                    error={this.state.errorFields.address}\r\n                    onChange={(newValue) => this.setFieldValue('address', newValue)}\r\n                />\r\n\r\n                <div className=\"forMap google-map-container\">\r\n                    <Map coords={{latitude: this.state.userData.latitude, longitude: this.state.userData.longitude}}/>\r\n                </div>\r\n\r\n                <CheckBox\r\n                    value={this.state.agree}\r\n                    error={this.state.agreeError}\r\n                    onChange={(value) => this.setState({agree: value, agreeError: !value})}\r\n                >\r\n                    <span>{t('label.account.accept')}<a>\r\n                        <span>{t('label.account.termsOfUse')}</span>\r\n                    </a></span>\r\n                </CheckBox>\r\n            </div>\r\n            <Button id='go-back' onClick={() => this.setState({step: 1})}>\r\n                {t('label.button.back')}\r\n            </Button>\r\n            <div id='form-list'>\r\n                <Button id='finish-registration' onClick={this.register}>{t('label.button.finishRegistration')}</Button>\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form' id='registration-form'>\r\n            <h3>{t('label.account.registration')}</h3>\r\n            <p>{t('label.account.haveAcc')}\r\n                <span className='go_to_login' onClick={this.props.toLogin}>\r\n                    <span>{t('label.account.logHere')}</span>\r\n                </span>\r\n            </p>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            {this.state.step === 1\r\n                ? this.getFirstPart()\r\n                : this.getSecondPart()}\r\n        </form>\r\n    }\r\n\r\n}\r\n\r\nexport default withTranslation()(RegistrationForm);","D:\\git\\stock\\stock-front\\src\\pages\\user\\UserMain.js",["248","249","250","251","252","253","254","255","256","257","258","259","260","261","262"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Button from '../../components/input/Button';\r\nimport Form from '../../components/form/Form';\r\nimport LocalStorage from '../../util/LocalStorage';\r\nimport FeedBackForm from '../../forms/feed-back/FeedBackForm';\r\nimport AccountForm from '../../forms/account/AccountForm';\r\nimport Lots from './tab/Lots';\r\nimport Tenders from './tab/Tenders';\r\nimport Products from './tab/Products';\r\nimport Companies from './tab/Companies';\r\nimport Labels from './tab/Labels';\r\nimport Trade from './tab/Trade';\r\nimport ProductsStatistics from './tab/ProductsStatistics';\r\nimport Categories from './tab/Categories';\r\nimport ProductStatisticsDetails from './tab/ProductStatisticsDetails';\r\nimport Deals from './tab/Deals';\r\nimport DealDetails from './tab/DealDetails';\r\nimport Addresses from './tab/Addresses';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Request from '../../util/Request';\r\n\r\nclass UserMain extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.tabMap = this.getTabMap();\r\n        this.state = {\r\n            activeTab: this.tabMap.PRODUCTS,\r\n            feedBackFormActive: false,\r\n            accountPopupActive: false,\r\n            accountFormActive: false,\r\n            showEmptyForm: false,\r\n            mobileMenuActivated: false,\r\n            alerts: {\r\n                lastUpdate: null,\r\n                lotAlerts: 0,\r\n                tenderAlerts: 0,\r\n                dealOnApprove: 0,\r\n                canceledDeal: 0\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.onmousemove = () => {\r\n            if (this.state.alerts.lastUpdate < new Date(new Date().getTime() - 5 * 60000)) {\r\n                Request.doGet(ApiUrls.ALERTS)\r\n                    .then(async response => {\r\n                        if (response.ok) {\r\n                            this.setState({\r\n                                alerts: {\r\n                                    ...JSON.parse(await response.text()),\r\n                                    lastUpdate: new Date()\r\n                                }\r\n                            });\r\n                        }\r\n                    })\r\n            }\r\n        };\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.onmousemove = null;\r\n    }\r\n\r\n    getAddButton = (visible) => {\r\n        const {t} = this.props;\r\n        if (visible) {\r\n            return <div className='add-button' onClick={() => this.setState({showEmptyForm: true})}>\r\n                <div className='plus'/>\r\n                <p>{t('label.button.create')}</p>\r\n            </div>;\r\n        } else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    getTabMap = () => {\r\n        const {t} = this.props;\r\n        return {\r\n            ADDRESSES: {\r\n                id: 'addresses',\r\n                getTitle: () => t('label.pageNames.myAddresses'),\r\n                addButton: true,\r\n                getContent: () =>\r\n                    <Addresses\r\n                        showEmptyForm={this.state.showEmptyForm}\r\n                        onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                    />\r\n            },\r\n            PRODUCTS: {\r\n                id: 'products',\r\n                getTitle: () => t('label.pageNames.products'),\r\n                addButton: false,\r\n                getContent: () =>\r\n                    <ProductsStatistics\r\n                        onDetails={(pId =>\r\n                                this.setState({activeTab: this.tabMap.PRODUCT_DETAILS, productId: pId})\r\n                        )}\r\n                    />\r\n            },\r\n            PRODUCT_DETAILS: {\r\n                id: 'productDetails',\r\n                getTitle: () => t('label.pageNames.tradeOffers'),\r\n                addButton: false,\r\n                getContent: () =>\r\n                    <ProductStatisticsDetails\r\n                        productId={this.state.productId}\r\n                        onBack={() => this.setState({activeTab: this.tabMap.PRODUCTS})}\r\n                    />\r\n            },\r\n            LOTS: {\r\n                id: 'lots',\r\n                getTitle: () => t('label.pageNames.myLots'),\r\n                addButton: true,\r\n                getContent: () =>\r\n                    <Lots\r\n                        resetAlerts={() => this.setState({alerts: {...this.state.alerts, lotAlerts: 0}})}\r\n                        showEmptyForm={this.state.showEmptyForm}\r\n                        onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                    />\r\n            },\r\n            TENDERS: {\r\n                id: 'tenders',\r\n                getTitle: () => t('label.pageNames.myTenders'),\r\n                addButton: true,\r\n                getContent: () =>\r\n                    <Tenders\r\n                        resetAlerts={() => this.setState({alerts: {...this.state.alerts, tenderAlerts: 0}})}\r\n                        showEmptyForm={this.state.showEmptyForm}\r\n                        onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                    />\r\n            },\r\n            DEALS: {\r\n                id: 'deals',\r\n                getTitle: () => t('label.pageNames.myDeals'),\r\n                addButton: false,\r\n                getContent: () =>\r\n                    <Deals\r\n                        resetAlerts={() => this.setState({alerts: {...this.state.alerts, canceledDeal: 0}})}\r\n                        onDetails={(dealId => this.setState({activeTab: this.tabMap.DEAL_DETAILS, dealId: dealId}))}\r\n                    />\r\n            },\r\n            DEAL_DETAILS: {\r\n                id: 'dealDetails',\r\n                getTitle: () => t('label.pageNames.deal'),\r\n                addButton: false,\r\n                getContent: () =>\r\n                    <DealDetails\r\n                        resetDealAlert={() => this.setState({\r\n                            alerts:\r\n                                {...this.state.alerts, dealOnApprove: this.state.alerts.dealOnApprove - 1}\r\n                        })}\r\n                        dealId={this.state.dealId}\r\n                        onBack={() => this.setState({activeTab: this.tabMap.DEALS})}\r\n                    />\r\n            },\r\n            PRODUCTS_ADMIN: {\r\n                id: 'productsAdmin',\r\n                getTitle: () => t('label.pageNames.productsForAdmin'),\r\n                addButton: true,\r\n                getContent: () =>\r\n                    <Products\r\n                        showEmptyForm={this.state.showEmptyForm}\r\n                        onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                        onToDetails={(pId) =>\r\n                            this.setState({activeTab: this.tabMap.PRODUCT_CATEGORIES_ADMIN, productId: pId})\r\n                        }\r\n                    />\r\n            },\r\n            PRODUCT_CATEGORIES_ADMIN: {\r\n                id: 'productCategoriesAdmin',\r\n                getTitle: () => t('label.pageNames.productsForAdmin'),\r\n                addButton: true,\r\n                getContent: () =>\r\n                    <Categories\r\n                        productId={this.state.productId}\r\n                        showEmptyForm={this.state.showEmptyForm}\r\n                        onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                    />\r\n            },\r\n            COMPANY: {\r\n                id: 'company',\r\n                getTitle: () => t('label.pageNames.companies'),\r\n                addButton: false,\r\n                getContent: () => <Companies/>\r\n            },\r\n            TESTS: {\r\n                id: 'tests',\r\n                getTitle: () => t('label.navigation.testBG'),\r\n                addButton: false,\r\n                getContent: () => <Trade/>\r\n            },\r\n            LABELS: {\r\n                id: 'labels',\r\n                getTitle: () => t('label.pageNames.lables'),\r\n                addButton: true,\r\n                getContent: () =>\r\n                    <Labels\r\n                        showEmptyForm={this.state.showEmptyForm}\r\n                        onCloseForm={() => this.setState({showEmptyForm: false})}\r\n                    />\r\n            }\r\n        }\r\n    };\r\n\r\n    setActiveTab = (e, tab) => {\r\n        e.preventDefault();\r\n        this.setState({\r\n            activeTab: tab,\r\n            mobileMenuActivated: false\r\n        });\r\n    };\r\n\r\n    getMenu = () => {\r\n        return <nav className='main-menu'>\r\n            <ul>\r\n                {this.getUserTabs()}\r\n                {this.getAdminTabs()}\r\n            </ul>\r\n        </nav>\r\n    };\r\n\r\n    getUserTabs = () => {\r\n        const {t} = this.props;\r\n        return <React.Fragment>\r\n            <li className={this.state.activeTab === this.tabMap.PRODUCTS\r\n            || this.state.activeTab === this.tabMap.PRODUCT_DETAILS\r\n                ? 'active'\r\n                : ''\r\n            }>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.PRODUCTS)}>\r\n                    {t('label.navigation.products')}\r\n                </a>\r\n            </li>\r\n            <li className={this.state.activeTab === this.tabMap.LOTS ? 'active' : ''}>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.LOTS)}>\r\n                    {t('label.navigation.lots')}\r\n                    {this.state.alerts.lotAlerts\r\n                        ? <span id='lot-alerts' className='bid-alert'>{this.state.alerts.lotAlerts}</span>\r\n                        : ''\r\n                    }\r\n                </a>\r\n            </li>\r\n            <li className={this.state.activeTab === this.tabMap.TENDERS ? 'active' : ''}>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.TENDERS)}>\r\n                    {t('label.navigation.tenders')}\r\n                    {this.state.alerts.tenderAlerts\r\n                        ? <span id='tender-alerts' className='bid-alert'>{this.state.alerts.tenderAlerts}</span>\r\n                        : ''\r\n                    }\r\n                </a>\r\n            </li>\r\n            <li className={this.state.activeTab === this.tabMap.DEALS\r\n            || this.state.activeTab === this.tabMap.DEAL_DETAILS\r\n                ? 'active'\r\n                : ''\r\n            }>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.DEALS)}>\r\n                    {t('label.navigation.deals')}\r\n                    {this.state.alerts.canceledDeal\r\n                        ? <span id='deal-alerts' className='deal-alert'>{this.state.alerts.canceledDeal}</span>\r\n                        : ''\r\n                    }\r\n                    {this.state.alerts.dealOnApprove\r\n                        ? <span id='deal-on-approve' className='deal-on-approve'>\r\n                            {this.state.alerts.dealOnApprove}</span>\r\n                        : ''\r\n                    }\r\n                </a>\r\n            </li>\r\n        </React.Fragment>\r\n    };\r\n\r\n    getAdminTabs = () => {\r\n        if (LocalStorage.hasRole('ADMIN')) {\r\n            const {t} = this.props;\r\n            return <React.Fragment>\r\n                <li className={\r\n                    this.state.activeTab === this.tabMap.PRODUCTS_ADMIN\r\n                    || this.state.activeTab === this.tabMap.PRODUCT_CATEGORIES_ADMIN\r\n                        ? 'active'\r\n                        : ''\r\n                }>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.PRODUCTS_ADMIN)}>\r\n                        {t('label.navigation.productsExt')}\r\n                    </a>\r\n                </li>\r\n                <li className={this.state.activeTab === this.tabMap.COMPANY ? 'active' : ''}>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.COMPANY)}>\r\n                        {t('label.navigation.company')}\r\n                    </a>\r\n                </li>\r\n                <li className={this.state.activeTab === this.tabMap.TESTS ? 'active' : ''}>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.TESTS)}>\r\n                        {t('label.navigation.testBG')}\r\n                    </a>\r\n                </li>\r\n                <li className={this.state.activeTab === this.tabMap.LABELS ? 'active' : ''}>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.LABELS)}>\r\n                        {t('label.navigation.labels')}\r\n                    </a>\r\n                </li>\r\n            </React.Fragment>\r\n        } else {\r\n            return '';\r\n        }\r\n    };\r\n\r\n    getFeedBackForm = () => {\r\n        if (this.state.feedBackFormActive) {\r\n            return <Form\r\n                className='contact-us-dialogbox'\r\n                onClose={() => this.setState({feedBackFormActive: false})}\r\n            >\r\n                <FeedBackForm/>\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    getAccountForm = () => {\r\n        if (this.state.accountFormActive) {\r\n            return <Form\r\n                map={true}\r\n                className='account-dialogbox'\r\n                onClose={() => this.setState({accountFormActive: false})}\r\n            >\r\n                <AccountForm\r\n                    onAddress={() => this.setState({activeTab: this.tabMap.ADDRESSES, accountFormActive: false})}\r\n                />\r\n            </Form>\r\n        }\r\n    };\r\n\r\n    getLogo = () => {\r\n        return <div className='logo-pages'>\r\n            <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.PRODUCTS)}>\r\n                <img className='big-logo' src='/img/logo-pages.png' alt='YourTrader' title='YourTrader'/>\r\n            </a>\r\n            <div className=' small-logo'>\r\n                <div className='burger-close' onClick={() => this.setState({mobileMenuActivated: false})}/>\r\n                <div className='logo-mobile'>\r\n                    <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.PRODUCTS)}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n    getMobileLogo = () => {\r\n        return <div className='burger-logo'>\r\n            <div className='burger' onClick={() => this.setState({mobileMenuActivated: true})}/>\r\n            <div className='logo-mobile'>\r\n                <a href='#' onClick={(e) => this.setActiveTab(e, this.tabMap.PRODUCTS)}/>\r\n            </div>\r\n        </div>\r\n    };\r\n\r\n\r\n    getAccountButton = () => {\r\n        return <div className={`login-box ${this.state.accountPopupActive ? '' : 'login-box-shadow'}`}>\r\n            <div\r\n                className='login-button-page'\r\n                onClick={() => this.setState({accountPopupActive: !this.state.accountPopupActive})}\r\n            >\r\n                <div>\r\n                    <div>{LocalStorage.getCompanyName()}</div>\r\n                    <div className='hor_bg'/>\r\n                </div>\r\n            </div>\r\n            {this.getAccountPopup()}\r\n        </div>\r\n    };\r\n\r\n    getAccountPopup = () => {\r\n        const {t} = this.props;\r\n        if (this.state.accountPopupActive) {\r\n            return <div className='login-list'>\r\n                <div>\r\n                    <a href='#'\r\n                       className='edit-account'\r\n                       onClick={(e) => {\r\n                           e.preventDefault();\r\n                           this.setState({accountFormActive: true, accountPopupActive: false});\r\n                       }}\r\n                    >\r\n                        {t('label.navigation.account')}\r\n                    </a>\r\n                    <a href='#'\r\n                       onClick={(e) => {\r\n                           e.preventDefault();\r\n                           window.logout();\r\n                       }}\r\n                       id='session-start'>\r\n                        {t('label.navigation.logout')}\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        }\r\n    };\r\n\r\n    getAsideFooter = () => {\r\n        const {t} = this.props;\r\n        return <div className='aside-footer'>\r\n            <p className='footer-phone'>\r\n                <a href={`tel:${t('label.index.phone_prefix')}${t('label.index.phone')}`}>\r\n                    {t('label.index.phone_prefix')}<span>{t('label.index.phone')}</span>\r\n                </a>\r\n            </p>\r\n            <p className='footer-email'>\r\n                <a href={`mailto:${t('label.index.email')}`}>{t('label.index.email')}</a>\r\n            </p>\r\n            <Button\r\n                className='gray-button send-message'\r\n                onClick={() => this.setState({feedBackFormActive: true})}\r\n            >\r\n                {t('label.account.contact_us')}\r\n            </Button>\r\n            <br/><br/>\r\n        </div>\r\n    };\r\n\r\n    render() {\r\n        const addButton = this.getAddButton(this.state.activeTab.addButton);\r\n        return <React.Fragment>\r\n            {this.getFeedBackForm()}\r\n            {this.getAccountForm()}\r\n            <div className={`aside ${this.state.mobileMenuActivated ? 'aside-adaptive' : ''}`}>\r\n                {this.getLogo()}\r\n                {this.getMenu()}\r\n                {this.getAsideFooter()}\r\n            </div>\r\n            <div className='aside-modile'>\r\n                {this.getMobileLogo()}\r\n                {this.getAccountButton()}\r\n            </div>\r\n            {this.state.mobileMenuActivated ? <div className='bgdark'/> : ''}\r\n            <div className='section'>\r\n                <div className='table-header'>\r\n                    <h1>{this.state.activeTab.getTitle()}</h1>\r\n                    <div className={`table-header-button ${addButton === '' ? 'thb' : ''}`}>\r\n                        {addButton}\r\n                        {this.getAccountButton()}\r\n                    </div>\r\n                </div>\r\n                <div className='content'>\r\n                    {this.state.activeTab.getContent()}\r\n                </div>\r\n            </div>\r\n\r\n        </React.Fragment>\r\n    }\r\n\r\n}\r\n\r\nexport default withTranslation()(UserMain);","D:\\git\\stock\\stock-front\\src\\util\\LocalStorage.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\feed-back\\FeedBackForm.js",[],"D:\\git\\stock\\stock-front\\src\\util\\VerificationUtils.js",["263","264","265","266","267","268","269","270","271"],"const verificationUtils = {\r\n    checkEmail: (email, t) => {\r\n        const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n        if (email && !re.test(email.toLowerCase())) {\r\n            return t('enter_valid_email');\r\n        } else {\r\n            const domainPart = email.substr(email.indexOf(\"@\") + 1);\r\n            const localPart = email.substr(0, email.indexOf(\"@\"));\r\n            if (domainPart.length > 255 || localPart.length > 64) {\r\n                return t('enter_valid_email');\r\n            }\r\n        }\r\n    },\r\n    checkUrl: (value, t) => {\r\n        const re = /^(?:http(s)?:\\/\\/)?[\\w.-]+(?:\\.[\\w\\.-]+)+[\\w\\-\\._~:/?#[\\]@!\\$&'\\(\\)\\*\\+,;=.]+$/;\r\n        if (value !== '' && (!re.test(value.toLowerCase()) || value.length > 2048)) {\r\n            return t('enter_valid_url');\r\n        }\r\n    }\r\n};\r\n\r\nexport default verificationUtils;","D:\\git\\stock\\stock-front\\src\\components\\input\\TextArea.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\account\\AccountForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Lots.js",[],"D:\\git\\stock\\stock-front\\src\\components\\table\\Table.js",["272","273","274"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport './Table.css';\r\nimport Message from '../message/Message';\r\n\r\n/**\r\n * pageSize: number\r\n * data: [[any]]\r\n * header: [{name: String, weight: number}]\r\n * message: {type: String, value:String}\r\n */\r\nclass Table extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            pageNumber: 1,\r\n            search: ''\r\n        }\r\n    }\r\n\r\n    getPageSize = () => {\r\n        return this.props.pageSize || 10;\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.data.length < this.props.data.length) {\r\n            this.setState({pageNumber: 1, search: ''})\r\n        }\r\n    }\r\n\r\n    getPaginator = (data) => {\r\n        console.log(data);\r\n        if (data.length > this.getPageSize()) {\r\n            return <div className='dataTables_paginate paging_simple_numbers' id='main-table_paginate'\r\n                        style={{display: 'block'}}>\r\n                <a className='paginate_button previous disabled'\r\n                   id='main-table_previous'\r\n                   onClick={() => {\r\n                       if (this.state.pageNumber > 1) {\r\n                           this.setState({pageNumber: this.state.pageNumber - 1});\r\n                       }\r\n                   }}\r\n                > </a>\r\n                <span><a className='paginate_button current'>{this.state.pageNumber}</a></span>\r\n                <a className='paginate_button next disabled'\r\n                   id='main-table_next'\r\n                   onClick={() => {\r\n                       if (this.state.pageNumber < data.length / 10) {\r\n                           this.setState({pageNumber: this.state.pageNumber + 1});\r\n                       }\r\n                   }}\r\n                > </a>\r\n            </div>\r\n        }\r\n    };\r\n\r\n    onSearchChange = (e) => {\r\n        this.setState({\r\n            search: e.currentTarget.value,\r\n            pageNumber: 1\r\n        })\r\n    };\r\n\r\n    filterData = () => {\r\n        return this.props.data\r\n            .filter(obj => Object.values(obj).find(field =>\r\n                typeof field === 'string' && field.toLowerCase().indexOf(this.state.search.toLowerCase()) >= 0));\r\n    };\r\n\r\n    getTableRows = (data) => {\r\n        const {t} = this.props;\r\n        if (data.length === 0) {\r\n            return <tr>\r\n                <td valign='top' colSpan={this.props.header.length} className='dataTables_empty'>\r\n                    {t('label.table.emptyTable')}\r\n                </td>\r\n            </tr>\r\n        } else {\r\n            return data.map((d, rowIndex) =>\r\n                <tr role='row' className='odd inactive-row' key={`table-row-${rowIndex}`}>\r\n                    {d.map((cell, cellIndex) =>\r\n                        <td className={`column-weight-${this.props.header[cellIndex].weight}`}\r\n                            key={`table-row-${rowIndex}-cell-${cellIndex}`}\r\n                        >\r\n                            {cell}\r\n                        </td>\r\n                    )}\r\n                </tr>\r\n            );\r\n        }\r\n    };\r\n\r\n    getHeader = () => {\r\n        if (this.props.message) {\r\n            return <th colSpan={this.props.header.length} className='table-message-header'>\r\n                <Message message={this.props.message} className='table-message'/>\r\n            </th>\r\n        } else {\r\n            return this.props.header.map((h, index) =>\r\n                <th className={`sorting_disabled column-weight-${h.weight}`} key={`table-head-${index}`}>\r\n                    {h.name}\r\n                </th>\r\n            );\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        const filteredData = this.filterData();\r\n        const data = filteredData.slice(\r\n            (this.state.pageNumber - 1) * this.getPageSize(),\r\n            this.state.pageNumber * this.getPageSize()\r\n        );\r\n\r\n        return <div id='table-container'>\r\n            <div id='main-table_wrapper' className='dataTables_wrapper no-footer'>\r\n                <div id='main-table_filter' className='dataTables_filter'>\r\n                    <label>\r\n                        <input\r\n                            type='text'\r\n                            placeholder={t('label.table.searchPlaceholder')}\r\n                            onChange={this.onSearchChange}\r\n                            value={this.state.search}\r\n                        />\r\n                    </label>\r\n                </div>\r\n                <table id='main-table' className='display responsive nowrap dataTable no-footer dtr-inline collapsed'\r\n                       style={{width: '100%'}}>\r\n                    <thead>\r\n                    <tr role='row'>\r\n                        {this.getHeader()}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.getTableRows(data)}\r\n                    </tbody>\r\n                </table>\r\n                {this.getPaginator(filteredData)}\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Table);","D:\\git\\stock\\stock-front\\src\\forms\\lot\\LotForm.js",["275"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport Dropdown from '../../components/input/Dropdown';\r\nimport Input from '../../components/input/Input';\r\nimport Calendar from '../../components/input/Calendar';\r\nimport File from '../../components/input/File';\r\nimport TextArea from '../../components/input/TextArea';\r\nimport Button from '../../components/input/Button';\r\nimport ApiUrls from '../../util/ApiUrls';\r\nimport Map from '../../components/map/Map';\r\nimport Request from '../../util/Request';\r\nimport Message, {TYPES} from '../../components/message/Message';\r\n\r\nclass LotForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            lot: this.props.lot\r\n                || {\r\n                    id: null,\r\n                    description: '',\r\n                    price: null,\r\n                    minVolume: null,\r\n                    maxVolume: null,\r\n                    companyId: null,\r\n                    status: null,\r\n                    creationDate: new Date(),\r\n                    expirationDate: this.getDefaultExpirationDate(),\r\n                    addressId: this.props.addresses[0].id,\r\n                    distance: 30000,\r\n                    categoryId: null,\r\n                    alert: null,\r\n                    photo: null\r\n                },\r\n            error: {}\r\n        };\r\n    }\r\n\r\n    getDefaultExpirationDate = () => {\r\n        const date = new Date();\r\n        if (date.getMonth() === 12) {\r\n            date.setMonth(1);\r\n            date.setFullYear(date.getFullYear() + 1);\r\n        } else {\r\n            date.setMonth(date.getMonth() + 1);\r\n        }\r\n        return date;\r\n    };\r\n\r\n    validate = () => {\r\n        const {t} = this.props;\r\n        const error = {};\r\n        let message = null;\r\n\r\n        if (Number.isNaN(+this.state.lot.price) || this.state.lot.price < 0.01) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.price_error')\r\n            };\r\n            error.price = true;\r\n        }\r\n\r\n        if (!Number.isInteger(+this.state.lot.minVolume) || this.state.lot.minVolume < 1) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.minVolume_error')\r\n            };\r\n            error.minVolume = true;\r\n        }\r\n\r\n        if (!Number.isInteger(+this.state.lot.maxVolume) || this.state.lot.maxVolume < this.state.lot.minVolume) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.maxVolume_error')\r\n            };\r\n            error.maxVolume = true;\r\n        }\r\n        if (!this.state.lot.categoryId) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.category_error')\r\n            };\r\n            error.categoryId = true;\r\n        }\r\n\r\n        if (this.state.lot.expirationDate < new Date()) {\r\n            message = {\r\n                type: TYPES.ERROR,\r\n                value: t('label.lot.expDate_error')\r\n            };\r\n            error.expirationDate = true;\r\n        }\r\n\r\n        this.setState({error: error, message: message});\r\n        return message === null;\r\n    };\r\n\r\n    save = (status) => {\r\n        if (this.validate()) {\r\n            const lot = {...this.state.lot, status: status};\r\n            const method = lot.id === null ? Request.doPost : Request.doPut;\r\n            method(ApiUrls.LOT.replace('{id}', lot.id || ''), null, lot)\r\n                .then(async responce => {\r\n                    if (responce.ok) {\r\n                        const id = await responce.text();\r\n                        if (id) {\r\n                            lot.id = JSON.parse(id);\r\n                        }\r\n                        this.props.onSave(lot, !!id);\r\n                    }\r\n                });\r\n        }\r\n    };\r\n\r\n    getProduct = () => {\r\n        const {t} = this.props;\r\n        return this.props.products.find(p => p.categories.find(c => c.id === this.state.lot.categoryId))\r\n            || {name: t('label.lot.list'), id: null, categories: []};\r\n    };\r\n\r\n    getProducts = () => {\r\n        const {t} = this.props;\r\n        const product = this.getProduct();\r\n        const list = this.props.products.map(p => {\r\n            return {\r\n                id: p.id,\r\n                name: t(`label.${p.name}.name`),\r\n                active: p.id === product.id\r\n            }\r\n        });\r\n\r\n        list.splice(0, 0, {name: t('label.lot.list'), id: null, active: product.id === null});\r\n        return list;\r\n    };\r\n\r\n    getCategories = () => {\r\n        const {t} = this.props;\r\n        const list = (this.props.products.find(p => p.id === this.state.lot.productId)\r\n            || this.getProduct()\r\n            || {categories: []})\r\n            .categories\r\n            .map(p => {\r\n                return {\r\n                    id: p.id,\r\n                    name: t(`label.${p.name}.name`),\r\n                    active: p.id === this.state.lot.categoryId\r\n                }\r\n            });\r\n\r\n        list.splice(0, 0, {\r\n            name: t('label.lot.list'), id: null, active: this.state.lot.categoryId === null\r\n        });\r\n        return list;\r\n    };\r\n\r\n    getAddresses = () => {\r\n        return this.props.addresses\r\n            .map(a => {\r\n                return {\r\n                    name: `${a.country}, ${a.city}, ${a.address}`,\r\n                    id: a.id,\r\n                    active: a.id === this.state.lot.addressId\r\n                }\r\n            });\r\n    };\r\n\r\n    getDistances = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {id: 30000, name: t('label.lot.distance_any'), active: this.state.lot.distance === 30000},\r\n            {id: 400, name: t('label.lot.distance_400'), active: this.state.lot.distance === 400},\r\n            {id: 200, name: t('label.lot.distance_200'), active: this.state.lot.distance === 200},\r\n            {id: 100, name: t('label.lot.distance_100'), active: this.state.lot.distance === 100},\r\n            {id: 50, name: t('label.lot.distance_40'), active: this.state.lot.distance === 50},\r\n            {id: 0, name: t('label.lot.distance_0'), active: this.state.lot.distance === 0}\r\n        ];\r\n    };\r\n\r\n    showPhoto = (event) => {\r\n        event.preventDefault();\r\n        console.log(this.state.lot.photo);\r\n    };\r\n\r\n    changeLot = (propertyName, value) => {\r\n        this.setState({\r\n            lot: {\r\n                ...this.state.lot,\r\n                [propertyName]: value\r\n            },\r\n            error: {\r\n                ...this.state.error,\r\n                [propertyName]: false\r\n            }\r\n        })\r\n    };\r\n\r\n    getCoords = () => {\r\n        const address = this.props.addresses.find(a => a.id === this.state.lot.addressId);\r\n        return {latitude: address.latitude, longitude: address.longitude};\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <form className='form' name='form'>\r\n            <h3>{t('label.lot.lotForm')}</h3>\r\n            <div>\r\n                <Message message={this.state.message}/>\r\n            </div>\r\n            <div className='flex-two-input'>\r\n                <div>\r\n                    <Dropdown\r\n                        id='ProductId'\r\n                        name='productId'\r\n                        elements={this.getProducts()}\r\n                        label={t('label.lot.product')}\r\n                        readOnly={this.state.lot.id !== null}\r\n                        error={this.state.error.productId}\r\n                        onChange={(newId) => this.changeLot('productId', newId)}\r\n                    />\r\n\r\n                    <Dropdown\r\n                        id='CategoryId'\r\n                        name='categoryId'\r\n                        elements={this.getCategories()}\r\n                        label={t('label.lot.category')}\r\n                        error={this.state.error.categoryId}\r\n                        onChange={(newId) => this.changeLot('categoryId', newId)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='Price'\r\n                        label={t('label.lot.min_price')}\r\n                        name='price'\r\n                        placeholder='9.99'\r\n                        value={this.state.lot.price}\r\n                        error={this.state.error.price}\r\n                        onChange={(newValue) => this.changeLot('price', newValue)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='MinVolume'\r\n                        label={t('label.lot.min_volume')}\r\n                        name='minVolume'\r\n                        value={this.state.lot.minVolume}\r\n                        error={this.state.error.minVolume}\r\n                        onChange={(newValue) => this.changeLot('minVolume', newValue)}\r\n                    />\r\n\r\n                    <Input\r\n                        id='MaxVolume'\r\n                        label={t('label.lot.max_volume')}\r\n                        name='maxVolume'\r\n                        value={this.state.lot.maxVolume}\r\n                        error={this.state.error.maxVolume}\r\n                        onChange={(newValue) => this.changeLot('maxVolume', newValue)}\r\n                    />\r\n\r\n                    <Calendar\r\n                        id='ExpDate'\r\n                        label={t('label.lot.exp_date')}\r\n                        value={this.state.lot.expirationDate}\r\n                        error={this.state.error.expirationDate}\r\n                        onChange={(value => this.changeLot('expirationDate', value))}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <div>\r\n                        <div>\r\n                            <Dropdown\r\n                                id='AddressId'\r\n                                name='addressId'\r\n                                className='address-selector'\r\n                                elements={this.getAddresses()}\r\n                                label={t('label.lot.address')}\r\n                                error={this.state.error.addressId}\r\n                                onChange={(newId) => this.changeLot('addressId', newId)}\r\n                            />\r\n\r\n                            <Dropdown\r\n                                id='Distance'\r\n                                name='distance'\r\n                                className='address-selector'\r\n                                elements={this.getDistances()}\r\n                                label={t('label.lot.distance')}\r\n                                error={this.state.error.distance}\r\n                                onChange={(newId) => this.changeLot('distance', newId)}\r\n                            />\r\n\r\n                            {this.state.lot.photo\r\n                                ? <a href='#' onClick={(e) => this.showPhoto(e)}>\r\n                                    {t('label.lot.uploaded_foto')}\r\n                                </a>\r\n                                : ''\r\n                            }\r\n                            <File\r\n                                id='Photo'\r\n                                name='photo'\r\n                                label={t('label.lot.foto')}\r\n                                onChange={(value) => this.changeLot('photo', value)}\r\n                            />\r\n\r\n                            <TextArea\r\n                                id='Description'\r\n                                labe={t('label.lot.description')}\r\n                                name='description'\r\n                                maxLength={1000}\r\n                                value={this.state.lot.description}\r\n                                onChange={(value) => this.changeLot('description', value)}\r\n                            />\r\n                        </div>\r\n                        <div className='forMapLotsTender google-map-container'\r\n                             style={{position: 'relative', overflow: 'hidden'}}>\r\n                            <Map coords={this.getCoords()}/>\r\n                        </div>\r\n                    </div>\r\n                    <div id='form-list'>\r\n                        <Button className='submit button gray-button' id='save' onClick={() => this.save('INACTIVE')}>\r\n                            {t('label.button.save')}\r\n                        </Button>\r\n                        <Button className='submit button' id='save-start-trading' onClick={() => this.save('ACTIVE')}>\r\n                            {t('label.button.save_start_trading')}\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    }\r\n}\r\n\r\nexport default withTranslation()(LotForm);","D:\\git\\stock\\stock-front\\src\\components\\input\\Calendar.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\File.js",[],"D:\\git\\stock\\stock-front\\src\\components\\input\\Dropdown.js",[],["276","277"],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Tenders.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\tender\\TenderForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Products.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\product\\ProductForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Categories.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\category\\CategoryForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Companies.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Labels.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\label\\LabelForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Trade.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\ProductsStatistics.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\ProductStatisticsDetails.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Deals.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\DealDetails.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\company-feed-back\\CompanyFeedBackForm.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\user\\tab\\Addresses.js",[],"D:\\git\\stock\\stock-front\\src\\forms\\address\\AddressForm.js",[],"D:\\git\\stock\\stock-front\\src\\components\\Slider.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Header.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Welcome.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Advantages.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Products.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\ForWhom.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\AboutUs.js",[],"D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Footer.js",["278"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Footer extends React.Component {\r\n\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <footer>\r\n            <div className='container'>\r\n                <div className='contacts'>\r\n                    <p className='phone'>\r\n                        {t('label.index.phone_prefix')}<span>{t('label.index.phone')}</span>\r\n                    </p>\r\n                    <p className='mail'><a href=''>{t('label.index.email')}</a></p>\r\n                </div>\r\n                <div className='copyright'>\r\n                    {t('label.index.copyright')}\r\n                </div>\r\n            </div>\r\n            <div className='button_up' onClick={this.props.onUp}/>\r\n        </footer>;\r\n    }\r\n}\r\n\r\nFooter.propTypes = {\r\n    onUp: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withTranslation()(Footer);","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\Questions.js",["279"],"import React from 'react';\r\nimport {withTranslation} from 'react-i18next';\r\n\r\nclass Questions extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tab: [\r\n                false,\r\n                false,\r\n                false,\r\n                false\r\n            ]\r\n        }\r\n    }\r\n\r\n    getQuestions = () => {\r\n        const {t} = this.props;\r\n        return [\r\n            {\r\n                question: t('label.index.header_question_one'),\r\n                answer: t('label.index.body_answer_one')\r\n            },\r\n            {\r\n                question: t('label.index.header_question_two'),\r\n                answer: t('label.index.body_answer_two')\r\n            },\r\n            {\r\n                question: t('label.index.header_question_three'),\r\n                answer: t('label.index.body_answer_three')\r\n            },\r\n            {\r\n                question: t('label.index.header_question_four'),\r\n                answer: t('label.index.body_answer_four')\r\n            },\r\n        ];\r\n    };\r\n\r\n    changeTab = (index) => {\r\n        const tab = this.state.tab.slice();\r\n        tab[index] = !(tab[index]);\r\n        this.setState({tab: tab});\r\n    };\r\n\r\n    render() {\r\n        const {t} = this.props;\r\n        return <div className='container'>\r\n            <div>\r\n                <span className='span_h3'>{t('label.index.frequently_asked_question')}</span>\r\n                <p className='answer'>{t('label.index.not_found_answer')}</p>\r\n                <p className='mail'><a href=''>info@yourtrader.eu</a></p>\r\n            </div>\r\n            <div>\r\n                {this.getQuestions().map((q, index) =>\r\n                    <div className='question-answer' key={q.question}>\r\n                        <div>\r\n                            <div className='header-question' onClick={() => this.changeTab(index)}>\r\n                                {q.question}\r\n                                <div className={`question-close ${this.state.tab[index] ? 'question-open' : ''}`}/>\r\n                            </div>\r\n                            {this.state.tab[index]\r\n                                ? <div className='body-answer'>{q.answer}</div>\r\n                                : ''\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </div>;\r\n    }\r\n}\r\n\r\nexport default withTranslation()(Questions);","D:\\git\\stock\\stock-front\\src\\pages\\public\\sections\\PreviewPlatform.js",[],{"ruleId":"280","replacedBy":"281"},{"ruleId":"282","replacedBy":"283"},{"ruleId":"284","severity":1,"message":"285","line":75,"column":28,"nodeType":"286","endLine":75,"endColumn":42},{"ruleId":"284","severity":1,"message":"285","line":309,"column":54,"nodeType":"286","endLine":309,"endColumn":57},{"ruleId":"284","severity":1,"message":"287","line":233,"column":17,"nodeType":"286","endLine":233,"endColumn":89},{"ruleId":"284","severity":1,"message":"287","line":238,"column":17,"nodeType":"286","endLine":238,"endColumn":85},{"ruleId":"284","severity":1,"message":"287","line":247,"column":17,"nodeType":"286","endLine":247,"endColumn":88},{"ruleId":"284","severity":1,"message":"287","line":260,"column":17,"nodeType":"286","endLine":260,"endColumn":86},{"ruleId":"284","severity":1,"message":"287","line":286,"column":21,"nodeType":"286","endLine":286,"endColumn":99},{"ruleId":"284","severity":1,"message":"287","line":291,"column":21,"nodeType":"286","endLine":291,"endColumn":92},{"ruleId":"284","severity":1,"message":"287","line":296,"column":21,"nodeType":"286","endLine":296,"endColumn":90},{"ruleId":"284","severity":1,"message":"287","line":301,"column":21,"nodeType":"286","endLine":301,"endColumn":91},{"ruleId":"284","severity":1,"message":"287","line":338,"column":13,"nodeType":"286","endLine":338,"endColumn":85},{"ruleId":"288","severity":1,"message":"289","line":344,"column":21,"nodeType":"286","endLine":344,"endColumn":94},{"ruleId":"284","severity":1,"message":"287","line":344,"column":21,"nodeType":"286","endLine":344,"endColumn":94},{"ruleId":"288","severity":1,"message":"289","line":354,"column":17,"nodeType":"286","endLine":354,"endColumn":90},{"ruleId":"284","severity":1,"message":"287","line":354,"column":17,"nodeType":"286","endLine":354,"endColumn":90},{"ruleId":"284","severity":1,"message":"287","line":380,"column":21,"nodeType":"286","endLine":386,"endColumn":22},{"ruleId":"284","severity":1,"message":"287","line":389,"column":21,"nodeType":"286","endLine":394,"endColumn":43},{"ruleId":"290","severity":1,"message":"291","line":3,"column":30,"nodeType":"292","messageId":"293","endLine":3,"endColumn":31,"suggestions":"294"},{"ruleId":"290","severity":1,"message":"291","line":3,"column":55,"nodeType":"292","messageId":"293","endLine":3,"endColumn":56,"suggestions":"295"},{"ruleId":"290","severity":1,"message":"296","line":15,"column":55,"nodeType":"292","messageId":"293","endLine":15,"endColumn":56,"suggestions":"297"},{"ruleId":"290","severity":1,"message":"296","line":15,"column":67,"nodeType":"292","messageId":"293","endLine":15,"endColumn":68,"suggestions":"298"},{"ruleId":"290","severity":1,"message":"299","line":15,"column":80,"nodeType":"292","messageId":"293","endLine":15,"endColumn":81,"suggestions":"300"},{"ruleId":"290","severity":1,"message":"301","line":15,"column":84,"nodeType":"292","messageId":"293","endLine":15,"endColumn":85,"suggestions":"302"},{"ruleId":"290","severity":1,"message":"303","line":15,"column":86,"nodeType":"292","messageId":"293","endLine":15,"endColumn":87,"suggestions":"304"},{"ruleId":"290","severity":1,"message":"305","line":15,"column":88,"nodeType":"292","messageId":"293","endLine":15,"endColumn":89,"suggestions":"306"},{"ruleId":"290","severity":1,"message":"307","line":15,"column":90,"nodeType":"292","messageId":"293","endLine":15,"endColumn":91,"suggestions":"308"},{"ruleId":"284","severity":1,"message":"285","line":37,"column":17,"nodeType":"286","endLine":44,"endColumn":18},{"ruleId":"284","severity":1,"message":"285","line":45,"column":23,"nodeType":"286","endLine":45,"endColumn":62},{"ruleId":"284","severity":1,"message":"285","line":46,"column":17,"nodeType":"286","endLine":53,"endColumn":18},{"ruleId":"284","severity":1,"message":"287","line":291,"column":35,"nodeType":"286","endLine":291,"endColumn":82},{"ruleId":"280","replacedBy":"309"},{"ruleId":"282","replacedBy":"310"},{"ruleId":"284","severity":1,"message":"287","line":16,"column":41,"nodeType":"286","endLine":16,"endColumn":52},{"ruleId":"284","severity":1,"message":"287","line":52,"column":37,"nodeType":"286","endLine":52,"endColumn":48},"no-native-reassign",["311"],"no-negated-in-lhs",["312"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/anchor-has-content","Anchors must have content and the content must be accessible by a screen reader.","no-useless-escape","Unnecessary escape character: \\[.","Literal","unnecessaryEscape",["313","314"],["315","316"],"Unnecessary escape character: \\..",["317","318"],["319","320"],"Unnecessary escape character: \\$.",["321","322"],"Unnecessary escape character: \\(.",["323","324"],"Unnecessary escape character: \\).",["325","326"],"Unnecessary escape character: \\*.",["327","328"],"Unnecessary escape character: \\+.",["329","330"],["311"],["312"],"no-global-assign","no-unsafe-negation",{"messageId":"331","fix":"332","desc":"333"},{"messageId":"334","fix":"335","desc":"336"},{"messageId":"331","fix":"337","desc":"333"},{"messageId":"334","fix":"338","desc":"336"},{"messageId":"331","fix":"339","desc":"333"},{"messageId":"334","fix":"340","desc":"336"},{"messageId":"331","fix":"341","desc":"333"},{"messageId":"334","fix":"342","desc":"336"},{"messageId":"331","fix":"343","desc":"333"},{"messageId":"334","fix":"344","desc":"336"},{"messageId":"331","fix":"345","desc":"333"},{"messageId":"334","fix":"346","desc":"336"},{"messageId":"331","fix":"347","desc":"333"},{"messageId":"334","fix":"348","desc":"336"},{"messageId":"331","fix":"349","desc":"333"},{"messageId":"334","fix":"350","desc":"336"},{"messageId":"331","fix":"351","desc":"333"},{"messageId":"334","fix":"352","desc":"336"},"removeEscape",{"range":"353","text":"354"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"355","text":"356"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"357","text":"354"},{"range":"358","text":"356"},{"range":"359","text":"354"},{"range":"360","text":"356"},{"range":"361","text":"354"},{"range":"362","text":"356"},{"range":"363","text":"354"},{"range":"364","text":"356"},{"range":"365","text":"354"},{"range":"366","text":"356"},{"range":"367","text":"354"},{"range":"368","text":"356"},{"range":"369","text":"354"},{"range":"370","text":"356"},{"range":"371","text":"354"},{"range":"372","text":"356"},[91,92],"",[91,91],"\\",[116,117],[116,116],[728,729],[728,728],[740,741],[740,740],[753,754],[753,753],[757,758],[757,757],[759,760],[759,759],[761,762],[761,761],[763,764],[763,763]]