<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>back</artifactId>
    <packaging>jar</packaging>
    <groupId>com.stock</groupId>
    <version>0.1</version>

    <properties>
        <project-version>1.0-SNAPSHOT</project-version>
        <postgresql.version>42.2.9</postgresql.version>
        <spring.boot.version>2.2.2.RELEASE</spring.boot.version>
        <springdoc.version>1.2.26</springdoc.version>
        <com.amazonaws.version>1.11.731</com.amazonaws.version>
        <com.sun.mail.version>1.6.2</com.sun.mail.version>
        <io.jsonwebtoken.version>0.9.1</io.jsonwebtoken.version>
        <org.freemarker.version>2.3.29</org.freemarker.version>
        <org.apache.poi.version>3.9</org.apache.poi.version>
        <org.jsoup.version>1.13.1</org.jsoup.version>
        <org.jdbi.version>3.12.0</org.jdbi.version>
        <junit.version>4.13.1</junit.version>
        <org.mockito.version>3.6.28</org.mockito.version>
        <telegram.bot.version>5.0.1</telegram.bot.version>

        <docker-repository-url>localhost</docker-repository-url>
        <docker-dir>docker-dev</docker-dir>
        <docker-image-name>stock-dev</docker-image-name>

        <liquibase.propertyFile>liquibase/liquibase-dev.yml</liquibase.propertyFile>
    </properties>

    <profiles>
        <profile>
            <id>test</id>
            <properties>
                <docker-repository-url>
                    ec2-3-123-231-118.eu-central-1.compute.amazonaws.com:5000
                </docker-repository-url>
                <docker-dir>docker-test</docker-dir>
                <docker-image-name>stock-test</docker-image-name>
                <liquibase.propertyFile>liquibase/liquibase-test.yml</liquibase.propertyFile>
            </properties>
        </profile>
        <profile>
            <id>prod</id>
            <properties>
                <docker-repository-url>
                    not def
                </docker-repository-url>
                <docker-dir>docker-prod</docker-dir>
                <docker-image-name>stock-test</docker-image-name>
                <liquibase.propertyFile>/liquibase/liquibase-prod.yml</liquibase.propertyFile>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.amazonaws</groupId>
            <artifactId>aws-java-sdk-ses</artifactId>
            <version>${com.amazonaws.version}</version>
        </dependency>
        <dependency>
            <groupId>com.sun.mail</groupId>
            <artifactId>javax.mail</artifactId>
            <version>${com.sun.mail.version}</version>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${io.jsonwebtoken.version}</version>
        </dependency>
        <dependency>
            <groupId>org.freemarker</groupId>
            <artifactId>freemarker</artifactId>
            <version>${org.freemarker.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.poi</groupId>
            <artifactId>poi-scratchpad</artifactId>
            <version>${org.apache.poi.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jsoup</groupId>
            <artifactId>jsoup</artifactId>
            <version>${org.jsoup.version}</version>
        </dependency>

        <!--        JDBI-->
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-sqlobject</artifactId>
            <version>${org.jdbi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-jackson2</artifactId>
            <version>${org.jdbi.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jdbi</groupId>
            <artifactId>jdbi3-core</artifactId>
            <version>${org.jdbi.version}</version>
        </dependency>

        <!--spring-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springdoc</groupId>
            <artifactId>springdoc-openapi-ui</artifactId>
            <version>${springdoc.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${org.mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.github.pengrad</groupId>
            <artifactId>java-telegram-bot-api</artifactId>
            <version>${telegram.bot.version}</version>
        </dependency>

    </dependencies>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>3.5.5</version>
                <configuration>
                    <propertyFile>${liquibase.propertyFile}</propertyFile>
                </configuration>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <encoding>Cp1251</encoding>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.5.1</version>
                <configuration>
                    <source>11</source>
                    <target>11</target>
                    <encoding>Cp1251</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>2.2.2.RELEASE</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <mainClass>${start-class}</mainClass>
                    <executable>true</executable>
                    <fork>true</fork>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.8.2</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.2.2</version>
                <configuration>
                    <imageName>${docker-image-name}:${project.version}</imageName>
                    <dockerDirectory>${docker-dir}</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>tag-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>tag</goal>
                        </goals>
                        <configuration>
                            <image>${docker-image-name}:${project.version}</image>
                            <newName>
                                ${docker-repository-url}/${docker-image-name}:${project.version}
                            </newName>
                        </configuration>
                    </execution>
                    <execution>
                        <id>push-image</id>
                        <phase>deploy</phase>
                        <goals>
                            <goal>push</goal>
                        </goals>
                        <configuration>
                            <serverId>${docker-dir}</serverId>
                            <imageName>
                                ${docker-repository-url}/${docker-image-name}:${project.version}
                            </imageName>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>